<?xml version='1.0' encoding='utf-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<id>https://blog.racca.me</id>
<title><![CDATA[Seba's Blog]]></title>
<subtitle>
<![CDATA[Sebastiano Racca's personal blog. Discover new ways of thinking, new technologies and much more.]]>
</subtitle>
<icon>https://blog.racca.me/favicon.png</icon>
<link href="https://blog.racca.me"/>
<link href="https://blog.racca.me/atom.xml" rel="self" type="application/atom+xml"/>
<updated>2024-01-11T10:42:46.367Z</updated>
<author>
  <name><![CDATA[Sebastiano Racca]]></name>
</author>
<category term="Hosting" scheme="https://blog.racca.me/?tags=Hosting" />
<category term="Hetzner" scheme="https://blog.racca.me/?tags=Hetzner" />
<category term="Referral" scheme="https://blog.racca.me/?tags=Referral" />
<category term="QRCode" scheme="https://blog.racca.me/?tags=QRCode" />
<category term="Barcode" scheme="https://blog.racca.me/?tags=Barcode" />
<category term="Linux" scheme="https://blog.racca.me/?tags=Linux" />
<category term="Shell" scheme="https://blog.racca.me/?tags=Shell" />
<category term="Tips" scheme="https://blog.racca.me/?tags=Tips" />
<category term="Bash" scheme="https://blog.racca.me/?tags=Bash" />
<category term="Fish" scheme="https://blog.racca.me/?tags=Fish" />
<category term="Telegram" scheme="https://blog.racca.me/?tags=Telegram" />
<category term="Bot" scheme="https://blog.racca.me/?tags=Bot" />
<category term="Automation" scheme="https://blog.racca.me/?tags=Automation" />
<category term="TelegramSDK" scheme="https://blog.racca.me/?tags=TelegramSDK" />
<category term="Email" scheme="https://blog.racca.me/?tags=Email" />
<category term="Gmail" scheme="https://blog.racca.me/?tags=Gmail" />
<category term="Clodflare" scheme="https://blog.racca.me/?tags=Clodflare" />
<category term="Password" scheme="https://blog.racca.me/?tags=Password" />
<category term="Security" scheme="https://blog.racca.me/?tags=Security" />
<category term="Privacy" scheme="https://blog.racca.me/?tags=Privacy" />
<category term="Series-FirstBot" scheme="https://blog.racca.me/?tags=tags-Series=FirstBot" />
<entry>
    <title type="html"><![CDATA[Best Practices for Passwords]]></title>
    <author><name><![CDATA[Sebastiano Racca]]></name></author>
    <link href="https://blog.racca.me/passwords-best-practices" />
    <id>https://blog.racca.me/passwords-best-practices</id>
    <published>2024-01-07T15:25:40.000Z</published>
    <updated>2024-01-07T15:25:40.000Z</updated>
    <summary type="html"><![CDATA[🔒 Learn about passwords]]></summary>
    <content type="html"><![CDATA[<h2 id="introduction"><a href="#introduction">Introduction</a></h2>
<p>A password is a string of characters used to verify the identity of a user during the authentication process.
Passwords are typically used in tandem with a username; they are designed to be known only to the user and allow that user to gain access to a device, application or website.
Passwords can vary in length and can contain letters, numbers and special characters.</p>
<h2 id="how-to-create-a-secure-password"><a href="#how-to-create-a-secure-password">How to create a secure password</a></h2>
<p>Passwords, when carefully created and protected, increase safe and secure interactions online and in the workplace and can prevent password cracking.
To maximize the strength and efficacy of passwords, organizations often establish password policies.
These policies are designed to help users create strong passwords and adopt best practices for managing login credentials.
According to the traditional advice, a strong password has:</p>
<ul>
<li><strong>Minumum 12 Characters</strong>;</li>
<li><strong>Both uppercase and lowercase letters</strong>;</li>
<li><strong>At least one number</strong>;</li>
<li><strong>At least one special character</strong>.</li>
</ul>
<h3 id="what-you-shouldn-and-39-t-include"><a href="#what-you-shouldn-and-39-t-include">What you shouldn&#39;t include</a></h3>
<ul>
<li><strong>Dictionary Word</strong> or Combination of them;</li>
<li><strong>Easily guessed elements</strong>, such as names of children, pet names and birthdays;</li>
<li><strong>Obvious Substitutions</strong>, such as <em>H3llo</em> or <em>H0use</em></li>
</ul>
<h2 id="use-password-managers"><a href="#use-password-managers">Use password managers</a></h2>
<p>One of the best advices I always give is to store your password with a password manager like <a href="https://bitwarden.com/" rel="external" >bitwarden</a> and use passwords generators you trust to generate them for you, because:</p>
<blockquote>
<p>If you can remember a password, a computer can remember it too.</p>
</blockquote>
<p>Bitwardern offers a <a href="https://bitwarden.com/password-generator/" rel="external" >password generator</a> but if you&#39;re a linux user you could use <code class="inline-code-block">pwgen</code>, here&#39;s an example to generate a password with 16 characters:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-bash">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">pwgen <span class="token number">16</span> <span class="token number">1</span></div></div>`}</code></pre></CodeCopy></div>
<h2 id="test-your-password"><a href="#test-your-password">Test your password</a></h2>
<p>Here&#39;s how you can test the effectiveness of your password:</p>
<PasswordCrack />
]]></content>
    <category term="Password" scheme="https://blog.racca.me/?tags=Password" />
<category term="Security" scheme="https://blog.racca.me/?tags=Security" />
<category term="Privacy" scheme="https://blog.racca.me/?tags=Privacy" />
    </entry>
<entry>
    <title type="html"><![CDATA[How to Choose your Linux Shell]]></title>
    <author><name><![CDATA[Sebastiano Racca]]></name></author>
    <link href="https://blog.racca.me/choose-your-linux-shell" />
    <id>https://blog.racca.me/choose-your-linux-shell</id>
    <published>2023-12-28T20:58:28.000Z</published>
    <updated>2023-12-28T20:58:28.000Z</updated>
    <summary type="html"><![CDATA[⌨️ 5 alternatives to Bash]]></summary>
    <content type="html"><![CDATA[<h2 id="introduction"><a href="#introduction">Introduction</a></h2>
<p>In the world of Unix-based operating systems, the default shell is often <a href="https://www.gnu.org/software/bash/" rel="external" >Bash</a>. However, the open-source nature of Linux allows for a variety of alternatives, each catering to different preferences and use cases.</p>
<p>In this tutorial, we&#39;ll explore five alternatives to Bash and guide you on how to choose the Linux shell that best suits your needs.</p>
<h2 id="fish-friendly-interactive-shell"><a href="#fish-friendly-interactive-shell">Fish (Friendly Interactive Shell)</a></h2>
<p><a href="https://fishshell.com/" rel="external" >Fish</a> stands out for its user-friendly design and interactive features.
If you value simplicity and a clean interface, Fish might be the shell for you.</p>
<h3 id="pros"><a href="#pros">Pros</a></h3>
<ol>
<li><strong>User-Friendly Interface</strong>: Fish boasts a clean and straightforward design, making it an excellent choice for users who prefer an intuitive and visually appealing experience;</li>
<li><strong>Auto-Completion</strong>: Fish suggests commands as you type, based on command history, completions, and valid file paths;</li>
<li><strong>Excellent documentation</strong>: Fish has a great tutorial and the official documentation is clear, full of eloquent examples, and to the point.</li>
</ol>
<h3 id="cons"><a href="#cons">Cons</a></h3>
<ol>
<li><strong>Not POSIX compliant</strong>: Fish prioritizes a more modern and user-centric approach, incorporating features like syntax highlighting, auto-suggestions, and a simplified scripting language.</li>
<li><strong>Slow</strong>: Much of the functionality in Fish was not written with performance in mind. However, scripting in a shell is not supposed to be about performance.</li>
<li><strong>Doesn&#39;t support history expansion</strong>: Fish has no support for <code class="inline-code-block">!!</code>, but you can use <a href="https://github.com/oh-my-fish/oh-my-fish" rel="external" >Oh My Fish shell framework</a> and install bang-bang plugin to have this shortcut in Fish shell.</li>
</ol>
<h3 id="installation"><a href="#installation">Installation</a></h3>
<p>Installing Fish is a straightforward process and can be accomplished using package managers on various Linux distributions.</p>
<p>Debian/Ubuntu-based Systems:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-sh">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> fish</div></div>`}</code></pre></CodeCopy></div>
<p>Red Hat-based Systems:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-sh">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> yum <span class="token function">install</span> fish</div></div>`}</code></pre></CodeCopy></div>
<p>Arch Linux:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-sh">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> fish</div></div>`}</code></pre></CodeCopy></div>
<p>sudo pacman -S fish</p>
<div class="code-block  "><CodeCopy><pre><code class="language-sh">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">brew <span class="token function">install</span> fish</div></div>`}</code></pre></CodeCopy></div>
<h2 id="zsh-z-shell"><a href="#zsh-z-shell">zsh (Z Shell)</a></h2>
<p><a href="https://www.zsh.org/" rel="external" >Zsh</a> is a highly customizable shell known for its extensive features and scripting capabilities.
It provides an interactive command-line editor, improved autocompletion, and a vibrant community that contributes to a vast collection of plugins and themes.</p>
<h3 id="pros"><a href="#pros">Pros</a></h3>
<ol>
<li><strong>Robust Plugin Ecosystem</strong>: The Zsh community has developed a rich ecosystem of plugins that extend its functionality. These plugins cover a wide range of tasks, from Git integration to syntax highlighting.</li>
<li><strong>Powerful Scripting</strong>: Zsh offers advanced scripting features, making it a preferred choice for users who engage in complex automation and scripting tasks.</li>
</ol>
<h3 id="cons"><a href="#cons">Cons</a></h3>
<ol>
<li><strong>Learning Curve</strong>: Due to its extensive feature set, Zsh has a steeper learning curve compared to simpler shells. New users might need some time to explore and configure its numerous options effectively.</li>
<li><strong>Requires a lot of configuration</strong>:  Zsh requires a lot of tinkering with configuration files and downloading plugins in order to be able to do tasks which other shells may be able to do out of the box.</li>
</ol>
<h3 id="installation"><a href="#installation">Installation</a></h3>
<p>Zsh is available through package managers on most Linux distributions. Below are examples for different package managers.</p>
<p>Debian/Ubuntu-based Systems:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-sh">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">zsh</span></div></div>`}</code></pre></CodeCopy></div>
<p>Red Hat-based Systems:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-sh">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token function">zsh</span></div></div>`}</code></pre></CodeCopy></div>
<p>Arch Linux:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-sh">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> <span class="token function">zsh</span></div></div>`}</code></pre></CodeCopy></div>
<p>macOS:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-sh">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">brew <span class="token function">install</span> <span class="token function">zsh</span></div></div>`}</code></pre></CodeCopy></div>
<h2 id="ksh-korn-shell"><a href="#ksh-korn-shell">ksh (Korn Shell)</a></h2>
<p><a href="http://www.kornshell.com/" rel="external" >Ksh</a> is a powerful and efficient shell known for its scripting capabilities and compatibility with Bash.</p>
<h3 id="pros"><a href="#pros">Pros</a></h3>
<ol>
<li><strong>Compatibility</strong>: Ksh maintains compatibility with Bash, which makes it a seamless transition for users already familiar with Bash scripting.</li>
<li><strong>Efficiency</strong>: Ksh is designed for efficiency, making it a suitable choice for both interactive use and scripting tasks.</li>
</ol>
<h3 id="cons"><a href="#cons">Cons</a></h3>
<ol>
<li><strong>Less Interactive Features</strong>: While Ksh is powerful for scripting, it may lack some of the interactive features found in shells like <a href="#fish-friendly-interactive-shell"  >Fish</a> or <a href="#zsh-z-shell"  >Zsh</a>. Users who prioritize interactive use might need to explore additional plugins or configurations.</li>
<li><strong>Learning Curve</strong>: For users new to Unix-like shells, Ksh might have a steeper learning curve compared to more user-friendly options like <a href="#fish-friendly-interactive-shell"  >Fish</a>. However, its comprehensive documentation can aid in the learning process.</li>
</ol>
<h3 id="installation"><a href="#installation">Installation</a></h3>
<p>Installing Ksh varies depending on your Linux distribution.</p>
<p>Debian/Ubuntu-based Systems:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-sh">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ksh</div></div>`}</code></pre></CodeCopy></div>
<p>Red Hat-based Systems:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-sh">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> yum <span class="token function">install</span> ksh</div></div>`}</code></pre></CodeCopy></div>
<p>Arch Linux:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-sh">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> ksh</div></div>`}</code></pre></CodeCopy></div>
<p>macOS:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-sh">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">brew <span class="token function">install</span> ksh</div></div>`}</code></pre></CodeCopy></div>
<h2 id="csh-c-shell"><a href="#csh-c-shell">csh (C Shell)</a></h2>
<p><a href="https://www.csh.org/" rel="external" >Csh</a> is known for its C-like syntax and scripting capabilities, caters to users who appreciate a familiar language structure.</p>
<h3 id="pros"><a href="#pros">Pros</a></h3>
<ol>
<li><strong>C-Like Syntax</strong>: Users familiar with C programming will find the C Shell&#39;s syntax comfortable and easy to grasp. This can be an advantage for those transitioning from C or C++ environments.</li>
<li><strong>Scripting</strong>: Csh offers powerful scripting features, making it suitable for automation and complex scripting tasks. If you&#39;re accustomed to C-like languages, you might find the scripting in C Shell more natural.</li>
</ol>
<h3 id="cons"><a href="#cons">Cons</a></h3>
<ol>
<li><strong>Limited Interactive Features</strong>: Compared to modern shells like <a href="#fish-friendly-interactive-shell"  >Fish</a> or <a href="#zsh-z-shell"  >Zsh</a>, the C Shell may lack some interactive features, such as advanced auto-completion and syntax highlighting.</li>
<li><strong>Less Popular</strong>: The C Shell is not as widely adopted as shells like Bash or <a href="#zsh-z-shell"  >Zsh</a>. As a result, the community support and availability of plugins may be more limited.</li>
</ol>
<h3 id="installation"><a href="#installation">Installation</a></h3>
<p>Installing the C Shell is typically straightforward, and it is available through package managers on various systems.</p>
<p>Debian/Ubuntu-based Systems:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-sh">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> csh</div></div>`}</code></pre></CodeCopy></div>
<p>Red Hat-based Systems:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-sh">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> yum <span class="token function">install</span> csh</div></div>`}</code></pre></CodeCopy></div>
]]></content>
    <category term="Linux" scheme="https://blog.racca.me/?tags=Linux" />
<category term="Shell" scheme="https://blog.racca.me/?tags=Shell" />
<category term="Tips" scheme="https://blog.racca.me/?tags=Tips" />
<category term="Bash" scheme="https://blog.racca.me/?tags=Bash" />
<category term="Fish" scheme="https://blog.racca.me/?tags=Fish" />
    </entry>
<entry>
    <title type="html"><![CDATA[I have nothing to hide. Why should I care about my privacy?]]></title>
    <author><name><![CDATA[Sebastiano Racca]]></name></author>
    <link href="https://blog.racca.me/why-care-about-privacy" />
    <id>https://blog.racca.me/why-care-about-privacy</id>
    <published>2023-12-16T15:22:10.000Z</published>
    <updated>2023-12-16T15:22:10.000Z</updated>
    <summary type="html"><![CDATA[👀 Reasons why you should care about your privacy]]></summary>
    <content type="html"><![CDATA[<h2 id="privacy-isnt-about-hiding"><a href="#privacy-isnt-about-hiding">Privacy isn’t about hiding</a></h2>
<p>The &quot;I have nothing to hide&quot; argument frames privacy as something only criminals and other bad actors would demand, but nothing could be further from the truth.
Privacy is about the <strong>freedom</strong> to make choices without fear: how you want to live, what you believe in, who you are friends with, and what you want to share with whom.
A lack of privacy leads to uniformity and <strong>self-censorship</strong>, which pushes our opinions to the edges and erodes our ability to engage in healthy debate.</p>
<p>Ultimately, privacy also protects us from the unknown.
Circumstances change.
Something that can be harmlessly shared today may <strong>someday</strong> be worth concealing, whether it’s political beliefs or your ethnic or religious background.
Privacy is the <strong>ultimate insurance</strong> against a rapidly changing corporate and political climate.</p>
<p>Once we lose our privacy, we won’t get it back.</p>
<h2 id="privacy-is-a-human-right"><a href="#privacy-is-a-human-right">Privacy is a human right</a></h2>
<p>Just like other human rights, we didn’t always have the right to privacy.
Several dictatorships around the world still don&#39;t value this right.
Generations before ours fought for our right to privacy.
Not caring about it shows little knowledge about history and the importance of it.</p>
<p><strong>Article 12 of Universal Declaration of Human Rights</strong> states: </p>
<blockquote>
<p>No one shall be subjected to arbitrary interference with his privacy, family, home
or correspondence, nor to attacks upon his honour and reputation.</p>
</blockquote>
<!-- Source: https://www.un.org/sites/un2.un.org/files/2021/03/udhr.pdf -->

<p>It’s a <strong>human right</strong> just like the right to equality, to justice, freedom, a nationality, the right to religion, etc.</p>
<h2 id="your-information-is-valuable"><a href="#your-information-is-valuable">Your information is valuable</a></h2>
<p>You might be okay with governments or security agencies or companies having your private information.
You might trust Google and Facebook.
But what if these get hacked and your <strong>information</strong> falls in the <strong>wrong hands</strong>?
Let’s say, someone targeting your family, your company, your wife/husband.
Would you still be okay with that? Would you be okay knowing that your photos, emails, or chats are in the hands of someone who can <strong>blackmail</strong> you?
Can you imagine what it’s like to have your life torn apart because of a conversation you had 5 or 10 years ago?
What would it be like to lose your job because of a conversation you had by phone with your wife?</p>
<p>We’ve all joked with things we consider sensitive.
But, among friends, it’s something we all do.
In fact, <strong>our behavior changes depending on the people we’re with</strong>.
I bet I could find something offensive you said in a group chat that you have with your closest friends.
Because they’re your friends and it was a joke or a sarcastic remark.
But take it out of context and it is not longer a joke.
What would happen if this “joke” fell in the hands of someone trying to <strong>harm</strong> you?</p>
<p>A company like Facebook or Google allows you to upload unlimited data to their servers, for free.
What’s their business model?
<strong>How do they make so much money?</strong>
They <strong>sell your info</strong> to advertising companies.
But they never asked you if you wanted to sell your information.
If someone asked you in person 100 questions about your personal life to sell it, would you answer them?
Probably not, right?
But you let this happen every time you use a service that makes money by selling your info.</p>
]]></content>
    <category term="Privacy" scheme="https://blog.racca.me/?tags=Privacy" />
    </entry>
<entry>
    <title type="html"><![CDATA[Privacy Policy]]></title>
    <author><name><![CDATA[Sebastiano Racca]]></name></author>
    <link href="https://blog.racca.me/privacy-policy" />
    <id>https://blog.racca.me/privacy-policy</id>
    <published>2023-12-14T17:41:20.000Z</published>
    <updated>2023-12-14T17:41:20.000Z</updated>
    <summary type="html"><![CDATA[undefined]]></summary>
    <content type="html"><![CDATA[<h2 id="introduction"><a href="#introduction">Introduction</a></h2>
<p>This Privacy Policy describes Our policies and procedures on the collection, use and disclosure of Your information when You use the Service and tells You about Your privacy rights and how the law protects You.</p>
<p>We use Your Personal data to provide and improve the Service.
By using the Service, You agree to the collection and use of information in accordance with this Privacy Policy.</p>
<h2 id="interpretation-and-definitions"><a href="#interpretation-and-definitions">Interpretation and Definitions</a></h2>
<h3 id="interpretation"><a href="#interpretation">Interpretation</a></h3>
<p>The words of which the initial letter is capitalized have meanings defined under the following conditions.
The following definitions shall have the same meaning regardless of whether they appear in singular or in plural.</p>
<h3 id="definitions"><a href="#definitions">Definitions</a></h3>
<p>For the purposes of this Privacy Policy:</p>
<ul>
<li><p><strong>Company</strong> (referred to as either &quot;the Company&quot;, &quot;We&quot;, &quot;Us&quot; or &quot;Our&quot; in this Agreement) refers to Sebastiano Racca&#39;s Blog.</p>
</li>
<li><p><strong>Device</strong> means any device that can access the Service such as a computer, a cellphone or a digital tablet.</p>
</li>
<li><p><strong>Personal Data</strong> is any information that relates to an identified or identifiable individual.</p>
</li>
<li><p><strong>Service</strong> refers to the Website.</p>
</li>
<li><p><strong>Service Provider</strong> means any natural or legal person who processes the data on behalf of the Company. It refers to third-party companies or individuals employed by the Company to facilitate the Service, to provide the Service on behalf of the Company, to perform services related to the Service or to assist the Company in analyzing how the Service is used.</p>
</li>
<li><p><strong>Usage Data</strong> refers to data collected automatically, either generated by the use of the Service or from the Service infrastructure itself (for example, the duration of a page visit).</p>
</li>
<li><p><strong>Website</strong> refers to Sebastiano Racca&#39;s Blog, accessible from <a href="https://blog.racca.me" rel="external" >https://blog.racca.me</a></p>
</li>
<li><p><strong>You</strong> means the individual accessing or using the Service, or the company, or other legal entity on behalf of which such individual is accessing or using the Service, as applicable.</p>
</li>
</ul>
<h2 id="collecting-and-using-your-personal-data"><a href="#collecting-and-using-your-personal-data">Collecting and Using Your Personal Data</a></h2>
<p>This section outlines how Your Personal Data is collected and used when You access or use the Service.</p>
<p>While the Company, Sebastiano Racca&#39;s Blog, does not personally collect any data, it&#39;s important to note that third-party services, such as GitHub Pages and Cloudflare, are utilized to provide and enhance the Service.
These third-party services may collect certain information automatically when You interact with the Website.
Please refer to the privacy policies of GitHub Pages and Cloudflare for details on their data collection and processing practices.</p>
<h3 id="purpose-of-data-collection"><a href="#purpose-of-data-collection">Purpose of Data Collection</a></h3>
<p>The primary purpose of collecting and using Your Personal Data is to ensure the proper functioning and improvement of the Service.
The Company does not use cookies directly; however, third-party services may use cookies for various purposes, including web analytics.</p>
<h3 id="service-providers"><a href="#service-providers">Service Providers</a></h3>
<p>The Company may employ third-party companies or individuals (&quot;Service Providers&quot;) to facilitate the Service, provide the Service on behalf of the Company, perform services related to the Service, or assist the Company in analyzing how the Service is used.
These Service Providers may have access to Your Personal Data only to perform these tasks on Our behalf and are obligated not to disclose or use it for any other purpose.</p>
<h3 id="usage-data"><a href="#usage-data">Usage Data</a></h3>
<p>Usage Data refers to data collected automatically, either generated by the use of the Service or from the Service infrastructure itself. This may include the duration of a page visit, but the Company does not personally analyze or process this data.</p>
<h3 id="your-rights"><a href="#your-rights">Your Rights</a></h3>
<p>As an individual accessing or using the Service, You have rights regarding Your data. Even though the Company does not directly collect Personal Data, You may refer to the privacy policies of GitHub Pages and Cloudflare for information on how to exercise Your rights with respect to the data they may collect.</p>
<h2 id="children-and-39-s-privacy"><a href="#children-and-39-s-privacy">Children&#39;s Privacy</a></h2>
<p>Our Service does not address anyone under the age of 13.
If You are a parent or guardian and You are aware that Your child has provided Us with Personal Data, please contact Us.</p>
<h2 id="changes-to-this-privacy-policy"><a href="#changes-to-this-privacy-policy">Changes to This Privacy Policy</a></h2>
<p>This Privacy Policy may be updated to reflect changes in Our data practices, applicable laws, or to address new concerns.
The date of the last update will be indicated at the beginning of the Privacy Policy.
Significant changes will be notified to users through appropriate means.
You are advised to review this Privacy Policy periodically for any changes.
Changes to this Privacy Policy are effective when they are posted on this page.</p>
<h2 id="contact-us"><a href="#contact-us">Contact Us</a></h2>
<p>If you have any questions about this Privacy Policy, You can contact us:</p>
<ul>
<li>By email: <a href="mailto:sebastiano@racca.me"  >sebastiano@racca.me</a></li>
<li>By visiting this page on our website: <a href="https://racca.me/contact" rel="external" >https://racca.me/contact</a></li>
</ul>
]]></content>
    
    </entry>
<entry>
    <title type="html"><![CDATA[Barcodes VS QR Codes]]></title>
    <author><name><![CDATA[Sebastiano Racca]]></name></author>
    <link href="https://blog.racca.me/barcodes-vs-qr-codes" />
    <id>https://blog.racca.me/barcodes-vs-qr-codes</id>
    <published>2023-12-05T18:10:53.000Z</published>
    <updated>2023-12-14T18:47:53.000Z</updated>
    <summary type="html"><![CDATA[🖥 Barcodes VS QR Codes - 101 comparison]]></summary>
    <content type="html"><![CDATA[<h2 id="barcodes-vs-qr-codes-101-comparison"><a href="#barcodes-vs-qr-codes-101-comparison">Barcodes VS QR Codes - 101 Comparison</a></h2>
<p>Both barcodes and QR codes offer great functionalities and have embedded themselves in our everyday life, from business applications to personal use.</p>
<p>In this article we&#39;re going to look advantages and disdvantages of both types.</p>
<h2 id="barcodes"><a href="#barcodes">Barcodes</a></h2>
<p>A barcode is a method of representing data in a visual, machine-readable form.</p>
<ul>
<li><strong>1-dimentional barcodes</strong>: represent data by varying the widths, spacings and sizes of parallel lines.</li>
<li><strong>2-dimentional barcodes</strong> (<em>or matrix codes</em>): represent data using rectangles, dots, hexagons and other patterns.</li>
</ul>
<p>The main components of a barcode include:</p>
<ul>
<li><strong>Quiet zone</strong>: blank margin located at either end of a barcode;</li>
<li><strong>Barcode symbol</strong>: the actual representation of the data;</li>
<li><strong>Start character</strong>: the first character in the sequence above the bars;</li>
<li><strong>Data message</strong>: the following characters;</li>
<li><strong>Check digit</strong>: the penultimate character;</li>
<li><strong>Stop character</strong>: the last character in the sequence.</li>
</ul>
<p>There are several types of barcodes, each one with symbol variations:</p>
<ul>
<li><strong>EAN (JAN)</strong>:<ul>
<li>Displays only numerals (0 to 9);</li>
<li>Commonly used for products;</li>
<li>Compatible with EAN in Europe and UPC in the USA.</li>
</ul>
</li>
<li><strong>Interleaved 2 of 5</strong>:<ul>
<li>Uses numerals (0 to 9);</li>
<li>Standard distribution code;</li>
<li>Common in logistics.</li>
</ul>
</li>
<li><strong>Codabar (NW-7)</strong>:<ul>
<li>Uses numerals (0 to 9), symbols, and start-stop characters (a to d);</li>
<li>Easily printed;</li>
<li>Mainly used for shipping labels, envelopes, and laboratory samples.</li>
</ul>
</li>
<li><strong>CODE 39</strong>:<ul>
<li>Comprises numerals, symbols, alphabetical letters, and start-stop characters;</li>
<li>Commonly used in factory automation.</li>
</ul>
</li>
<li><strong>CODE 128</strong>:<ul>
<li>Uses all 128 ASCII characters;</li>
<li>Includes 3 start characters, 1 stop character, 4 non-data function characters, and 4 code setting selection characters;</li>
<li>Mostly used for electronic part management.</li>
</ul>
</li>
</ul>
<h3 id="advantages"><a href="#advantages">Advantages</a></h3>
<ul>
<li><p><strong>Accuracy</strong>: Barcodes enhance data accuracy by minimizing the potential for human errors during data entry. This is crucial for maintaining precise records and preventing mistakes that can occur in manual data input.</p>
</li>
<li><p><strong>Speed</strong>: Scanning barcodes is a quick and efficient process, allowing for the rapid handling of transactions. This speed is particularly beneficial in environments where large volumes of data need to be processed swiftly, such as in retail, logistics, and manufacturing.</p>
</li>
<li><p><strong>Cost-effectiveness</strong>: Barcodes are a cost-effective solution for companies of all sizes. They are relatively easy to create, implement, and use. The real-time tracking capabilities provided by barcodes contribute to efficient inventory management, reducing the risks of stock shortages and overstocking. This can lead to cost savings and improved overall inventory control.</p>
</li>
<li><p><strong>Improved Customer Service</strong>: Barcodes enable businesses to quickly access and retrieve customer information, facilitating
personalized and efficient service. This capability is especially valuable in retail and other customer-oriented industries, where providing tailored service can enhance the customer experience and satisfaction.</p>
</li>
</ul>
<h3 id="disadvantages"><a href="#disadvantages">Disadvantages</a></h3>
<ul>
<li><p><strong>Restricted data</strong>: Barcodes typically store a limited amount of data, such as a serial number or product code. For more detailed information, additional labels or tags may be required. This limitation can be a drawback when more comprehensive data storage is needed.</p>
</li>
<li><p><strong>Damage-prone</strong>: Barcodes can be susceptible to damage. Scratches or other forms of damage may make the barcode unreadable, leading to potential issues in data collection and accuracy.</p>
</li>
<li><p><strong>Technology Dependency</strong>: Barcodes depend on specialized hardware, such as barcode scanners or mobile devices equipped with scanning capabilities. The need for specific technology may limit accessibility and compatibility with certain systems, especially in environments where such equipment is not readily available.</p>
</li>
<li><p><strong>Security Concerns</strong>: Barcodes, if not properly secured, can be easily copied. This vulnerability may pose a risk of fraud or counterfeiting, especially if the barcodes are used for authentication or verification purposes.</p>
</li>
<li><p><strong>Environmental Impact</strong>: The materials used to make barcodes are often non-biodegradable. Improper disposal of barcode-related materials can contribute to environmental issues, such as increased trash and pollution. Considering environmentally friendly alternatives or disposal methods becomes important in addressing this concern.</p>
</li>
</ul>
<h3 id="generate-barcodes-linux"><a href="#generate-barcodes-linux">Generate Barcodes (Linux)</a></h3>
<p>Install the barcode generator:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-bash">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> <span class="token function">apt-get</span> update</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> barcode</div></div>`}</code></pre></CodeCopy></div>
<p>Generate the barcode:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-bash">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">barcode <span class="token parameter variable">-E</span> <span class="token parameter variable">-b</span> <span class="token string">"id:0123456789"</span> <span class="token operator">></span> barcode.ps</div></div>`}</code></pre></CodeCopy></div>
<p>Convert it to png:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-bash">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">convert barcode.ps barcode.png</div></div>`}</code></pre></CodeCopy></div>
<h2 id="qr-codes"><a href="#qr-codes">QR Codes</a></h2>
<p>QR Codes are a type of two-dimensional matrix barcodes, they consists of black squares arranged in a square grid on a white background, including some fiducial markers, which can be read by an imaging device.</p>
<p>QR codes offer remarkable versatility, making them a powerful tool for various applications:</p>
<ul>
<li><p><strong>Share links</strong>: Generate QR codes with multiple links to effortlessly share URLs, such as web pages, social media profiles, or document links;</p>
</li>
<li><p><strong>Send emails</strong>: Simplify communication by sending emails with a quick scan, facilitating seamless connections (<em>i.e. including reaching out to customer support</em>);</p>
</li>
<li><p><strong>Make phone calls</strong>: Streamline phone calls by using QR codes that redirect to a phone number, eliminating the need to manually dial;</p>
</li>
<li><p><strong>Send SMS</strong>: Enhance convenience by utilizing QR codes for preset text messages, sparing users the effort of typing messages manually;</p>
</li>
<li><p><strong>Share WhatsApp contacts</strong>: Instantly open WhatsApp chat windows without the hassle of typing and saving contact numbers.</p>
</li>
<li><p><strong>Connect to Wifi</strong>: Expedite internet network connections without searching for network names or asking for passwords.</p>
</li>
</ul>
<h3 id="advantages"><a href="#advantages">Advantages</a></h3>
<ul>
<li><p><strong>Quick &amp; Simple</strong>: QR codes allow consumers to access information swiftly without the need for manual data entry or typing. This quick and simple process enhances user convenience;</p>
</li>
<li><p><strong>Large Capacity</strong>: QR codes have a larger data capacity compared to standard barcodes. This makes them versatile and suitable for various applications where more information needs to be stored;</p>
</li>
<li><p><strong>Versatility</strong>: QR codes are indeed versatile and find applications in product labeling, promotional materials, event tickets, and more. Their flexibility makes them useful in diverse contexts;</p>
</li>
<li><p><strong>Enhancing Consumer Experience</strong>: QR codes can enhance the consumer experience by providing additional information about goods or services. They can also be used to offer discounts and exclusive promotions, adding value for customers;</p>
</li>
<li><p><strong>Cost-effective</strong>: QR codes are cost-effective to generate and print. This affordability contributes to their widespread use as a means of providing additional information to customers without significant expense.</p>
</li>
<li><p><strong>Contactless</strong>: QR codes can be scanned from a distance, allowing for contactless interactions. This is particularly valuable in public settings, promoting hygiene and safety by reducing the need for physical contact.</p>
</li>
</ul>
<h3 id="disadvantages"><a href="#disadvantages">Disadvantages</a></h3>
<ul>
<li><p><strong>Technology Dependency</strong>: Just like barcodes, QR Codes, depend on specialized hardware, such as barcode scanners or mobile devices equipped with scanning capabilities.</p>
</li>
<li><p><strong>Visual Aesthetic Concerns</strong>: Some argue that QR codes can be visually unappealing, and their presence might be considered intrusive in certain designs or settings.</p>
</li>
<li><p><strong>User Education</strong>: Some users may not be familiar with QR codes or may be unsure about how to use them.</p>
</li>
</ul>
<h3 id="generate-qr-codes-linux"><a href="#generate-qr-codes-linux">Generate QR Codes (Linux)</a></h3>
<p>Install the QR Code generator:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-bash">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> <span class="token function">apt-get</span> update</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> qrencode</div></div>`}</code></pre></CodeCopy></div>
<p>Generate the QR Code:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-bash">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">qrencode <span class="token parameter variable">-o</span> qrcode.png <span class="token string">'https://example.com'</span></div></div>`}</code></pre></CodeCopy></div>
]]></content>
    <category term="QRCode" scheme="https://blog.racca.me/?tags=QRCode" />
<category term="Barcode" scheme="https://blog.racca.me/?tags=Barcode" />
    </entry>
<entry>
    <title type="html"><![CDATA[Create a Custom Email address with Gmail and Cloudflare]]></title>
    <author><name><![CDATA[Sebastiano Racca]]></name></author>
    <link href="https://blog.racca.me/custom-email-with-cloudflare-and-gmail" />
    <id>https://blog.racca.me/custom-email-with-cloudflare-and-gmail</id>
    <published>2023-12-03T14:58:03.000Z</published>
    <updated>2023-12-03T14:58:03.000Z</updated>
    <summary type="html"><![CDATA[📩 Create a custom email address in 10 minutes]]></summary>
    <content type="html"><![CDATA[<h2 id="create-a-custom-email-address-for-free"><a href="#create-a-custom-email-address-for-free">Create a Custom Email Address for Free</a></h2>
<p>In the digital age, having a custom email address not only adds a professional touch to your communication but also enhances brand identity.
In this tutorial, we&#39;ll walk you through the process of setting up a custom email address using Cloudflare Email Routing and Gmail SMTP.
By the end of this guide, you&#39;ll be able to send and receive emails using your own domain, all while leveraging the power and reliability of Gmail.</p>
<h3 id="prerequisites"><a href="#prerequisites">Prerequisites</a></h3>
<p>Before we dive into the steps, make sure you have the following prerequisites in place:</p>
<ul>
<li>An active Gmail account.</li>
<li>A domain registered with Cloudflare.</li>
<li>Access to your domain&#39;s DNS settings on Cloudflare.</li>
</ul>
<h2 id="setup-your-google-account"><a href="#setup-your-google-account">Setup Your Google Account</a></h2>
<h3 id="enable-2-factor-authentification"><a href="#enable-2-factor-authentification">Enable 2 Factor Authentification</a></h3>
<p>If you already have enabled two factor authentification you can safely skip this step.</p>
<ol>
<li>Open your <a href="https://myaccount.google.com/" rel="external" >Google Account</a>;</li>
<li>Select &quot;Security&quot; in the navigation panel;</li>
<li>Under “Signing in to Google,” select&quot; 2-Step Verification&quot;, then &quot;Get started&quot;;</li>
<li>Follow the on-screen steps.</li>
</ol>
<h3 id="create-an-app-password"><a href="#create-an-app-password">Create an App Password</a></h3>
<p>An app password is a 16-digit passcode that gives a less secure app or device permission to access your Google Account.</p>
<ol>
<li>Open the <a href="https://myaccount.google.com/apppasswords" rel="external" >App Passwords console</a> on your Google account;</li>
<li>Type a name for your applicatiom <em>i.e. &quot;My Custom Email&quot;</em></li>
<li>Safely store the 16-digit passcode, you&#39;ll need this later.</li>
</ol>
<h2 id="enable-cloudflare-and-39-s-email-routing"><a href="#enable-cloudflare-and-39-s-email-routing">Enable Cloudflare&#39;s Email Routing</a></h2>
<p>Emails that are routed through Cloudflare to your preferred email inbox, benefit from enhanced security, spam filtering, and improved deliverability.
Cloudflare Email Routing acts as a protective layer for your email infrastructure, shielding it from potential threats and optimizing the overall email experience.</p>
<ol>
<li>Go to the <strong><a href="https://dash.cloudflare.com" rel="external" >Cloudflare Dashboard</a></strong> and select your domain;</li>
<li>Go to <strong>Email</strong> <AndThen /> <strong>Email Routing</strong> <AndThen text="then select" /> <strong>Get Started</strong>;</li>
<li>Enter the custom email address in <strong>Custom Address</strong> (<em>i.e. <NotEmail email="cool-email@example.com" /></em>);</li>
<li>Enter the email address you want your emails to be forwarded to in <strong>Destination Address</strong> (<em>i.e. <NotEmail email="my-personal-email@gmail.com" /></em>);</li>
<li>Select <strong>Create and Continue</strong> <AndThen /> follow the instruction sent to your gmail address.</li>
<li>Go to the <strong>DNS</strong> section of the dashboard and add a new TXT record with the following content:</li>
</ol>
<div class="code-block  "><CodeCopy><pre><code class="language-txt">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">"v=spf1 include:_spf.mx.cloudflare.net include:_spf.google.com ~all"</div></div>`}</code></pre></CodeCopy></div>
<h2 id="add-your-cloudflare-routed-email-to-gmail"><a href="#add-your-cloudflare-routed-email-to-gmail">Add Your Cloudflare-Routed Email to Gmail</a></h2>
<p>Once did all the previous we can finally add the custom address to gmail.</p>
<ol>
<li>Go to your <a href="https://gmail.com/" rel="external" >Gmail Account</a> <AndThen text="then click on" /> <strong>Settings</strong> <AndThen text="then select" /> <strong>Accounts</strong>;</li>
<li>Select <strong>Add another email address</strong> under <strong>Send Mail As</strong>;</li>
<li>Fill the form with the name of the email and the Cloudflare-routed email (<em>i.e. <NotEmail email="cool-email@example.com" /></em>) <AndThen /> untick &quot;<strong>Treat as an alias</strong>&quot;;</li>
<li>Fill the next form with the following information:<br>
 <strong>SMTP Server</strong>: smtp.gmail.com<br>
 <strong>Port</strong>: 587<br>
 <strong>Username</strong>: your gmail address (<em>i.e. <NotEmail email="my-personal-email@gmail.com" /></em>)<br>
 <strong>Password</strong>: <a href="#create-an-app-password"  >the app password</a></li>
<li>Leave <strong>TLS</strong> enabled <AndThen /> click <strong>Add Account</strong></li>
<li>Confirm the email address with the code Google&#39;s sent you to your gmail account.</li>
</ol>
<h2 id="enjoy"><a href="#enjoy">Enjoy</a></h2>
<p>You now have a fully working email that is routed through Cloudflare to receive emails and uses Google&#39;s SMTP server to send them.</p>
<p>Whenever you send a new email via GMail, make sure to switch the sender accordingly to your preferences.</p>
]]></content>
    <category term="Email" scheme="https://blog.racca.me/?tags=Email" />
<category term="Gmail" scheme="https://blog.racca.me/?tags=Gmail" />
<category term="Clodflare" scheme="https://blog.racca.me/?tags=Clodflare" />
    </entry>
<entry>
    <title type="html"><![CDATA[Why I Love Hetzner Cloud]]></title>
    <author><name><![CDATA[Sebastiano Racca]]></name></author>
    <link href="https://blog.racca.me/7-reasons-i-love-hetzner" />
    <id>https://blog.racca.me/7-reasons-i-love-hetzner</id>
    <published>2023-11-08T16:12:00.000Z</published>
    <updated>2023-11-08T16:12:00.000Z</updated>
    <summary type="html"><![CDATA[❤️ 7 reasons why I love Hetzner Cloud]]></summary>
    <content type="html"><![CDATA[<h2 id="why-i-love-hetzner-cloud"><a href="#why-i-love-hetzner-cloud">Why I Love Hetzner Cloud</a></h2>
<p><a href="{refLink}"  >Hetzner Cloud</a> is a cloud computing service provided by Hetzner Online GmbH, a German web hosting company and data center operator. It offers virtual machines, known as cloud servers, that run on physical servers and are used to run an operating system and computer programs.</p>
<h3 id="pros"><a href="#pros">Pros</a></h3>
<ol>
<li><p><strong>Affordability</strong>: <a href="{refLink}"  >Hetzner Cloud</a> is known for its competitive pricing. It offers high-performance cloud servers at a reasonable cost, making it an attractive option for users on a budget;</p>
</li>
<li><p><strong>Performance</strong>: <a href="{refLink}"  >Hetzner</a>&#39;s servers utilize fast NVMe storage, which delivers excellent performance. This makes Hetzner a good choice for applications that require high I/O operations, such as databases or media servers;</p>
</li>
<li><p><strong>Ease of Use</strong>: <a href="{refLink}"  >Hetzner</a>&#39;s user interface is user-friendly, making it easy for beginners to navigate and use the service. It also supports cloud-init, allowing users to execute special commands while booting up their servers;</p>
</li>
<li><p><strong>Scalability</strong>: <a href="{refLink}"  >Hetzner</a> allows users to scale their servers up or down based on their needs. This is particularly useful for applications that experience fluctuating loads;</p>
</li>
<li><p><strong>Private Network</strong>: <a href="{refLink}"  >Hetzner</a> allows users to create servers without public IP addresses, providing an extra layer of security for applications that do not require an internet connection;</p>
</li>
<li><p><strong>APIs</strong>: <a href="{refLink}"  >Hetzner Cloud</a> provides a REST-API and a CLI tool for developers meaning that you can monitor or change the status of your server\b<em>s</em>;</p>
</li>
<li><p><strong>Referrals Program</strong>: Users can join <a href="{refLink}"  >Hetzner Cloud</a> with a special link that gives them <a href="{refLink}"  ><strong>€20 in free cloud credits</strong></a>.</p>
</li>
</ol>
<h3 id="cons"><a href="#cons">Cons</a></h3>
<ol>
<li><p><strong>Limited Disk Space</strong>: If you need a huge ammount of disk space, <a href="{refLink}"  >Hetzner Cloud</a> might not be the right solution for you;</p>
</li>
<li><p><strong>Strict Payment Policies</strong>: <a href="{refLink}"  >Hetzner</a> has strict payment policies. If there&#39;s a slight delay in your payment, your account may be deactivated;</p>
</li>
<li><p><strong>KYC Requirements</strong>: <a href="{refLink}"  >Hetzner</a> requires users to provide personal identification documents, such as a passport and proof of address, for Know Your Customer (KYC) purposes. This can be a barrier for users who are uncomfortable sharing personal information.</p>
</li>
</ol>
<h2 id="conclusion"><a href="#conclusion">Conclusion</a></h2>
<p>In conclusion, Hetzner Cloud offers a compelling array of advantages that make it a top choice for cloud hosting. Its affordability, outstanding performance, user-friendly interface, scalability, private network options, developer-friendly APIs, and a lucrative referral program are all standout features that have won over many users.</p>
]]></content>
    <category term="Hosting" scheme="https://blog.racca.me/?tags=Hosting" />
<category term="Hetzner" scheme="https://blog.racca.me/?tags=Hetzner" />
<category term="Referral" scheme="https://blog.racca.me/?tags=Referral" />
    </entry>
<entry>
    <title type="html"><![CDATA[Create a Telegram Echo Bot]]></title>
    <author><name><![CDATA[Sebastiano Racca]]></name></author>
    <link href="https://blog.racca.me/create-an-echo-bot" />
    <id>https://blog.racca.me/create-an-echo-bot</id>
    <published>2023-11-07T11:00:00.000Z</published>
    <updated>2023-12-12T10:00:00.000Z</updated>
    <summary type="html"><![CDATA[🤖 Create a Telegram Echo Bot]]></summary>
    <content type="html"><![CDATA[<h2 id="introduction"><a href="#introduction">Introduction</a></h2>
<p>This article is part of the <a href="/?tags-Series=PHPBot"  >FirstBot</a> series.
We recommend reading the <a href="/create-your-first-bot"  >introcution chapter</a> before continuing.</p>
<div class="code-block  "><CodeCopy><pre><code class="language-bash">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">composer</span> require telegramsdk/botapi</div></div>`}</code></pre></CodeCopy></div>
<h2 id="telegram-updates"><a href="#telegram-updates">Telegram Updates</a></h2>
<p>Before writing the code we have to mention that there are 2 methods to get updates from our Telegram bot.</p>
<ol>
<li><a href="https://core.telegram.org/bots/api#getupdates" rel="external" >getUpdates</a> : used for long polling , usefull if you don&#39;t have a public ip or an https url.</li>
<li><a href="https://core.telegram.org/bots/api#setwebhook" rel="external" >setWebhook</a> : more efficient way for recinving incoming updates, you need to have a public ip address with an https url.</li>
</ol>
<p>In this article we&#39;ll look into both ways of creating a Telegram Bot.</p>
<h2 id="start-coding"><a href="#start-coding">Start Coding</a></h2>
<h3 id="get-updates"><a href="#get-updates">Get Updates</a></h3>
<p>Here&#39;s a simple example on how to get updates from Telegram and reply to them with the same message they sent.</p>
<div class="code-block titled showLineNumber"><h2 class="code-title">bot.php</h2><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="line-number">1</span><span class="no-line-diff"></span></div><div class="code-content">&lt;?php</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">2</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">3</span><span class="no-line-diff"></span></div><div class="code-content">require_once  "vendor/autoload.php";</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">4</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">5</span><span class="no-line-diff"></span></div><div class="code-content">use TelegramSDK\BotAPI\Exception\TelegramException;</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">6</span><span class="no-line-diff"></span></div><div class="code-content">use TelegramSDK\BotAPI\Telegram\{Bot, Update};</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">7</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">8</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">9</span><span class="no-line-diff"></span></div><div class="code-content">define("GREEN_COLOR", "\033[0;32m");</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">10</span><span class="no-line-diff"></span></div><div class="code-content">define("RED_COLOR", "\033[0;31m");</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">11</span><span class="no-line-diff"></span></div><div class="code-content">define("DEFAULT_COLOR", "\033[0m");</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">12</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">13</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">14</span><span class="no-line-diff"></span></div><div class="code-content">&#36;bot = new Bot("YOUR_BOT_TOKEN", Update::UPDATES_FROM_GET_UPDATES);</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">15</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">16</span><span class="no-line-diff"></span></div><div class="code-content">if(!&#36;bot-&gt;isValidToken(true)) {</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">17</span><span class="no-line-diff"></span></div><div class="code-content">    echo RED_COLOR . "Invalid bot token.\n" . DEFAULT_COLOR;</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">18</span><span class="no-line-diff"></span></div><div class="code-content">    exit(1);</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">19</span><span class="no-line-diff"></span></div><div class="code-content">}</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">20</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">21</span><span class="no-line-diff"></span></div><div class="code-content">echo GREEN_COLOR . "Bot Started!\n" . DEFAULT_COLOR;</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">22</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">23</span><span class="no-line-diff"></span></div><div class="code-content">for ( ; ; sleep(5)) {</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">24</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">25</span><span class="no-line-diff"></span></div><div class="code-content">    &#36;updates = &#36;bot-&gt;updates(isset(&#36;updates) ? &#36;updates-&gt;getLastUpdateId() : null);</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">26</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">27</span><span class="no-line-diff"></span></div><div class="code-content">    foreach(&#36;updates-&gt;result as &#36;update){</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">28</span><span class="no-line-diff"></span></div><div class="code-content">        if(isset(&#36;update-&gt;message)){</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">29</span><span class="no-line-diff"></span></div><div class="code-content">            &#36;chat = &#36;update-&gt;getChat();</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">30</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">31</span><span class="no-line-diff"></span></div><div class="code-content">            try {</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">32</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">33</span><span class="no-line-diff"></span></div><div class="code-content">                &#36;res = &#36;bot-&gt;copyMessage([</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">34</span><span class="no-line-diff"></span></div><div class="code-content">                    "chat_id" =&gt; &#36;chat-&gt;id,</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">35</span><span class="no-line-diff"></span></div><div class="code-content">                    "from_chat_id" =&gt; &#36;chat-&gt;id,</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">36</span><span class="no-line-diff"></span></div><div class="code-content">                    "message_id" =&gt; &#36;update-&gt;getMessage()-&gt;message_id</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">37</span><span class="no-line-diff"></span></div><div class="code-content">                ]);</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">38</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">39</span><span class="no-line-diff"></span></div><div class="code-content">                echo GREEN_COLOR . "Replied to " . &#36;chat-&gt;id . "\n" . DEFAULT_COLOR;</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">40</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">41</span><span class="no-line-diff"></span></div><div class="code-content">            } catch (TelegramException &#36;e) {</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">42</span><span class="no-line-diff"></span></div><div class="code-content">                echo RED_COLOR . "Coulnd't reply to " . &#36;chat-&gt;id . ": " . &#36;e-&gt;getResponseBody()-&gt;description . "\n" . DEFAULT_COLOR;</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">43</span><span class="no-line-diff"></span></div><div class="code-content">            }</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">44</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">45</span><span class="no-line-diff"></span></div><div class="code-content">        }</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">46</span><span class="no-line-diff"></span></div><div class="code-content">    }</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">47</span><span class="no-line-diff"></span></div><div class="code-content">}</div></div>`}</code></pre></CodeCopy></div>
<h4 id="what-am-i-doing"><a href="#what-am-i-doing">What Am I Doing?</a></h4>
<p>If you already worked with <a href="https://github.com/TelegramSDK/BotAPI" rel="external" >TelegramSDK</a> you might already know what I&#39;ve just written, but I still reccommend having a look at the <a href="https://botapi.racca.me/" rel="external" >official documentation</a> for more information.</p>
<h5 id="include-the-library"><a href="#include-the-library">Include the Library</a></h5>
<div class="code-block  "><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">require_once  "vendor/autoload.php";</div></div>`}</code></pre></CodeCopy></div>
<p>This line includes the autoloader file from the Composer dependency manager.
It&#39;s used to autoload classes and functions from the third-party libraries, ensuring that you don&#39;t need to manually include each file.</p>
<h5 id="use-statements"><a href="#use-statements">Use Statements</a></h5>
<div class="code-block  "><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">use TelegramSDK\BotAPI\Exception\TelegramException;</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">use TelegramSDK\BotAPI\Telegram\{Bot, Update};</div></div>`}</code></pre></CodeCopy></div>
<p>These use statements import specific classes from <code class="inline-code-block">telgramsdk/botapi</code>.
This allows you to use these classes in the code without specifying the full namespace each time.</p>
<h5 id="define-constants-for-console-colors"><a href="#define-constants-for-console-colors">Define Constants for Console Colors</a></h5>
<div class="code-block  "><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">define("GREEN_COLOR", "\033[0;32m");</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">define("RED_COLOR", "\033[0;31m");</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">define("DEFAULT_COLOR", "\033[0m");</div></div>`}</code></pre></CodeCopy></div>
<p>These lines define constants for ANSI escape codes, which are used to colorize the console output. <code class="inline-code-block">GREEN_COLOR</code> sets the text color to green, <code class="inline-code-block">RED_COLOR</code> to red, and <code class="inline-code-block">DEFAULT_COLOR</code> resets the color to the default.</p>
<h5 id="initialize-the-telegram-bot"><a href="#initialize-the-telegram-bot">Initialize the Telegram Bot</a></h5>
<div class="code-block  "><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">&#36;bot = new Bot("YOUR_BOT_TOKEN", Update::UPDATES_FROM_GET_UPDATES);</div></div>`}</code></pre></CodeCopy></div>
<p>An instance of the Bot class is created with the Telegram bot token and the update method (<code class="inline-code-block">UPDATES_FROM_GET_UPDATES</code>) specified. The <code class="inline-code-block">Update::UPDATES_FROM_GET_UPDATES</code> constant indicates that updates should be fetched using the <code class="inline-code-block">getUpdates</code> method.</p>
<h5 id="check-token-validity"><a href="#check-token-validity">Check Token Validity</a></h5>
<div class="code-block  "><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">if (!&#36;bot-&gt;isValidToken(true)) {</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    echo RED_COLOR . "Invalid bot token.\n" . DEFAULT_COLOR;</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    exit(1);</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">}</div></div>`}</code></pre></CodeCopy></div>
<p>It checks if the bot token is valid. If not, it prints an error message in red and exits the script.</p>
<h5 id="infinite-loop-for-handling-updates"><a href="#infinite-loop-for-handling-updates">Infinite Loop for Handling Updates</a></h5>
<div class="code-block  "><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">for (; ; sleep(5)) {</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    // Code for handling updates</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">}</div></div>`}</code></pre></CodeCopy></div>
<p>An infinite loop that fetches updates every 5 seconds.</p>
<h5 id="handle-updates"><a href="#handle-updates">Handle Updates</a></h5>
<div class="code-block  "><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">&#36;updates = &#36;bot-&gt;updates(isset(&#36;updates) ? &#36;updates-&gt;getLastUpdateId() : null);</div></div>`}</code></pre></CodeCopy></div>
<p>Fetches updates using the <code class="inline-code-block">getUpdates</code> method. If <code class="inline-code-block">$updates</code> is set, it fetches updates starting from the last processed update.</p>
<div class="code-block  "><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">foreach (&#36;updates-&gt;result as &#36;update) {</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    // Code for processing each update</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">}</div></div>`}</code></pre></CodeCopy></div>
<p>Loops through each update in the result array.</p>
<h6 id="process-message-updates"><a href="#process-message-updates">Process Message Updates</a></h6>
<div class="code-block  "><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">if (isset(&#36;update-&gt;message)) {</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    // Code for processing message updates</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">}</div></div>`}</code></pre></CodeCopy></div>
<p>Checks if the update is a message.</p>
<div class="code-block  "><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">&#36;res = &#36;bot-&gt;copyMessage([</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    "chat_id" =&gt; &#36;chat-&gt;id,</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    "from_chat_id" =&gt; &#36;chat-&gt;id,</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    "message_id" =&gt; &#36;update-&gt;getMessage()-&gt;message_id</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">]);</div></div>`}</code></pre></CodeCopy></div>
<p>Copies the received message and sends it back to the same chat.</p>
<h6 id="handle-exceptions"><a href="#handle-exceptions">Handle Exceptions</a></h6>
<div class="code-block  "><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">} catch (TelegramException &#36;e) {</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    // Code for handling exceptions</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">}</div></div>`}</code></pre></CodeCopy></div>
<p>Catches any exceptions that may occur during the message copy process and prints an error message.</p>
<h4 id="start-the-bot"><a href="#start-the-bot">Start the Bot</a></h4>
<p>That&#39;s it, now you can start the bot with</p>
<div class="code-block  "><CodeCopy><pre><code class="language-bash">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">php bot.php</div></div>`}</code></pre></CodeCopy></div>
<p>Send to it a message and see it replying!</p>
<h3 id="set-webhook"><a href="#set-webhook">Set Webhook</a></h3>
<p>Setting a <a href="https://core.telegram.org/bots/api#setwebhook" rel="external" >webhook</a> with Telegram is bit more complicated than working with <a href="https://core.telegram.org/bots/api#getupdates" rel="external" >getUpdates</a> as it requires an HTTPS url.
In this article will assume that you already have it.</p>
<h4 id="directory-structure"><a href="#directory-structure">Directory Structure</a></h4>
<p>Here&#39;s an example of directory structure you might follow:</p>
<div class="p4 border-1 shadow-xl rounded-xl border-black dark:border-white overflow-auto">
  <NestedFolder folderData={webhookDirectory} />
</div>


<h4 id="environment"><a href="#environment">Environment</a></h4>
<p>Let&#39;s start with <code class="inline-code-block">environment.php</code>, a file that will hamdle common tasks such as creating a new instance of the bot.</p>
<div class="code-block titled showLineNumber"><h2 class="code-title">src/environment.php</h2><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="line-number">1</span><span class="no-line-diff"></span></div><div class="code-content">&lt;?php</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">2</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">3</span><span class="no-line-diff"></span></div><div class="code-content">require_once __DIR__ . "/../vendor/autoload.php";</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">4</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">5</span><span class="no-line-diff"></span></div><div class="code-content">use TelegramSDK\BotAPI\Telegram\{Bot, Update};</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">6</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">7</span><span class="no-line-diff"></span></div><div class="code-content">&#36;bot = new Bot("YOUR_BOT_TOKEN", Update::UPDATES_FROM_WEBHOOK);</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">8</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">9</span><span class="no-line-diff"></span></div><div class="code-content">&#36;update = &#36;bot-&gt;updates(); // Getting the updates</div></div>`}</code></pre></CodeCopy></div>
<p>As you can see, getting updates from the webhook is much easier than doing it with <code class="inline-code-block">getUpdates</code>.</p>
<h4 id="bootstrap"><a href="#bootstrap">Bootstrap</a></h4>
<p>The <code class="inline-code-block">bootstrap.php</code> file simply sets the webhook to the specified url.</p>
<div class="code-block titled showLineNumber"><h2 class="code-title">src/bootstrap.php</h2><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="line-number">1</span><span class="no-line-diff"></span></div><div class="code-content">&lt;?php</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">2</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">3</span><span class="no-line-diff"></span></div><div class="code-content">require_once __DIR__ . "/environment.php";</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">4</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">5</span><span class="no-line-diff"></span></div><div class="code-content">&#36;bot-&gt;setWebhook([</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">6</span><span class="no-line-diff"></span></div><div class="code-content">    "url" =&gt; "https://example.com", // Remember to use https</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">7</span><span class="no-line-diff"></span></div><div class="code-content">    "drop_pending_updates" =&gt; true // Drop any pending updates</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">8</span><span class="no-line-diff"></span></div><div class="code-content">]);</div></div>`}</code></pre></CodeCopy></div>
<p>See <a href="https://core.telegram.org/bots/api#setwebhook" rel="external" >setWebhook</a> for more information.</p>
<h4 id="public-file"><a href="#public-file">Public file</a></h4>
<p>The <code class="inline-code-block">src/public/</code> directory will be the one exposed to your web server and it will contain only one file, <code class="inline-code-block">index.php</code></p>
<div class="code-block titled showLineNumber"><h2 class="code-title">src/public/index.php</h2><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="line-number">1</span><span class="no-line-diff"></span></div><div class="code-content">&lt;?php</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">2</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">3</span><span class="no-line-diff"></span></div><div class="code-content">require_once __DIR__ . "/../environment.php"; // require the environment</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">4</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">5</span><span class="no-line-diff"></span></div><div class="code-content">if(isset(&#36;update-&gt;update_id)) { // Check if there is an update</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">6</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">7</span><span class="no-line-diff"></span></div><div class="code-content">    if(isset(&#36;update-&gt;message)) { // Check if a message was sent</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">8</span><span class="no-line-diff"></span></div><div class="code-content">        &#36;bot-&gt;copyMessage([ // Copy the message</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">9</span><span class="no-line-diff"></span></div><div class="code-content">            "chat_id" =&gt; &#36;update-&gt;chat-&gt;id,</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">10</span><span class="no-line-diff"></span></div><div class="code-content">            "from_chat_id" =&gt; &#36;update-&gt;chat-&gt;id,</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">11</span><span class="no-line-diff"></span></div><div class="code-content">            "message_id" =&gt; &#36;update-&gt;message-&gt;message_id</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">12</span><span class="no-line-diff"></span></div><div class="code-content">        ]);</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">13</span><span class="no-line-diff"></span></div><div class="code-content">    }</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">14</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">15</span><span class="no-line-diff"></span></div><div class="code-content">} else{</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">16</span><span class="no-line-diff"></span></div><div class="code-content">    echo "No updates from telegram where found.\n";</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">17</span><span class="no-line-diff"></span></div><div class="code-content">}</div></div>`}</code></pre></CodeCopy></div>
<h4 id="start-the-bot"><a href="#start-the-bot">Start the bot</a></h4>
<p>Once you have those files you just need to bootstrap your bot:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-bash">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">php src/bootstrap.php</div></div>`}</code></pre></CodeCopy></div>
<p>And start your HTTPS web server.</p>
<h2 id="enjoy"><a href="#enjoy">Enjoy</a></h2>
<p>You now have a full functioning bot that replies to every message sent by the users.</p>
<p>If you have any question please leave a comment below and I&#39;ll be happy to reply.</p>
]]></content>
    <category term="Telegram" scheme="https://blog.racca.me/?tags=Telegram" />
<category term="Bot" scheme="https://blog.racca.me/?tags=Bot" />
<category term="Automation" scheme="https://blog.racca.me/?tags=Automation" />
<category term="TelegramSDK" scheme="https://blog.racca.me/?tags=TelegramSDK" />
<category term="Series-FirstBot" scheme="https://blog.racca.me/?Series=FirstBot" />
    </entry>
<entry>
    <title type="html"><![CDATA[Create Your First Telegram Bot]]></title>
    <author><name><![CDATA[Sebastiano Racca]]></name></author>
    <link href="https://blog.racca.me/create-your-first-bot" />
    <id>https://blog.racca.me/create-your-first-bot</id>
    <published>2023-11-06T11:00:00.000Z</published>
    <updated>2024-01-10T12:00:00.000Z</updated>
    <summary type="html"><![CDATA[🤖 Create your first Telegram Bot using PHP in just a few steps]]></summary>
    <content type="html"><![CDATA[<h2 id="introduction"><a href="#introduction">Introduction</a></h2>
<p>Telegram bots are special accounts that serve as an interface for code running on a server, allowing for a variety of functionalities within the Telegram platform.
They can be used to automate tasks, provide information, interact with users, and even replace entire websites.</p>
<p>In this article, we&#39;ll explore how to build a PHP Telegram bot using the <a href="https://core.telegram.org/bots/api" rel="external" >Telegram Bot Api</a> and <a href="https://botapi.racca.me" rel="external" >TelegramSDK</a>.
We&#39;ll walk through the process of setting up the bot, configuring it, and testing it.</p>
<h3 id="prerequisites"><a href="#prerequisites">Prerequisites</a></h3>
<p>Before we begin, ensure that you have the following:</p>
<ul>
<li>PHP installed on your machine. If not, you can download it from the official <a href="https://www.php.net/download" rel="external" >PHP website</a>.</li>
<li>Composer, a dependency manager for PHP. If you don&#39;t have it, you can download it from the official <a href="https://getcomposer.org/download/" rel="external" >Composer website</a>.</li>
</ul>
<h2 id="setup-your-bot-on-telegram"><a href="#setup-your-bot-on-telegram">Setup your Bot on Telegram</a></h2>
<p>The first step is to create a Bot to which users will chat with.
Go to <a href="https://t.me/BotFather" rel="external" >@botfather</a>, start it and type <code class="inline-code-block">/newbot</code></p>
<p><VideoPlayer
  autoplay={true}
  loop={true}
  style="max-height: 700px !important;"
  title="BotFather Tutorial"
  mp4="/create-your-first-bot/botfather.mp4"
/></p>
<h2 id="start-coding"><a href="#start-coding">Start Coding</a></h2>
<h3 id="setup-local-envirorment"><a href="#setup-local-envirorment">Setup Local Envirorment</a></h3>
<p>Before writing the bot&#39;s logic we need to install the library we&#39;re going to use:</p>
<div class="code-block  "><CodeCopy><pre><code class="language-bash">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">composer</span> require telegramsdk/botapi</div></div>`}</code></pre></CodeCopy></div>
<p><a href="https://github.com/TelegramSDK/BotAPI" rel="external" >telegramsdk/botapi</a> is a light weight library that lets us access the <a href="https://core.telegram.org" rel="external" >Telegram API</a> easly and freely.</p>
<h3 id="write-the-logic"><a href="#write-the-logic">Write the Logic</a></h3>
<p>It&#39;s time for the fun part!</p>
<p>All you need to do is create a new file named <code class="inline-code-block">bot.php</code> (<em>or whatever you like</em>) and write this code:</p>
<div class="code-block titled showLineNumber"><h2 class="code-title">bot.php</h2><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="line-number">1</span><span class="line-diff"> </span></div><div class="code-content">&lt;?php</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">2</span><span class="line-diff"> </span></div><div class="code-content">require_once "vendor/autoload.php";</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">3</span><span class="line-diff"> </span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">4</span><span class="line-diff"> </span></div><div class="code-content">use TelegramSDK\BotAPI\Telegram\Bot;</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">5</span><span class="line-diff"> </span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">6</span><span class="line-diff"> </span></div><div class="code-content">&#36;bot = new Bot("YOUR_BOT_TOKEN");</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">7</span><span class="line-diff"> </span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">8</span><span class="line-diff"> </span></div><div class="code-content">&#36;bot-&gt;sendMessage([</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">9</span><span class="line-diff"> </span></div><div class="code-content">    "chat_id" =&gt; YOUR_CHAT_ID,</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">10</span><span class="line-diff"> </span></div><div class="code-content">    "text" =&gt; "My First Telegram bot!"</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">11</span><span class="line-diff"> </span></div><div class="code-content">]);</div></div>`}</code></pre></CodeCopy></div>
<InfoBox statusType="info" statusName="How can I get my CHAT_ID?"><p>Just send a message to <a href="https://t.me/userinfobot" rel="external" >@userinfobot</a> and replace <code class="inline-code-block">YOUR_CHAT_ID</code> with the id the bot provided.</p>
</InfoBox>
<h4 id="what-am-i-doing"><a href="#what-am-i-doing">What Am I Doing?</a></h4>
<p>If this is your first approach to Telegram or to <a href="https://github.com/TelegramSDK/BotAPI" rel="external" >telegramsdk/botapi</a>, you may wonder:</p>
<blockquote>
<p>What am I Doing?</p>
</blockquote>
<p>If you already know, you can skip this explanation.</p>
<p>Let&#39;s have a look a the code you&#39;ve just written:</p>
<h5 id="instancing-a-new-bot"><a href="#instancing-a-new-bot">Instancing a new Bot</a></h5>
<p>In this lines we&#39;re importing the library from the <code class="inline-code-block">vendor/</code> directory and instancing a new <code class="inline-code-block">Bot</code> object.</p>
<div class="code-block titled showLineNumber"><h2 class="code-title">bot.php</h2><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="line-number">1</span><span class="no-line-diff"></span></div><div class="code-content">&lt;?php</div></div><div class="code-line line-highlight"><div class="code-linenotation"><span class="line-number">2</span><span class="no-line-diff"></span></div><div class="code-content">require_once "vendor/autoload.php";</div></div><div class="code-line line-highlight"><div class="code-linenotation"><span class="line-number">3</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line line-highlight"><div class="code-linenotation"><span class="line-number">4</span><span class="no-line-diff"></span></div><div class="code-content">use TelegramSDK\BotAPI\Telegram\Bot;</div></div><div class="code-line line-highlight"><div class="code-linenotation"><span class="line-number">5</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line line-highlight"><div class="code-linenotation"><span class="line-number">6</span><span class="no-line-diff"></span></div><div class="code-content">&#36;bot = new Bot("YOUR_BOT_TOKEN");</div></div>`}</code></pre></CodeCopy></div>
<InfoBox statusType="info" statusName="Replace the Token!"><p>Please remember to replace <code class="inline-code-block">YOUR_BOT_TOKEN</code> with the actual bot token that <a href="https://t.me/botfather" rel="external" >@botfather</a> sent you.</p>
<p>See &quot;<a href="#setup-your-bot-on-telegram"  >Setup your Bot on Telegram</a>&quot; if you don&#39;t know how to do it.</p>
</InfoBox>
<h5 id="sending-a-message"><a href="#sending-a-message">Sending a Message</a></h5>
<p>The lines are an API call to the Telegram <a href="https://core.telegram.org/bots/api#sendmessage" rel="external" ><code class="inline-code-block">sendMessage</code></a> method.</p>
<p>This call will send a message to the specified user saying &quot;My First Telegram bot!&quot;</p>
<div class="code-block titled showLineNumber"><h2 class="code-title">bot.php</h2><CodeCopy><pre><code class="language-php">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="line-number">1</span><span class="no-line-diff"></span></div><div class="code-content">&lt;?php</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">2</span><span class="no-line-diff"></span></div><div class="code-content">require_once "vendor/autoload.php";</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">3</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">4</span><span class="no-line-diff"></span></div><div class="code-content">use TelegramSDK\BotAPI\Telegram\Bot;</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">5</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">6</span><span class="no-line-diff"></span></div><div class="code-content">&#36;bot = new Bot("YOUR_BOT_TOKEN");</div></div><div class="code-line"><div class="code-linenotation"><span class="line-number">7</span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line line-highlight"><div class="code-linenotation"><span class="line-number">8</span><span class="no-line-diff"></span></div><div class="code-content">&#36;bot-&gt;sendMessage([</div></div><div class="code-line line-highlight"><div class="code-linenotation"><span class="line-number">9</span><span class="no-line-diff"></span></div><div class="code-content">   "chat_id" =&gt; YOUR_CHAT_ID,</div></div><div class="code-line line-highlight"><div class="code-linenotation"><span class="line-number">10</span><span class="no-line-diff"></span></div><div class="code-content">   "text" =&gt; "My First Telegram bot!"</div></div><div class="code-line line-highlight"><div class="code-linenotation"><span class="line-number">11</span><span class="no-line-diff"></span></div><div class="code-content">]);</div></div>`}</code></pre></CodeCopy></div>
<p>Please remember to replace <code class="inline-code-block">YOUR_CHAT_ID</code> with your actual id.</p>
<p>If you don&#39;t know how to get your char id start, <a href="https://t.me/userinfobot" rel="external" >@userinfobot</a> and get your id.</p>
<h3 id="test-the-bot"><a href="#test-the-bot">Test the bot</a></h3>
<p>Testing the bot is super easy, you just need to start the file!</p>
<div class="code-block  "><CodeCopy><pre><code class="language-bash">{@html String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">php bot.php</div></div>`}</code></pre></CodeCopy></div>
<InfoBox statusType="info" statusName="Start the Bot"><p>If you don&#39;t <strong>start the bot you created</strong>, the program won&#39;t be able to send you the message.</p>
</InfoBox>
<h3 id="enjoy"><a href="#enjoy">Enjoy</a></h3>
<p>That&#39;s it! You now have a fully working telegram bot.
<a href="/create-an-echo-bot"  >Or do you?</a></p>
<p>Make sure to check out the <a href="/create-an-echo-bot"  >next post</a> of the series.</p>
<p>If you have any question please leave a comment below and I&#39;ll be happy to reply.</p>
]]></content>
    <category term="Telegram" scheme="https://blog.racca.me/?tags=Telegram" />
<category term="Bot" scheme="https://blog.racca.me/?tags=Bot" />
<category term="Automation" scheme="https://blog.racca.me/?tags=Automation" />
<category term="TelegramSDK" scheme="https://blog.racca.me/?tags=TelegramSDK" />
<category term="Series-FirstBot" scheme="https://blog.racca.me/?Series=FirstBot" />
    </entry>
</feed>
