{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "Seba's Blog",
  "home_page_url": "https://blog.racca.me",
  "feed_url": "https://blog.racca.me/feed.json",
  "description": "Sebastiano Racca's personal blog. Discover new ways of thinking, new technologies and much more",
  "icon": "/_app/immutable/assets/avatar.9d2117a3.png",
  "favicon": "https://blog.racca.me/favicon.png",
  "authors": [
    {
      "name": "Sebastiano Racca",
      "url": "https://github.com/SebaOfficial",
      "avatar": "/_app/immutable/assets/avatar.9d2117a3.png"
    }
  ],
  "language": "en",
  "items": [
    {
      "id": "typescript-is-not-a-programming-language",
      "url": "https://blog.racca.me/typescript-is-not-a-programming-language",
      "title": "TypeScript is NOT a Programming Language",
      "summary": "🚫 TypeScript is not a real programming language.",
      "image": "/typescript-is-not-a-programming-language/cover.jpg",
      "date_published": "2024-05-18T17:31:43.000+02:00",
      "date_modified": "2024-05-18T17:31:43.000+02:00",
      "content_text": "ENHANCING JAVASCRIPT WITH STATIC TYPING\n\nTypeScript stands as a superset of JavaScript, encompassing all its features\nwhile extending its capabilities with additional functionalities. It empowers\ndevelopers with the ability to specify types, adding a layer of static typing to\nJavaScript projects.\n\nHowever, it's essential to note that TypeScript doesn't directly execute in\nproduction environments. Instead, it undergoes transpilation into JavaScript\nbefore execution. This transformation process ensures compatibility with all\nJavaScript environments, as browsers and most platforms don't inherently support\nTypeScript.\n\nThis post aims to provoke critical thinking and discussion rather than assert\nabsolute truths. The intention here is to challenge conventional perspectives\nand encourage deeper exploration of the language.\n\nBefore delving into the matter, it's crucial to clarify what we mean by\n\"programming language\":\n\n> A programming language is a system of notation for writing computer programs.\n> Programming languages are described in terms of their syntax (form) and\n> semantics (meaning), usually defined by a formal language.\n\n\nDUCK TYPING AND STRUCTURAL TYPING\n\nIn TypeScript, types aren't confined to unique labels; they primarily describe\nthe shape of objects. This approach, known as duck typing\n[https://en.wikipedia.org/wiki/Duck_typing], determines an object's type based\non its structure. As the adage goes:\n\n> If it looks like a duck, swims like a duck, and quacks like a duck, then it\n> probably is a duck.\n\n\nEXAMPLE\n\n{@html String.raw`\ntype User = {\n  name: string;\n  age: number;\n  email: string;\n};\n\nfunction getUser(user: { age: number; email: string}) {\n  return user;\n}\n\nconst exampleUser: User = {\n  name: 'Jhon Doe',\n  age: 40,\n  email: 'jhon.doe@example.com',\n};\n\n// Although not ideal, TypeScript doesn't raise an error\n// because exampleUser satisfies the structure expected by getUser\ngetUser(exampleUser);`}\n\n\nNOMINAL TYPING WITH SYMBOLS\n\nTo implement nominal typing in TypeScript, developers can leverage symbols\n[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol].\nSymbols serve as unique identifiers, allowing for the distinction between\ndifferent types by associating them with specific symbols.\n\nBy \"tagging\" types with symbols, developers can enforce nominal typing, ensuring\nthat types with identical structures remain distinct entities. This approach\nbecomes particularly useful when there's a need to differentiate between similar\ntypes with the same structure.\n\nConsider the scenario where we have two types, CustomerProfile and AdminProfile,\nsharing identical structures but serving different purposes. Through nominal\ntyping with symbols, TypeScript prevents unintended assignments between these\ntypes, maintaining type safety and clarity within the codebase.\n\n\nEXAMPLE\n\n{@html String.raw`\n// Define symbols for nominal typing\nconst CustomerProfileSymbol = Symbol('CustomerProfile');\nconst AdminProfileSymbol = Symbol('AdminProfile');\n\n// Define types using symbols\ntype CustomerProfile = {\n  type: typeof CustomerProfileSymbol;\n  name: string;\n  email: string;\n};\n\ntype AdminProfile = {\n  type: typeof AdminProfileSymbol;\n  name: string;\n  email: string;\n};\n\n// Function to check if a profile is an admin profile\nfunction isAdminProfile(profile: CustomerProfile | AdminProfile): profile is AdminProfile {\n  return profile.type === AdminProfileSymbol;\n}\n\n// Example usage\nconst customer: CustomerProfile = {\n  type: CustomerProfileSymbol,\n  name: 'Alice',\n  email: 'alice@example.com',\n};\n\nconst admin: AdminProfile = {\n  type: AdminProfileSymbol,\n  name: 'Bob',\n  email: 'bob@example.com',\n};\n\n// TypeScript will catch this assignment as an error\n// because of the nominal typing with symbols\n// const invalidAssignment: AdminProfile = customer;\n\n// Check if a profile is an admin profile\nif (isAdminProfile(admin)) {\n  console.log(`${admin.name} is an admin.`);\n} else {\n  console.log(`${admin.name} is a customer.`);\n}`}",
      "content_html": "<h2 id=\"enhancing-javascript-with-static-typing\"><a href=\"#enhancing-javascript-with-static-typing\">Enhancing JavaScript with Static Typing</a></h2>\n<p>TypeScript stands as a superset of JavaScript, encompassing all its features while extending its capabilities with additional functionalities.\nIt empowers developers with the ability to specify types, adding a layer of static typing to JavaScript projects.</p>\n<p>However, it&#39;s essential to note that TypeScript doesn&#39;t directly execute in production environments.\nInstead, it undergoes transpilation into JavaScript before execution.\nThis transformation process ensures compatibility with all JavaScript environments, as browsers and most platforms don&#39;t inherently support TypeScript.</p>\n<InfoBox statusType=\"info\" statusName=\"Disclaimer ❕\"><p>This post aims to provoke critical thinking and discussion rather than assert absolute truths.\nThe intention here is to challenge conventional perspectives and encourage deeper exploration of the language.</p>\n</InfoBox>\n<p>Before delving into the matter, it&#39;s crucial to clarify what we mean by &quot;programming language&quot;:</p>\n<blockquote>\n<p>A programming language is a system of notation for writing computer programs. Programming languages are described in terms of their syntax (form) and semantics (meaning), usually defined by a formal language. </p>\n</blockquote>\n<h2 id=\"duck-typing-and-structural-typing\"><a href=\"#duck-typing-and-structural-typing\">Duck Typing and Structural Typing</a></h2>\n<p>In TypeScript, types aren&#39;t confined to unique labels; they primarily describe the shape of objects.\nThis approach, known as <a href=\"https://en.wikipedia.org/wiki/Duck_typing\" rel=\"external\" >duck typing</a>, determines an object&#39;s type based on its structure.\nAs the adage goes:</p>\n<blockquote>\n<p>If it looks like a duck, swims like a duck, and quacks like a duck, then it probably is a duck.</p>\n</blockquote>\n<h3 id=\"example\"><a href=\"#example\">Example</a></h3>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-ts\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">function</span> <span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span>user<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token keyword\">return</span> user<span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">}</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">const</span> exampleUser<span class=\"token operator\">:</span> User <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  name<span class=\"token operator\">:</span> <span class=\"token string\">'Jhon Doe'</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  age<span class=\"token operator\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  email<span class=\"token operator\">:</span> <span class=\"token string\">'jhon.doe@example.com'</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\">// Although not ideal, TypeScript doesn't raise an error</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\">// because exampleUser satisfies the structure expected by getUser</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span>exampleUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"nominal-typing-with-symbols\"><a href=\"#nominal-typing-with-symbols\">Nominal Typing with Symbols</a></h2>\n<p>To implement nominal typing in TypeScript, developers can leverage <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\" rel=\"external\" >symbols</a>.\nSymbols serve as unique identifiers, allowing for the distinction between different types by associating them with specific symbols.</p>\n<p>By &quot;tagging&quot; types with symbols, developers can enforce nominal typing, ensuring that types with identical structures remain distinct entities.\nThis approach becomes particularly useful when there&#39;s a need to differentiate between similar types with the same structure.</p>\n<p>Consider the scenario where we have two types, <code class=\"inline-code-block\">CustomerProfile</code> and <code class=\"inline-code-block\">AdminProfile</code>, sharing identical structures but serving different purposes.\nThrough nominal typing with symbols, TypeScript prevents unintended assignments between these types, maintaining type safety and clarity within the codebase.</p>\n<h3 id=\"example\"><a href=\"#example\">Example</a></h3>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-ts\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\">// Define symbols for nominal typing</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">const</span> CustomerProfileSymbol <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CustomerProfile'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">const</span> AdminProfileSymbol <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'AdminProfile'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\">// Define types using symbols</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">CustomerProfile</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  type<span class=\"token operator\">:</span> <span class=\"token keyword\">typeof</span> CustomerProfileSymbol<span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">AdminProfile</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  type<span class=\"token operator\">:</span> <span class=\"token keyword\">typeof</span> AdminProfileSymbol<span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\">// Function to check if a profile is an admin profile</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">function</span> <span class=\"token function\">isAdminProfile</span><span class=\"token punctuation\">(</span>profile<span class=\"token operator\">:</span> CustomerProfile <span class=\"token operator\">|</span> AdminProfile<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> profile <span class=\"token keyword\">is</span> AdminProfile <span class=\"token punctuation\">{</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token keyword\">return</span> profile<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> AdminProfileSymbol<span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">}</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\">// Example usage</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">const</span> customer<span class=\"token operator\">:</span> CustomerProfile <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  type<span class=\"token operator\">:</span> CustomerProfileSymbol<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  name<span class=\"token operator\">:</span> <span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  email<span class=\"token operator\">:</span> <span class=\"token string\">'alice@example.com'</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">const</span> admin<span class=\"token operator\">:</span> AdminProfile <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  type<span class=\"token operator\">:</span> AdminProfileSymbol<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  name<span class=\"token operator\">:</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  email<span class=\"token operator\">:</span> <span class=\"token string\">'bob@example.com'</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\">// TypeScript will catch this assignment as an error</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\">// because of the nominal typing with symbols</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\">// const invalidAssignment: AdminProfile = customer;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\">// Check if a profile is an admin profile</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isAdminProfile</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">&#96;</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">&#36;{</span>admin<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is an admin.</span><span class=\"token template-punctuation string\">&#96;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">&#96;</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">&#36;{</span>admin<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is a customer.</span><span class=\"token template-punctuation string\">&#96;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">}</span></div></div>`}</code></pre></CodeCopy></div>\n",
      "tags": [
        "TypeScript",
        "Duck Typing",
        "Nominal Typing"
      ]
    },
    {
      "id": "cloudflare-lava-lamps",
      "url": "https://blog.racca.me/cloudflare-lava-lamps",
      "title": "How Lava Lamps protect the Internet",
      "summary": "💡 How do lava lamps protect us?",
      "image": "/cloudflare-lava-lamps/cover.jpg",
      "date_published": "2024-04-22T16:20:20.000+02:00",
      "date_modified": "2024-04-22T16:20:20.000+02:00",
      "content_text": "INTRODUCTION\n\nIn the bustling world of cybersecurity, where data breaches and hacking attempts\nare a constant threat, Cloudflare stands out with its innovative approach to\nensuring the security of the internet. One of the most intriguing aspects of\nCloudflare's security measures is their use of lava lamps as a source of\ncryptographic randomness. This unique method, known as LavaRand, adds a layer of\nunpredictability and security to Cloudflare's operations, making it a\nfascinating subject of discussion.\n\n\nTHE CONCEPT OF LAVARAND\n\nAt the heart of Cloudflare's security infrastructure is the need for\ncryptographic randomness. This randomness is crucial for generating secure\nencryption keys, which are essential for protecting data transmission over the\ninternet. Traditionally, Cloudflare's servers relied on the default randomness\nmechanisms provided by the Linux operating system. However, recognizing the\nimportance of having a backup source of randomness, Cloudflare developed\nLavaRand [https://blog.cloudflare.com/randomness-101-lavarand-in-production/].\n\nLavaRand leverages the unpredictable nature of lava lamps to generate\nrandomness. A wall of lava lamps in Cloudflare's San Francisco office captures\nthe movement of the lava, which is then converted into a video feed. This video\nfeed is processed by a CSPRNG, which produces a stream of random values. These\nvalues serve as an additional source of randomness for Cloudflare's production\nservers, enhancing the security of their cryptographic operations.\n\n\nTHE INSPIRATION AND TECHNICAL IMPLEMENTATION\n\nThe idea behind LavaRand was inspired by a similar system proposed and patented\nby Silicon Graphics in 1996. Cloudflare's implementation takes this concept a\nstep further by using the visual randomness of lava lamps to generate\ncryptographic seeds. The process involves capturing images of the lava lamps at\nvarious times and under different conditions, which are then converted into\nlarge numbers that can be used as inputs for the CSPRNG. This method ensures\nthat even if the primary sources of randomness were compromised, LavaRand\nprovides a secure backup.\n\n\nBEYOND THE WALL OF LAVA LAMPS\n\nCloudflare's commitment to innovation extends beyond the LavaRand system. The\ncompany has embarked on other projects to achieve similar goals, such as the\n\"Chaotic Pendulums\" in their London office and the \"Suspended Rainbows\" project\nunder construction in their Austin office. These projects utilize different\nsources of randomness, including patterns projected on walls and the movements\nof mobiles, to generate entropy and enhance the security of Cloudflare's\noperations.\n\n\nCONCLUSION\n\nCloudflare's use of lava lamps for cryptographic randomness is a testament to\nthe company's commitment to innovation and security. By leveraging the inherent\nrandomness of lava lamps, Cloudflare ensures that its cryptographic operations\nremain secure, even in the face of potential threats. This unique approach not\nonly adds a layer of security to Cloudflare's operations but also serves as a\nreminder of the creative solutions that can emerge in the field of\ncybersecurity. As the internet continues to evolve, the importance of robust\nsecurity measures like LavaRand will only grow, making Cloudflare's approach to\ncryptographic randomness a model for other organizations to follow.",
      "content_html": "<h2 id=\"introduction\"><a href=\"#introduction\">Introduction</a></h2>\n<p>In the bustling world of cybersecurity, where data breaches and hacking attempts are a constant threat, Cloudflare stands out with its innovative approach to ensuring the security of the internet.\nOne of the most intriguing aspects of Cloudflare&#39;s security measures is their use of lava lamps as a source of cryptographic randomness.\nThis unique method, known as LavaRand, adds a layer of unpredictability and security to Cloudflare&#39;s operations, making it a fascinating subject of discussion.</p>\n<h2 id=\"the-concept-of-lavarand\"><a href=\"#the-concept-of-lavarand\">The Concept of LavaRand</a></h2>\n<p>At the heart of Cloudflare&#39;s security infrastructure is the need for cryptographic randomness.\nThis randomness is crucial for generating secure encryption keys, which are essential for protecting data transmission over the internet.\nTraditionally, Cloudflare&#39;s servers relied on the default randomness mechanisms provided by the Linux operating system.\nHowever, recognizing the importance of having a backup source of randomness, Cloudflare developed <a href=\"https://blog.cloudflare.com/randomness-101-lavarand-in-production/\" rel=\"external\" >LavaRand</a>.</p>\n<p>LavaRand leverages the unpredictable nature of lava lamps to generate randomness.\nA wall of lava lamps in Cloudflare&#39;s San Francisco office captures the movement of the lava, which is then converted into a video feed.\nThis video feed is processed by a <Explanation explanation=\"Cryptographically Secure Pseudorandom Number Generator\"> CSPRNG</Explanation>, which produces a stream of random values.\nThese values serve as an additional source of randomness for Cloudflare&#39;s production servers, enhancing the security of their cryptographic operations.</p>\n<h2 id=\"the-inspiration-and-technical-implementation\"><a href=\"#the-inspiration-and-technical-implementation\">The Inspiration and Technical Implementation</a></h2>\n<p>The idea behind LavaRand was inspired by a similar system proposed and patented by Silicon Graphics in 1996.\nCloudflare&#39;s implementation takes this concept a step further by using the visual randomness of lava lamps to generate cryptographic seeds.\nThe process involves capturing images of the lava lamps at various times and under different conditions, which are then converted into large numbers that can be used as inputs for the <Explanation explanation=\"Cryptographically Secure Pseudorandom Number Generator\"> CSPRNG</Explanation>.\nThis method ensures that even if the primary sources of randomness were compromised, LavaRand provides a secure backup.</p>\n<h2 id=\"beyond-the-wall-of-lava-lamps\"><a href=\"#beyond-the-wall-of-lava-lamps\">Beyond the Wall of Lava Lamps</a></h2>\n<p>Cloudflare&#39;s commitment to innovation extends beyond the LavaRand system.\nThe company has embarked on other projects to achieve similar goals, such as the &quot;Chaotic Pendulums&quot; in their London office and the &quot;Suspended Rainbows&quot; project under construction in their Austin office.\nThese projects utilize different sources of randomness, including patterns projected on walls and the movements of mobiles, to generate entropy and enhance the security of Cloudflare&#39;s operations.</p>\n<h2 id=\"conclusion\"><a href=\"#conclusion\">Conclusion</a></h2>\n<p>Cloudflare&#39;s use of lava lamps for cryptographic randomness is a testament to the company&#39;s commitment to innovation and security.\nBy leveraging the inherent randomness of lava lamps, Cloudflare ensures that its cryptographic operations remain secure, even in the face of potential threats.\nThis unique approach not only adds a layer of security to Cloudflare&#39;s operations but also serves as a reminder of the creative solutions that can emerge in the field of cybersecurity.\nAs the internet continues to evolve, the importance of robust security measures like LavaRand will only grow, making Cloudflare&#39;s approach to cryptographic randomness a model for other organizations to follow.</p>\n",
      "tags": [
        "Cloudflare",
        "Lava Lamps",
        "Encryption",
        "Security"
      ]
    },
    {
      "id": "boost-your-seo",
      "url": "https://blog.racca.me/boost-your-seo",
      "title": "How to Boost your SEO",
      "summary": "🔎 The ultimate guide to boost your seo",
      "image": "/boost-your-seo/cover.jpg",
      "date_published": "2024-04-09T15:03:26.000+01:00",
      "date_modified": "2024-04-09T15:03:26.000+01:00",
      "content_text": "INTRODUCTION\n\nHaving a strong online presence is crucial for the success of any business or\nwebsite. SEO plays a pivotal role in ensuring that your website ranks high in\nSERPs, driving organic traffic and increasing visibility. However, with search\nengine algorithms constantly evolving, it's essential to stay updated on the\nlatest strategies to boost your SEO effectively. In this article, we'll explore\n10 effective strategies to help you enhance your website's SEO and elevate your\nonline presence.\n\n\nUSE SEMANTIC TAGS\n\nSemantic HTML tags provide structure and meaning to your content, helping search\nengines understand the context and relevance of your web pages. By using tags\nlike <header>, <footer>, <nav>, <article>, and <section>, you can organize your\ncontent in a way that improves readability for both users and search engine\ncrawlers. This structured approach enhances your site's overall SEO performance.\n\n\n\n\nAVOID OVERLOADING THE DOM\n\nOverloading the DOM with excessive code, scripts, or elements can hinder your\nwebsite's performance and negatively impact SEO. Opt for clean and efficient\ncoding practices to ensure fast loading times and smooth user experiences.\nMinimize unnecessary HTML, CSS, and JavaScript to streamline your website's DOM\nand improve its search engine ranking.\n\n\nUSE META TAGS\n\nMeta tags, including title tags, meta descriptions, and meta keywords, play a\ncrucial role in SEO by providing concise information about your web pages to\nsearch engines. Craft compelling and relevant meta tags for each page on your\nsite, incorporating target keywords strategically. This practice not only\nimproves click-through rates but also enhances your site's visibility in SERPs.\n\n\nIMPLEMENT MICRODATA AND STRUCTURED DATA\n\nMicrodata and structured data markup, such as schema.org [https://schema.org]\nvocabulary, enable search engines to better understand the content and context\nof your web pages. By marking up elements like products, reviews, events, and\norganization details, you can enhance the visibility and relevance of your\ncontent in search results. Structured data markup can lead to rich snippets,\nknowledge panels, and other SERP features that attract more clicks and traffic.\n\n\nBUILD QUALITY BACKLINKS\n\nBacklinks, or inbound links from other websites to yours, are a fundamental\naspect of SEO. Focus on acquiring high-quality backlinks from reputable sources\nwithin your industry or niche. Natural and relevant backlinks not only drive\ndirect referral traffic but also signal to search engines that your site is\nauthoritative and trustworthy, thereby improving its ranking in search results.\n\n\nOPTIMIZE SPEED AND PERFORMANCE\n\nWebsite speed and performance are critical factors that influence user\nexperience and SEO. Optimize your site's loading times by minimizing HTTP\nrequests, leveraging browser caching, compressing images, and using CDNs. A\nfaster website not only improves user satisfaction but also earns favor with\nsearch engines, leading to higher rankings and increased organic traffic.\n\n\nREGULARLY MONITOR AND ADAPT\n\nSEO is an ongoing process that requires continuous monitoring and adaptation.\nKeep track of your site's performance metrics, including rankings, traffic, and\nengagement metrics. Analyze trends, identify opportunities, and make necessary\nadjustments to your SEO strategies accordingly. By staying proactive and\nresponsive to changes in search engine algorithms and user behavior, you can\nmaintain and enhance your site's SEO performance over time.",
      "content_html": "<h2 id=\"introduction\"><a href=\"#introduction\">Introduction</a></h2>\n<p>Having a strong online presence is crucial for the success of any business or website.\n<Explanation explanation=\"Search Engine Optimization\">SEO</Explanation> plays a pivotal role in ensuring that your website ranks high in <Explanation explanation=\"Search Engine Results Page\">SERP</Explanation>s, driving organic traffic and increasing visibility.\nHowever, with search engine algorithms constantly evolving, it&#39;s essential to stay updated on the latest strategies to boost your <Explanation explanation=\"Search Engine Optimization\">SEO</Explanation> effectively.\nIn this article, we&#39;ll explore 10 effective strategies to help you enhance your website&#39;s <Explanation explanation=\"Search Engine Optimization\">SEO</Explanation> and elevate your online presence.</p>\n<h2 id=\"use-semantic-tags\"><a href=\"#use-semantic-tags\">Use Semantic Tags</a></h2>\n<p>Semantic HTML tags provide structure and meaning to your content, helping search engines understand the context and relevance of your web pages.\nBy using tags like <code class=\"inline-code-block\">&lt;header&gt;</code>, <code class=\"inline-code-block\">&lt;footer&gt;</code>, <code class=\"inline-code-block\">&lt;nav&gt;</code>, <code class=\"inline-code-block\">&lt;article&gt;</code>, and <code class=\"inline-code-block\">&lt;section&gt;</code>, you can organize your content in a way that improves readability for both users and search engine crawlers.\nThis structured approach enhances your site&#39;s overall SEO performance.</p>\n<p><ImageZoom \n  src=\"/boost-your-seo/semantic-elements.jpg\"\n  alt=\"Semantic Elements\"\n/></p>\n<h2 id=\"avoid-overloading-the-dom\"><a href=\"#avoid-overloading-the-dom\">Avoid Overloading the DOM</a></h2>\n<p>Overloading the <Explanation explanation=\"Document Object Model\">DOM</Explanation> with excessive code, scripts, or elements can hinder your website&#39;s performance and negatively impact <Explanation explanation=\"Search Engine Optimization\">SEO</Explanation>.\nOpt for clean and efficient coding practices to ensure fast loading times and smooth user experiences.\nMinimize unnecessary HTML, CSS, and JavaScript to streamline your website&#39;s <Explanation explanation=\"Document Object Model\">DOM</Explanation> and improve its search engine ranking.</p>\n<h2 id=\"use-meta-tags\"><a href=\"#use-meta-tags\">Use Meta Tags</a></h2>\n<p>Meta tags, including title tags, meta descriptions, and meta keywords, play a crucial role in <Explanation explanation=\"Search Engine Optimization\">SEO</Explanation> by providing concise information about your web pages to search engines.\nCraft compelling and relevant meta tags for each page on your site, incorporating target keywords strategically.\nThis practice not only improves click-through rates but also enhances your site&#39;s visibility in <Explanation explanation=\"Search Engine Results Page\">SERP</Explanation>s.</p>\n<h2 id=\"implement-microdata-and-structured-data\"><a href=\"#implement-microdata-and-structured-data\">Implement Microdata and Structured Data</a></h2>\n<p>Microdata and structured data markup, such as <a href=\"https://schema.org\" rel=\"external\" >schema.org</a> vocabulary, enable search engines to better understand the content and context of your web pages.\nBy marking up elements like products, reviews, events, and organization details, you can enhance the visibility and relevance of your content in search results.\nStructured data markup can lead to rich snippets, knowledge panels, and other <Explanation explanation=\"Search Engine Results Page\">SERP</Explanation> features that attract more clicks and traffic.</p>\n<h2 id=\"build-quality-backlinks\"><a href=\"#build-quality-backlinks\">Build Quality Backlinks</a></h2>\n<p>Backlinks, or inbound links from other websites to yours, are a fundamental aspect of <Explanation explanation=\"Search Engine Optimization\">SEO</Explanation>.\nFocus on acquiring high-quality backlinks from reputable sources within your industry or niche.\nNatural and relevant backlinks not only drive direct referral traffic but also signal to search engines that your site is authoritative and trustworthy, thereby improving its ranking in search results.</p>\n<h2 id=\"optimize-speed-and-performance\"><a href=\"#optimize-speed-and-performance\">Optimize Speed and Performance</a></h2>\n<p>Website speed and performance are critical factors that influence user experience and <Explanation explanation=\"Search Engine Optimization\">SEO</Explanation>.\nOptimize your site&#39;s loading times by minimizing HTTP requests, leveraging browser caching, compressing images, and using <Explanation explanation=\"Content Delivery Networks\">CDN</Explanation>s.\nA faster website not only improves user satisfaction but also earns favor with search engines, leading to higher rankings and increased organic traffic.</p>\n<h2 id=\"regularly-monitor-and-adapt\"><a href=\"#regularly-monitor-and-adapt\">Regularly Monitor and Adapt</a></h2>\n<p><Explanation explanation=\"Search Engine Optimization\">SEO</Explanation> is an ongoing process that requires continuous monitoring and adaptation.\nKeep track of your site&#39;s performance metrics, including rankings, traffic, and engagement metrics.\nAnalyze trends, identify opportunities, and make necessary adjustments to your <Explanation explanation=\"Search Engine Optimization\">SEO</Explanation> strategies accordingly.\nBy staying proactive and responsive to changes in search engine algorithms and user behavior, you can maintain and enhance your site&#39;s <Explanation explanation=\"Search Engine Optimization\">SEO</Explanation> performance over time.</p>\n",
      "tags": [
        "SEO",
        "Web Development"
      ]
    },
    {
      "id": "zip-bombs",
      "url": "https://blog.racca.me/zip-bombs",
      "title": "About Zip Bombs",
      "summary": "💣 Zip bombs and their risks",
      "image": "/zip-bombs/cover.jpg",
      "date_published": "2024-03-28T13:15:22.000+01:00",
      "date_modified": "2024-03-28T13:15:22.000+01:00",
      "content_text": "WHAT IS A ZIP BOMB?\n\nAt its core, a zip bomb is a compressed file that, when extracted, expands\nexponentially, consuming an excessive amount of storage space and system\nresources. This exponential growth is achieved through a clever combination of\ncompression algorithms and nested directories. Essentially, a small initial file\nsize explodes into an overwhelmingly large size upon extraction, overwhelming\nunsuspecting systems.\n\n\nTHE DANGERS OF ZIP BOMBS\n\nZip bombs pose significant dangers to computer systems and networks. Here are\nsome key reasons why they are considered malicious:\n\n 1. Resource Consumption: Upon extraction, a zip bomb rapidly consumes system\n    resources such as CPU, memory, and storage space. This can lead to system\n    slowdowns, freezes, or crashes, disrupting normal operations.\n 2. Denial of Service (DoS): Zip bombs can be used as a form of\n    denial-of-service attack, especially when targeting servers or networked\n    systems. By sending a zip bomb to a server or sharing it via a network, an\n    attacker can overwhelm the system, rendering it inaccessible to legitimate\n    users.\n 3. Data Loss: In extreme cases, the extraction of a zip bomb can fill up\n    storage devices to capacity, leading to data loss or corruption. This can be\n    particularly damaging if critical files or system components are affected.\n 4. Security Risks: Zip bombs may also serve as a means of concealing malicious\n    payloads. Attackers could embed malware or sensitive data within the layers\n    of nested compression, exploiting vulnerabilities in software or bypassing\n    security measures.\n 5. Social Engineering: Zip bombs can be disguised as harmless or enticing\n    files, such as software downloads, documents, or multimedia files.\n    Unsuspecting users may unknowingly download and extract these files,\n    inadvertently triggering the zip bomb and compromising their systems.\n\nGiven these dangers, it's crucial for users and organizations to be vigilant and\nemploy proper security measures to detect and mitigate the risks posed by zip\nbombs.\n\n\nHOW TO CREATE ONE\n\nThe procedure is simple:\n\n 1. Create a 4 Gigabyte (4*1024*1024*1024 Bytes) file and compress it once name\n    it Base.zip.\n 2. Copy the compressed file until you have 16 pieces, named 0.zip, 1.zip, ...,\n    9.zip, a.zip, b.zip, ..., f.zip\n 3. Compress the 16 created zip files and overwrite Base.zip with the result.\n 4. Repeat step 2 and 3 until satisfied.\n\n\nEXPONENTIAL GROWTH\n\nThis will achieve exponential growth. Even on the first level you already have\n16 4GB files, resulting in 64 GB total. To put this into perspective, this is\nhalf of what the biggest known BluRay disc can store and larger than a 4K Movie.\n\n\nEXAMPLE\n\nThe procedure outlined below demonstrates how to create a basic zip bomb:\n\n{@html String.raw`\n#!/bin/bash\n\n# Function to create zip bomb\ncreate_zip_bomb() {\n  # Step 1: Create a 4 GB file\n  dd if=/dev/zero of=base.txt bs=1M count=4096\n\n  # Step 2: Compress the file and name it Base.zip\n  zip Base.zip base.txt\n\n  # Step 3: Copy the compressed file 16 times\n  for i in {0..9} {a..f}; do cp Base.zip $i.zip; done\n\n  # Step 4: Compress the 16 created zip files and overwrite Base.zip\n  zip -0 Base.zip *.zip\n}\n\n# Repeat the creation process 5 times\nfor ((i=0; i<5; i++)); do\n  echo \"Creating zip bomb $i\"\n  create_zip_bomb\ndone`}",
      "content_html": "<h2 id=\"what-is-a-zip-bomb\"><a href=\"#what-is-a-zip-bomb\">What is a Zip Bomb?</a></h2>\n<p>At its core, a zip bomb is a compressed file that, when extracted, expands exponentially, consuming an excessive amount of storage space and system resources.\nThis exponential growth is achieved through a clever combination of compression algorithms and nested directories.\nEssentially, a small initial file size explodes into an overwhelmingly large size upon extraction, overwhelming unsuspecting systems.</p>\n<h2 id=\"the-dangers-of-zip-bombs\"><a href=\"#the-dangers-of-zip-bombs\">The Dangers of Zip Bombs</a></h2>\n<p>Zip bombs pose significant dangers to computer systems and networks.\nHere are some key reasons why they are considered malicious:</p>\n<ol>\n<li><strong>Resource Consumption</strong>: Upon extraction, a zip bomb rapidly consumes system resources such as CPU, memory, and storage space. This can lead to system slowdowns, freezes, or crashes, disrupting normal operations.</li>\n<li><strong>Denial of Service (DoS)</strong>: Zip bombs can be used as a form of denial-of-service attack, especially when targeting servers or networked systems. By sending a zip bomb to a server or sharing it via a network, an attacker can overwhelm the system, rendering it inaccessible to legitimate users.</li>\n<li><strong>Data Loss</strong>: In extreme cases, the extraction of a zip bomb can fill up storage devices to capacity, leading to data loss or corruption. This can be particularly damaging if critical files or system components are affected.</li>\n<li><strong>Security Risks</strong>: Zip bombs may also serve as a means of concealing malicious payloads. Attackers could embed malware or sensitive data within the layers of nested compression, exploiting vulnerabilities in software or bypassing security measures.</li>\n<li><strong>Social Engineering</strong>: Zip bombs can be disguised as harmless or enticing files, such as software downloads, documents, or multimedia files. Unsuspecting users may unknowingly download and extract these files, inadvertently triggering the zip bomb and compromising their systems.</li>\n</ol>\n<p>Given these dangers, it&#39;s crucial for users and organizations to be vigilant and employ proper security measures to detect and mitigate the risks posed by zip bombs.</p>\n<h2 id=\"how-to-create-one\"><a href=\"#how-to-create-one\">How to Create One</a></h2>\n<p>The procedure is simple:</p>\n<ol>\n<li>Create a 4 Gigabyte (<code class=\"inline-code-block\">4*1024*1024*1024</code> Bytes) file and compress it once <AndThen /> name it <code class=\"inline-code-block\">Base.zip</code>.</li>\n<li>Copy the compressed file until you have 16 pieces, named <code class=\"inline-code-block\">0.zip</code>, <code class=\"inline-code-block\">1.zip</code>, ..., <code class=\"inline-code-block\">9.zip</code>, <code class=\"inline-code-block\">a.zip</code>, <code class=\"inline-code-block\">b.zip</code>, ..., <code class=\"inline-code-block\">f.zip</code></li>\n<li>Compress the 16 created zip files and overwrite <code class=\"inline-code-block\">Base.zip</code> with the result.</li>\n<li>Repeat step 2 and 3 until satisfied.</li>\n</ol>\n<h3 id=\"exponential-growth\"><a href=\"#exponential-growth\">Exponential growth</a></h3>\n<p>This will achieve exponential growth.\nEven on the first level you already have 16 4GB files, resulting in 64 GB total.\nTo put this into perspective, this is half of what the biggest known BluRay disc can store and larger than a 4K Movie.</p>\n<h3 id=\"example\"><a href=\"#example\">Example</a></h3>\n<p>The procedure outlined below demonstrates how to create a basic zip bomb:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token shebang important\">#!/bin/bash</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># Function to create zip bomb</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function-name function\">create_zip_bomb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token comment\"># Step 1: Create a 4 GB file</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>/dev/zero <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span>base.txt <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span>1M <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">4096</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token comment\"># Step 2: Compress the file and name it Base.zip</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token function\">zip</span> Base.zip base.txt</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token comment\"># Step 3: Copy the compressed file 16 times</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">..</span><span class=\"token number\">9</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">..</span>f<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">cp</span> Base.zip <span class=\"token variable\">&#36;i</span>.zip<span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token comment\"># Step 4: Compress the 16 created zip files and overwrite Base.zip</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token function\">zip</span> <span class=\"token parameter variable\">-0</span> Base.zip *.zip</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">}</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># Repeat the creation process 5 times</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">for</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">))</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Creating zip bomb <span class=\"token variable\">&#36;i</span>\"</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  create_zip_bomb</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">done</span></div></div>`}</code></pre></CodeCopy></div>\n",
      "tags": [
        "Zip",
        "Zip Bomb",
        "Security"
      ]
    },
    {
      "id": "the-evolution-of-http",
      "url": "https://blog.racca.me/the-evolution-of-http",
      "title": "The Evolution of HTTP",
      "summary": "🌐 From HTTP/0.9 to HTTP/3.0",
      "image": "/the-evolution-of-http/cover.jpg",
      "date_published": "2024-03-14T10:36:29.000+01:00",
      "date_modified": "2024-03-14T10:36:29.000+01:00",
      "content_text": "INTRODUCTION\n\nThe World Wide Web has undergone remarkable transformations since its inception,\nwith the evolution of Hypertext Transfer Protocol (HTTP) playing a pivotal role\nin shaping its trajectory. From its humble beginnings to the sophisticated\nstandards we have today, HTTP has continuously adapted to accommodate the\nchanging landscape of the internet. In this blog post, we delve into the journey\nof HTTP, exploring its evolution and the impact it has had on the way we\ninteract with the web.\n\n\nHTTP/0.9\n\nHTTP was conceived in the early 1990s by Tim Berners-Lee\n[https://www.w3.org/People/Berners-Lee/], a computer scientist at CERN, as a\nmeans to facilitate the exchange of information between servers and clients. The\nfirst version, HTTP/0.9, was a simple protocol designed primarily for retrieving\nstatic web pages. It lacked features such as headers and status codes,\nreflecting the nascent nature of the web at the time.\n\n\nHTTP/1.0\n\nWith the explosive growth of the web in the mid-1990s, the need for a more\nrobust and extensible protocol became evident. HTTP/1.0 introduced several key\nfeatures, including support for request headers, status codes, and content\nnegotiation. hese enhancements paved the way for more dynamic and interactive\nweb experiences, enabling the development of early web applications.\n\n\nHTTP/1.1\n\nAs the complexity of web applications increased, HTTP/1.0 revealed its\nlimitations. Issues such as inefficient resource utilization and latency\nprompted the development of HTTP/1.1 in 1997. This version introduced persistent\nconnections, pipelining, and host-header-based virtual hosting, significantly\nimproving performance and scalability. HTTP/1.1 became the de facto standard for\nweb communication for over a decade, laying the foundation for the modern web.\n\n\nHTTP/2\n\nBy the early 2010s, the demands placed on web servers had outgrown the\ncapabilities of HTTP/1.1. The emergence of rich media, dynamic content, and\nmobile devices necessitated a more efficient protocol. In 2015, HTTP/2 was\nstandardized, bringing with it revolutionary features such as multiplexing,\nheader compression, and server push. These advancements drastically reduced\nlatency and improved page load times, ushering in a new era of web performance.\n\n\nHTTP/3\n\nHTTP/3 was born from a new transport protocol, QUIC, created by Google in 2012.\nTo solve TCP's head-of-line blocking, QUIC decided to use UDP for its transport\nprotocol, because UDP does not care for guarantees of arrival. The\nresponsibility of data integrity, that in TCP is part of the transport layer, is\nmoved in QUIC to the application layer, and the frames of a message can arrive\nout of order, without blocking unrelated streams.\n\n\nFURTHER READING\n\nIf you want to read more about HTTP I suggest these articles:\n\n * HTTP/2 and HTTP/3 explained\n   [https://alexandrehtrb.github.io/posts/2024/03/http2-and-http3-explained/]\n * Evolution of HTTP\n   [https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Evolution_of_HTTP]\n * QUIC - Wikipedia [https://en.wikipedia.org/wiki/QUIC]\n * Introducing Zero Round Trip Time Resumption (0-RTT)\n   [https://blog.cloudflare.com/introducing-0-rtt]",
      "content_html": "<h2 id=\"introduction\"><a href=\"#introduction\">Introduction</a></h2>\n<p>The World Wide Web has undergone remarkable transformations since its inception, with the evolution of Hypertext Transfer Protocol (HTTP) playing a pivotal role in shaping its trajectory.\nFrom its humble beginnings to the sophisticated standards we have today, HTTP has continuously adapted to accommodate the changing landscape of the internet.\nIn this blog post, we delve into the journey of HTTP, exploring its evolution and the impact it has had on the way we interact with the web.</p>\n<h2 id=\"http-0-9\"><a href=\"#http-0-9\">HTTP/0.9</a></h2>\n<p>HTTP was conceived in the early 1990s by Tim <a href=\"https://www.w3.org/People/Berners-Lee/\" rel=\"external\" >Berners-Lee</a>, a computer scientist at CERN, as a means to facilitate the exchange of information between servers and clients.\nThe first version, HTTP/0.9, was a simple protocol designed primarily for retrieving static web pages. It lacked features such as headers and status codes, reflecting the nascent nature of the web at the time.</p>\n<h2 id=\"http-1-0\"><a href=\"#http-1-0\">HTTP/1.0</a></h2>\n<p>With the explosive growth of the web in the mid-1990s, the need for a more robust and extensible protocol became evident.\nHTTP/1.0 introduced several key features, including support for request headers, status codes, and content negotiation. \nhese enhancements paved the way for more dynamic and interactive web experiences, enabling the development of early web applications.</p>\n<h2 id=\"http-1-1\"><a href=\"#http-1-1\">HTTP/1.1</a></h2>\n<p>As the complexity of web applications increased, HTTP/1.0 revealed its limitations.\nIssues such as inefficient resource utilization and latency prompted the development of HTTP/1.1 in 1997.\nThis version introduced persistent connections, pipelining, and host-header-based virtual hosting, significantly improving performance and scalability.\nHTTP/1.1 became the de facto standard for web communication for over a decade, laying the foundation for the modern web.</p>\n<h2 id=\"http-2\"><a href=\"#http-2\">HTTP/2</a></h2>\n<p>By the early 2010s, the demands placed on web servers had outgrown the capabilities of HTTP/1.1.\nThe emergence of rich media, dynamic content, and mobile devices necessitated a more efficient protocol.\nIn 2015, HTTP/2 was standardized, bringing with it revolutionary features such as multiplexing, header compression, and server push.\nThese advancements drastically reduced latency and improved page load times, ushering in a new era of web performance.</p>\n<h2 id=\"http-3\"><a href=\"#http-3\">HTTP/3</a></h2>\n<p>HTTP/3 was born from a new transport protocol, QUIC, created by Google in 2012.\nTo solve TCP&#39;s head-of-line blocking, QUIC decided to use UDP for its transport protocol, because UDP does not care for guarantees of arrival.\nThe responsibility of data integrity, that in TCP is part of the transport layer, is moved in QUIC to the application layer, and the frames of a message can arrive out of order, without blocking unrelated streams.</p>\n<h2 id=\"further-reading\"><a href=\"#further-reading\">Further Reading</a></h2>\n<p>If you want to read more about HTTP I suggest these articles:</p>\n<ul>\n<li><a href=\"https://alexandrehtrb.github.io/posts/2024/03/http2-and-http3-explained/\" rel=\"external\" >HTTP/2 and HTTP/3 explained</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Evolution_of_HTTP\" rel=\"external\" >Evolution of HTTP</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/QUIC\" rel=\"external\" >QUIC - Wikipedia</a></li>\n<li><a href=\"https://blog.cloudflare.com/introducing-0-rtt\" rel=\"external\" >Introducing Zero Round Trip Time Resumption (0-RTT)</a></li>\n</ul>\n",
      "tags": [
        "HTTP"
      ]
    },
    {
      "id": "privacy-tips",
      "url": "https://blog.racca.me/privacy-tips",
      "title": "10 Privacy Tips to Protect Your Online Presence",
      "summary": "🔐 10 tips to improve your privacy",
      "image": "/privacy-tips/cover.jpg",
      "date_published": "2024-02-13T13:07:22.000+01:00",
      "date_modified": "2024-02-13T14:56:22.000+01:00",
      "content_text": "INTRODUCTION\n\nIn an age where personal data is often treated as a commodity, safeguarding your\nprivacy online has become more crucial than ever. From the websites you visit to\nthe messages you send, every digital interaction leaves a trail of information\nthat can potentially be exploited. Here are ten privacy tips to help you\nnavigate the digital landscape securely:\n\n\n1. CHOOSE YOUR BROWSER & SEARCH ENGINE\n\nWhile Google may be the default choice for many, consider alternatives like\nDuckDuckGo [https://duckduckgo.com/] for both browsing and searching. DuckDuckGo\n[https://duckduckgo.com/] doesn't track your searches or collect personal\ninformation, making it a preferable option for privacy-conscious users.\n\n\nINCOGNITO MODE ISN'T PRIVATE\n\nGoogle wants you to think “Incognito Mode” is private. It's not. Google still\ntracks every search you make and most websites you visit in Incognito Mode.\nDuckDuckGo [https://duckduckgo.com/] doesn't track you, ever.\n\n\n2. CREATE TEMPORARY EMAIL ADDRESSES\n\nAvoid using your primary email address for every online registration or\nsubscription. DuckDuckGo offers a convenient service for generating temporary\nemail addresses [https://duckduckgo.com/email/settings/autofill], but there are\nother excellent alternatives like Temp Mail [https://temp-mail.org/] and\nGuerrilla Mail [https://www.guerrillamail.com/].\n\n\n3. PREFER OPEN SOURCE SOFTWARE\n\nOpen-source software allows you to scrutinize the code and understand how your\ndata is handled. Opt for open-source alternatives whenever possible, whether\nit's for your browser, email client, or messaging apps.\n\n\n4. CREATE STRONG & UNIQUE PASSWORDS\n\nStrengthen your online accounts by using strong, unique passwords for each\nservice. Avoid the temptation to reuse passwords across multiple platforms, as\nthis significantly increases your vulnerability to hacking. Additionally,\nwhenever possible, enable multi-factor authentication (MFA) to add an extra\nlayer of security. Check out resources like Passwords Best Practices\n[/passwords-best-practices] for guidance on creating robust passwords.\n\n\n5. CAUTION WITH COOKIES AND POLICIES\n\nDon't blindly accept cookie notices and privacy policies. Take the time to read\nthem thoroughly, or leverage browser features like DuckDuckGo's automatic cookie\nhandling, which allows you to choose whether to accept or decline cookies based\non your preferences.\n\n\n6. USE MESSAGING APPS YOU TRUST\n\nWhen communicating online, opt for messaging apps that prioritize privacy and\nsecurity. While WhatsApp is popular, alternatives like Telegram offer end-to-end\nencryption and additional features like self-destructing messages for enhanced\nprivacy.\n\n\n7. STAY PRIVATE ON WI-FI NETWORKS\n\nPublic Wi-Fi networks are notorious for their lack of encryption, leaving your\ndata vulnerable to interception by malicious actors. Whenever possible, use a\nvirtual private network (VPN) to encrypt your internet traffic and protect your\nprivacy, especially when accessing sensitive information on public Wi-Fi\nnetworks. If you use Telegram you can use Telegram Info VPN\n[https://t.me/tginfovpn_bot?start=385966887].\n\n\n8. CHOOSE YOUR DNS PROVIDER\n\nYour DNS (Domain Name System) provider plays a crucial role in translating\ndomain names into IP addresses. Opt for trusted DNS providers like Cloudflare\n[https://1.1.1.1/], which prioritize privacy and offer additional security\nfeatures to protect your online activities from prying eyes.\n\n\n9. REGULARLY UPDATE YOUR SOFTWARE\n\nKeep your operating system, applications, and security software up to date to\npatch known vulnerabilities and protect against emerging threats. Enable\nautomatic updates whenever possible to ensure you're always running the latest,\nmost secure versions of your software.\n\n\n10. EDUCATE YOURSELF CONTINUOUSLY\n\nStay informed about the latest privacy threats, trends, and best practices\nthrough reputable sources such as cybersecurity blogs, forums, and news outlets.\nBy staying educated, you'll be better equipped to safeguard your privacy and\nadapt to evolving threats in the digital landscape.",
      "content_html": "<h2 id=\"introduction\"><a href=\"#introduction\">Introduction</a></h2>\n<p>In an age where personal data is often treated as a commodity, safeguarding your privacy online has become more crucial than ever.\nFrom the websites you visit to the messages you send, every digital interaction leaves a trail of information that can potentially be exploited.\nHere are ten privacy tips to help you navigate the digital landscape securely:</p>\n<h2 id=\"1-choose-your-browser-and-amp-search-engine\"><a href=\"#1-choose-your-browser-and-amp-search-engine\">1. Choose your Browser &amp; Search Engine</a></h2>\n<p>While Google may be the default choice for many, consider alternatives like <a href=\"https://duckduckgo.com/\" rel=\"external\" >DuckDuckGo</a> for both browsing and searching.\n<a href=\"https://duckduckgo.com/\" rel=\"external\" >DuckDuckGo</a> doesn&#39;t track your searches or collect personal information, making it a preferable option for privacy-conscious users.</p>\n<h3 id=\"incognito-mode-isn-and-39-t-private\"><a href=\"#incognito-mode-isn-and-39-t-private\">Incognito Mode isn&#39;t Private</a></h3>\n<p>Google wants you to think “Incognito Mode” is private. It&#39;s not.\nGoogle still tracks every search you make and most websites you visit in Incognito Mode.\n<a href=\"https://duckduckgo.com/\" rel=\"external\" >DuckDuckGo</a> doesn&#39;t track you, ever.</p>\n<h2 id=\"2-create-temporary-email-addresses\"><a href=\"#2-create-temporary-email-addresses\">2. Create Temporary Email Addresses</a></h2>\n<p>Avoid using your primary email address for every online registration or subscription.\nDuckDuckGo offers a convenient service for <a href=\"https://duckduckgo.com/email/settings/autofill\" rel=\"external\" >generating temporary email addresses</a>, but there are other excellent alternatives like <a href=\"https://temp-mail.org/\" rel=\"external\" >Temp Mail</a> and <a href=\"https://www.guerrillamail.com/\" rel=\"external\" >Guerrilla Mail</a>.</p>\n<h2 id=\"3-prefer-open-source-software\"><a href=\"#3-prefer-open-source-software\">3. Prefer Open Source Software</a></h2>\n<p>Open-source software allows you to scrutinize the code and understand how your data is handled.\nOpt for open-source alternatives whenever possible, whether it&#39;s for your browser, email client, or messaging apps.</p>\n<h2 id=\"4-create-strong-and-amp-unique-passwords\"><a href=\"#4-create-strong-and-amp-unique-passwords\">4. Create Strong &amp; Unique Passwords</a></h2>\n<p>Strengthen your online accounts by using strong, unique passwords for each service.\nAvoid the temptation to reuse passwords across multiple platforms, as this significantly increases your vulnerability to hacking.\nAdditionally, whenever possible, enable multi-factor authentication (MFA) to add an extra layer of security.\nCheck out resources like <a href=\"/passwords-best-practices\"  >Passwords Best Practices</a> for guidance on creating robust passwords.</p>\n<h2 id=\"5-caution-with-cookies-and-policies\"><a href=\"#5-caution-with-cookies-and-policies\">5. Caution with Cookies and Policies</a></h2>\n<p>Don&#39;t blindly accept cookie notices and privacy policies.\nTake the time to read them thoroughly, or leverage browser features like DuckDuckGo&#39;s automatic cookie handling, which allows you to choose whether to accept or decline cookies based on your preferences.</p>\n<h2 id=\"6-use-messaging-apps-you-trust\"><a href=\"#6-use-messaging-apps-you-trust\">6. Use Messaging Apps You Trust</a></h2>\n<p>When communicating online, opt for messaging apps that prioritize privacy and security.\nWhile WhatsApp is popular, alternatives like Telegram offer end-to-end encryption and additional features like self-destructing messages for enhanced privacy.</p>\n<h2 id=\"7-stay-private-on-wi-fi-networks\"><a href=\"#7-stay-private-on-wi-fi-networks\">7. Stay Private on Wi-Fi Networks</a></h2>\n<p>Public Wi-Fi networks are notorious for their lack of encryption, leaving your data vulnerable to interception by malicious actors.\nWhenever possible, use a virtual private network (VPN) to encrypt your internet traffic and protect your privacy, especially when accessing sensitive information on public Wi-Fi networks.\nIf you use Telegram you can use <a href=\"https://t.me/tginfovpn_bot?start=385966887\" rel=\"external\" >Telegram Info VPN</a>.</p>\n<h2 id=\"8-choose-your-dns-provider\"><a href=\"#8-choose-your-dns-provider\">8. Choose Your DNS Provider</a></h2>\n<p>Your DNS (Domain Name System) provider plays a crucial role in translating domain names into IP addresses.\nOpt for trusted DNS providers like <a href=\"https://1.1.1.1/\" rel=\"external\" >Cloudflare</a>, which prioritize privacy and offer additional security features to protect your online activities from prying eyes.</p>\n<h2 id=\"9-regularly-update-your-software\"><a href=\"#9-regularly-update-your-software\">9. Regularly Update Your Software</a></h2>\n<p>Keep your operating system, applications, and security software up to date to patch known vulnerabilities and protect against emerging threats.\nEnable automatic updates whenever possible to ensure you&#39;re always running the latest, most secure versions of your software.</p>\n<h2 id=\"10-educate-yourself-continuously\"><a href=\"#10-educate-yourself-continuously\">10. Educate Yourself Continuously</a></h2>\n<p>Stay informed about the latest privacy threats, trends, and best practices through reputable sources such as cybersecurity blogs, forums, and news outlets.\nBy staying educated, you&#39;ll be better equipped to safeguard your privacy and adapt to evolving threats in the digital landscape.</p>\n",
      "tags": [
        "Privacy",
        "Tips",
        "Browser",
        "Email",
        "Password",
        "Open Source",
        "Telegram",
        "VPN"
      ]
    },
    {
      "id": "ai-taking-our-jobs",
      "url": "https://blog.racca.me/ai-taking-our-jobs",
      "title": "Will AI take over your job?",
      "summary": "🤖 Is AI going to take over our jobs as developers?",
      "image": "/ai-taking-our-jobs/cover.jpg",
      "date_published": "2024-01-29T18:22:37.000+01:00",
      "date_modified": "2024-01-29T18:22:37.000+01:00",
      "content_text": "INTRODUCTION\n\nIn recent years, the rise of artificial intelligence (AI) has sparked debates\nabout its impact on various industries, and one sector that has been a focal\npoint of discussion is programming. The fear of AI taking over programming jobs\nhas been a topic of concern for many in the tech industry. However, history\nprovides us with a valuable lesson through the parallel of mathematicians and\ncalculators. Just as calculators did not replace mathematicians but instead\ncomplemented their abilities, AI is poised to augment rather than eliminate\nprogramming jobs.\n\n\nJUST LIKE MATHEMATICIANS\n\nIn the early days of mathematics, mathematicians were responsible for intricate\ncalculations that were often time-consuming and prone to errors. With the advent\nof calculators, these professionals were able to offload tedious arithmetic\ntasks to machines, allowing them to focus on higher-level problem-solving and\ntheoretical advancements.\n\n\nAI IN PROGRAMMING\n\nAI in programming can be seen as a tool that assists developers in automating\nrepetitive and mundane tasks, enabling them to channel their efforts towards\nmore complex problem-solving, creative thinking, and innovation. AI has the\npotential to enhance the productivity and efficiency of programmers rather than\nentirely taking over their roles.\n\n\nEXAMPLES\n\n * Code Generation: AI-powered tools can analyze patterns in existing codebases\n   and generate code snippets, automating repetitive coding tasks. This not only\n   speeds up the development process but also reduces the likelihood of human\n   errors.\n\n * Bug Detection and Resolution: AI algorithms can be employed to detect bugs\n   and vulnerabilities in code, allowing programmers to focus on addressing\n   critical issues rather than spending hours debugging. This enhances the\n   overall reliability of software products.\n\n * Automated Testing: AI-driven testing tools can simulate a variety of\n   scenarios, ensuring comprehensive test coverage and identifying potential\n   issues early in the development cycle. This results in higher-quality\n   software with faster release cycles.\n\n\nTHE HUMAN TOUCH\n\nWhile AI can automate certain aspects of programming, it lacks the intuition,\ncreativity, and contextual understanding that humans bring to the table. The\nability to comprehend user needs, design elegant solutions, and adapt to rapidly\nchanging requirements are skills that remain inherently human.\n\nMoreover, the ethical considerations and social implications of technology\nrequire human oversight. AI, when coupled with human judgment, can lead to more\nresponsible and ethically sound technological advancements.\n\n\nCONCLUSION\n\nIn the same way calculators didn't replace mathematicians but revolutionized\ntheir workflow, AI in programming is not about replacing developers but\ntransforming how they work. By automating repetitive tasks and providing\npowerful analytical capabilities, AI enables programmers to focus on what they\ndo best, solving complex problems and driving innovation. The coexistence of AI\nand human intelligence can lead to a harmonious and productive future for the\nprogramming industry. Embracing this collaboration can unlock new possibilities,\nmaking programming not just a job but a creative and dynamic endeavor.",
      "content_html": "<h2 id=\"introduction\"><a href=\"#introduction\">Introduction</a></h2>\n<p>In recent years, the rise of artificial intelligence (AI) has sparked debates about its impact on various industries, and one sector that has been a focal point of discussion is programming.\nThe fear of AI taking over programming jobs has been a topic of concern for many in the tech industry.\nHowever, history provides us with a valuable lesson through the parallel of mathematicians and calculators.\nJust as calculators did not replace mathematicians but instead complemented their abilities, AI is poised to augment rather than eliminate programming jobs.</p>\n<h2 id=\"just-like-mathematicians\"><a href=\"#just-like-mathematicians\">Just like Mathematicians</a></h2>\n<p>In the early days of mathematics, mathematicians were responsible for intricate calculations that were often time-consuming and prone to errors.\nWith the advent of calculators, these professionals were able to offload tedious arithmetic tasks to machines, allowing them to focus on higher-level problem-solving and theoretical advancements.</p>\n<h2 id=\"ai-in-programming\"><a href=\"#ai-in-programming\">AI in Programming</a></h2>\n<p>AI in programming can be seen as a tool that assists developers in automating repetitive and mundane tasks, enabling them to channel their efforts towards more complex problem-solving, creative thinking, and innovation.\nAI has the potential to enhance the productivity and efficiency of programmers rather than entirely taking over their roles.</p>\n<h3 id=\"examples\"><a href=\"#examples\">Examples</a></h3>\n<ul>\n<li><p><strong>Code Generation</strong>: AI-powered tools can analyze patterns in existing codebases and generate code snippets, automating repetitive coding tasks. This not only speeds up the development process but also reduces the likelihood of human errors.</p>\n</li>\n<li><p><strong>Bug Detection and Resolution</strong>: AI algorithms can be employed to detect bugs and vulnerabilities in code, allowing programmers to focus on addressing critical issues rather than spending hours debugging. This enhances the overall reliability of software products.</p>\n</li>\n<li><p><strong>Automated Testing</strong>: AI-driven testing tools can simulate a variety of scenarios, ensuring comprehensive test coverage and identifying potential issues early in the development cycle. This results in higher-quality software with faster release cycles.</p>\n</li>\n</ul>\n<h2 id=\"the-human-touch\"><a href=\"#the-human-touch\">The Human Touch</a></h2>\n<p>While AI can automate certain aspects of programming, it lacks the intuition, creativity, and contextual understanding that humans bring to the table. The ability to comprehend user needs, design elegant solutions, and adapt to rapidly changing requirements are skills that remain inherently human.</p>\n<p>Moreover, the ethical considerations and social implications of technology require human oversight.\nAI, when coupled with human judgment, can lead to more responsible and ethically sound technological advancements.</p>\n<h2 id=\"conclusion\"><a href=\"#conclusion\">Conclusion</a></h2>\n<p>In the same way calculators didn&#39;t replace mathematicians but revolutionized their workflow, AI in programming is not about replacing developers but transforming how they work.\nBy automating repetitive tasks and providing powerful analytical capabilities, AI enables programmers to focus on what they do best, solving complex problems and driving innovation.\nThe coexistence of AI and human intelligence can lead to a harmonious and productive future for the programming industry.\nEmbracing this collaboration can unlock new possibilities, making programming not just a job but a creative and dynamic endeavor.</p>\n",
      "tags": [
        "AI",
        "Automation"
      ]
    },
    {
      "id": "technology-impact-on-the-environment",
      "url": "https://blog.racca.me/technology-impact-on-the-environment",
      "title": "Technology's Impact on the Environment",
      "summary": "🌳 Technology's impact on the environment",
      "image": "/technology-impact-on-the-environment/cover.jpg",
      "date_published": "2024-01-22T19:24:20.000+01:00",
      "date_modified": "2024-01-22T19:24:20.000+01:00",
      "content_text": "INTRODUCTION\n\nIn the era of rapid technological advancement, the relationship between\ntechnology and the environment has become increasingly complex. On one hand,\ntechnological innovations have the potential to cause environmental harm, while\non the other hand, they offer solutions to some of the most pressing\nenvironmental challenges we face today. This blog post explores the dual nature\nof technology, examining both its detrimental and beneficial effects on the\nenvironment.\n\n\nENVIRONMENTAL CONCERNS\n\n\nELECTRONIC WASTE\n\nThe relentless pace of technological innovation has led to a surge in electronic\nwaste, with millions of tons of discarded devices ending up in landfills\nannually. From smartphones to laptops and obsolete gadgets, these items contain\nhazardous materials like lead, mercury, and cadmium. Improper disposal of\ne-waste can contaminate soil and water, posing severe risks to both ecosystems\nand human health.\n\nWhile efforts are being made to encourage recycling, the reality is that a\nsignificant portion of e-waste is not properly recycled. Inadequate recycling\nfacilities and the complex nature of electronic components make it challenging\nto recover valuable materials, perpetuating the cycle of environmental\ndegradation.\n\n\nENERGY CONSUMPTION\n\nThe rise of cloud computing and the demand for data storage have led to the\nproliferation of massive data centers. These facilities consume enormous amounts\nof energy, contributing to a substantial carbon footprint. Cooling systems,\nserver maintenance, and round-the-clock operations require constant power, often\nderived from non-renewable sources.\n\nThe energy consumption associated with technology, especially in manufacturing\nand operation phases, contributes to greenhouse gas emissions. The carbon\nfootprint of technology is a significant factor in climate change, amplifying\nthe urgency for the industry to transition towards renewable energy sources.\n\n\nRESOURCE DEPLETION\n\nThe production of high-tech devices relies heavily on rare earth metals, which\nare often extracted through environmentally damaging mining practices. These\nmetals are finite resources, and their extraction leads to habitat destruction,\nsoil erosion, and water pollution. The environmental toll of mining activities\nextends beyond the immediate extraction sites, affecting surrounding ecosystems.\n\nThe demand for raw materials to manufacture electronics, from smartphones to\ncomputers, has fueled deforestation in many regions. Mining operations clear\nvast areas of land, contributing to biodiversity loss and disrupting ecosystems.\nThe extraction process can introduce pollutants into soil and water, further\nexacerbating environmental degradation.\n\n\nSOLUTIONS AND MITIGATIONS\n\nRECYCLING INITIATIVES\n\nGovernments, manufacturers, and consumers need to collaborate to establish\neffective e-waste recycling programs. Encouraging responsible disposal,\nincentivizing recycling efforts, and developing advanced recycling technologies\nare crucial steps in reducing the environmental impact of electronic waste.\n\nRENEWABLE ENERGY ADOPTION\n\nTransitioning to renewable energy sources, such as solar and wind power, is\nessential for mitigating the carbon footprint of technology. Companies can\ncommit to using clean energy for their operations, and governments can\nincentivize the development and adoption of sustainable energy solutions.\n\nSUSTAINABLE PRACTICES IN MINING AND MANUFACTURING\n\nImplementing sustainable practices in the extraction of raw materials and\nmanufacturing processes is critical. This includes promoting ethical mining\npractices, reducing resource consumption through innovation, and exploring\nalternative materials that are less harmful to the environment.",
      "content_html": "<h2 id=\"introduction\"><a href=\"#introduction\">Introduction</a></h2>\n<p>In the era of rapid technological advancement, the relationship between technology and the environment has become increasingly complex.\nOn one hand, technological innovations have the potential to cause environmental harm, while on the other hand, they offer solutions to some of the most pressing environmental challenges we face today.\nThis blog post explores the dual nature of technology, examining both its detrimental and beneficial effects on the environment.</p>\n<h2 id=\"environmental-concerns\"><a href=\"#environmental-concerns\">Environmental Concerns</a></h2>\n<h3 id=\"electronic-waste\"><a href=\"#electronic-waste\">Electronic Waste</a></h3>\n<p>The relentless pace of technological innovation has led to a surge in electronic waste, with millions of tons of discarded devices ending up in landfills annually.\nFrom smartphones to laptops and obsolete gadgets, these items contain hazardous materials like lead, mercury, and cadmium.\nImproper disposal of e-waste can contaminate soil and water, posing severe risks to both ecosystems and human health.</p>\n<p>While efforts are being made to encourage recycling, the reality is that a significant portion of e-waste is not properly recycled.\nInadequate recycling facilities and the complex nature of electronic components make it challenging to recover valuable materials, perpetuating the cycle of environmental degradation.</p>\n<h3 id=\"energy-consumption\"><a href=\"#energy-consumption\">Energy Consumption</a></h3>\n<p>The rise of cloud computing and the demand for data storage have led to the proliferation of massive data centers.\nThese facilities consume enormous amounts of energy, contributing to a substantial carbon footprint.\nCooling systems, server maintenance, and round-the-clock operations require constant power, often derived from non-renewable sources.</p>\n<p>The energy consumption associated with technology, especially in manufacturing and operation phases, contributes to greenhouse gas emissions.\nThe carbon footprint of technology is a significant factor in climate change, amplifying the urgency for the industry to transition towards renewable energy sources.</p>\n<h3 id=\"resource-depletion\"><a href=\"#resource-depletion\">Resource Depletion</a></h3>\n<p>The production of high-tech devices relies heavily on rare earth metals, which are often extracted through environmentally damaging mining practices.\nThese metals are finite resources, and their extraction leads to habitat destruction, soil erosion, and water pollution.\nThe environmental toll of mining activities extends beyond the immediate extraction sites, affecting surrounding ecosystems.</p>\n<p>The demand for raw materials to manufacture electronics, from smartphones to computers, has fueled deforestation in many regions.\nMining operations clear vast areas of land, contributing to biodiversity loss and disrupting ecosystems.\nThe extraction process can introduce pollutants into soil and water, further exacerbating environmental degradation.</p>\n<h2 id=\"solutions-and-mitigations\"><a href=\"#solutions-and-mitigations\">Solutions and Mitigations</a></h2>\n<h4 id=\"recycling-initiatives\"><a href=\"#recycling-initiatives\">Recycling Initiatives</a></h4>\n<p>Governments, manufacturers, and consumers need to collaborate to establish effective e-waste recycling programs.\nEncouraging responsible disposal, incentivizing recycling efforts, and developing advanced recycling technologies are crucial steps in reducing the environmental impact of electronic waste.</p>\n<h4 id=\"renewable-energy-adoption\"><a href=\"#renewable-energy-adoption\">Renewable Energy Adoption</a></h4>\n<p>Transitioning to renewable energy sources, such as solar and wind power, is essential for mitigating the carbon footprint of technology.\nCompanies can commit to using clean energy for their operations, and governments can incentivize the development and adoption of sustainable energy solutions.</p>\n<h4 id=\"sustainable-practices-in-mining-and-manufacturing\"><a href=\"#sustainable-practices-in-mining-and-manufacturing\">Sustainable Practices in Mining and Manufacturing</a></h4>\n<p>Implementing sustainable practices in the extraction of raw materials and manufacturing processes is critical.\nThis includes promoting ethical mining practices, reducing resource consumption through innovation, and exploring alternative materials that are less harmful to the environment.</p>\n",
      "tags": [
        "Technology",
        "Environment"
      ]
    },
    {
      "id": "passwords-best-practices",
      "url": "https://blog.racca.me/passwords-best-practices",
      "title": "Best Practices for Passwords",
      "summary": "🔒 Learn about passwords",
      "image": "/passwords-best-practices/cover.jpg",
      "date_published": "2024-01-07T16:25:40.000+01:00",
      "date_modified": "2024-01-07T16:25:40.000+01:00",
      "content_text": "INTRODUCTION\n\nA password is a string of characters used to verify the identity of a user\nduring the authentication process. Passwords are typically used in tandem with a\nusername; they are designed to be known only to the user and allow that user to\ngain access to a device, application or website. Passwords can vary in length\nand can contain letters, numbers and special characters.\n\n\nHOW TO CREATE A SECURE PASSWORD\n\nPasswords, when carefully created and protected, increase safe and secure\ninteractions online and in the workplace and can prevent password cracking. To\nmaximize the strength and efficacy of passwords, organizations often establish\npassword policies. These policies are designed to help users create strong\npasswords and adopt best practices for managing login credentials. According to\nthe traditional advice, a strong password has:\n\n * Minumum 12 Characters;\n * Both uppercase and lowercase letters;\n * At least one number;\n * At least one special character.\n\n\nWHAT YOU SHOULDN'T INCLUDE\n\n * Dictionary Word or Combination of them;\n * Easily guessed elements, such as names of children, pet names and birthdays;\n * Obvious Substitutions, such as H3llo or H0use\n\n\nUSE PASSWORD MANAGERS\n\nOne of the best advices I always give is to store your password with a password\nmanager like bitwarden [https://bitwarden.com/] and use passwords generators you\ntrust to generate them for you, because:\n\n> If you can remember a password, a computer can remember it too.\n\nBitwardern offers a password generator\n[https://bitwarden.com/password-generator/] but if you're a linux user you could\nuse pwgen, here's an example to generate a password with 16 characters:\n\n{@html String.raw`\npwgen 16 1`}\n\n\nTEST YOUR PASSWORD\n\nHere's how you can test the effectiveness of your password:",
      "content_html": "<h2 id=\"introduction\"><a href=\"#introduction\">Introduction</a></h2>\n<p>A password is a string of characters used to verify the identity of a user during the authentication process.\nPasswords are typically used in tandem with a username; they are designed to be known only to the user and allow that user to gain access to a device, application or website.\nPasswords can vary in length and can contain letters, numbers and special characters.</p>\n<h2 id=\"how-to-create-a-secure-password\"><a href=\"#how-to-create-a-secure-password\">How to create a secure password</a></h2>\n<p>Passwords, when carefully created and protected, increase safe and secure interactions online and in the workplace and can prevent password cracking.\nTo maximize the strength and efficacy of passwords, organizations often establish password policies.\nThese policies are designed to help users create strong passwords and adopt best practices for managing login credentials.\nAccording to the traditional advice, a strong password has:</p>\n<ul>\n<li><strong>Minumum 12 Characters</strong>;</li>\n<li><strong>Both uppercase and lowercase letters</strong>;</li>\n<li><strong>At least one number</strong>;</li>\n<li><strong>At least one special character</strong>.</li>\n</ul>\n<h3 id=\"what-you-shouldn-and-39-t-include\"><a href=\"#what-you-shouldn-and-39-t-include\">What you shouldn&#39;t include</a></h3>\n<ul>\n<li><strong>Dictionary Word</strong> or Combination of them;</li>\n<li><strong>Easily guessed elements</strong>, such as names of children, pet names and birthdays;</li>\n<li><strong>Obvious Substitutions</strong>, such as <em>H3llo</em> or <em>H0use</em></li>\n</ul>\n<h2 id=\"use-password-managers\"><a href=\"#use-password-managers\">Use password managers</a></h2>\n<p>One of the best advices I always give is to store your password with a password manager like <a href=\"https://bitwarden.com/\" rel=\"external\" >bitwarden</a> and use passwords generators you trust to generate them for you, because:</p>\n<blockquote>\n<p>If you can remember a password, a computer can remember it too.</p>\n</blockquote>\n<p>Bitwardern offers a <a href=\"https://bitwarden.com/password-generator/\" rel=\"external\" >password generator</a> but if you&#39;re a linux user you could use <code class=\"inline-code-block\">pwgen</code>, here&#39;s an example to generate a password with 16 characters:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">pwgen <span class=\"token number\">16</span> <span class=\"token number\">1</span></div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"test-your-password\"><a href=\"#test-your-password\">Test your password</a></h2>\n<p>Here&#39;s how you can test the effectiveness of your password:</p>\n<PasswordCrack />\n",
      "tags": [
        "Password",
        "Security",
        "Privacy"
      ]
    },
    {
      "id": "choose-your-linux-shell",
      "url": "https://blog.racca.me/choose-your-linux-shell",
      "title": "How to Choose your Linux Shell",
      "summary": "⌨️ 5 alternatives to Bash",
      "image": "/choose-your-linux-shell/cover.jpg",
      "date_published": "2023-12-28T21:58:28.000+01:00",
      "date_modified": "2023-12-28T21:58:28.000+01:00",
      "content_text": "INTRODUCTION\n\nIn the world of Unix-based operating systems, the default shell is often Bash\n[https://www.gnu.org/software/bash/]. However, the open-source nature of Linux\nallows for a variety of alternatives, each catering to different preferences and\nuse cases.\n\nIn this tutorial, we'll explore five alternatives to Bash and guide you on how\nto choose the Linux shell that best suits your needs.\n\n\nFISH (FRIENDLY INTERACTIVE SHELL)\n\nFish [https://fishshell.com/] stands out for its user-friendly design and\ninteractive features. If you value simplicity and a clean interface, Fish might\nbe the shell for you.\n\n\nPROS\n\n 1. User-Friendly Interface: Fish boasts a clean and straightforward design,\n    making it an excellent choice for users who prefer an intuitive and visually\n    appealing experience;\n 2. Auto-Completion: Fish suggests commands as you type, based on command\n    history, completions, and valid file paths;\n 3. Excellent documentation: Fish has a great tutorial and the official\n    documentation is clear, full of eloquent examples, and to the point.\n\n\nCONS\n\n 1. Not POSIX compliant: Fish prioritizes a more modern and user-centric\n    approach, incorporating features like syntax highlighting, auto-suggestions,\n    and a simplified scripting language.\n 2. Slow: Much of the functionality in Fish was not written with performance in\n    mind. However, scripting in a shell is not supposed to be about performance.\n 3. Doesn't support history expansion: Fish has no support for !!, but you can\n    use Oh My Fish shell framework [https://github.com/oh-my-fish/oh-my-fish]\n    and install bang-bang plugin to have this shortcut in Fish shell.\n\n\nINSTALLATION\n\nInstalling Fish is a straightforward process and can be accomplished using\npackage managers on various Linux distributions.\n\nDebian/Ubuntu-based Systems:\n\n{@html String.raw`\nsudo apt-get install fish`}\n\nRed Hat-based Systems:\n\n{@html String.raw`\nsudo yum install fish`}\n\nArch Linux:\n\n{@html String.raw`\nsudo pacman -S fish`}\n\nsudo pacman -S fish\n\n{@html String.raw`\nbrew install fish`}\n\n\nZSH (Z SHELL)\n\nZsh [https://www.zsh.org/] is a highly customizable shell known for its\nextensive features and scripting capabilities. It provides an interactive\ncommand-line editor, improved autocompletion, and a vibrant community that\ncontributes to a vast collection of plugins and themes.\n\n\nPROS\n\n 1. Robust Plugin Ecosystem: The Zsh community has developed a rich ecosystem of\n    plugins that extend its functionality. These plugins cover a wide range of\n    tasks, from Git integration to syntax highlighting.\n 2. Powerful Scripting: Zsh offers advanced scripting features, making it a\n    preferred choice for users who engage in complex automation and scripting\n    tasks.\n\n\nCONS\n\n 1. Learning Curve: Due to its extensive feature set, Zsh has a steeper learning\n    curve compared to simpler shells. New users might need some time to explore\n    and configure its numerous options effectively.\n 2. Requires a lot of configuration: Zsh requires a lot of tinkering with\n    configuration files and downloading plugins in order to be able to do tasks\n    which other shells may be able to do out of the box.\n\n\nINSTALLATION\n\nZsh is available through package managers on most Linux distributions. Below are\nexamples for different package managers.\n\nDebian/Ubuntu-based Systems:\n\n{@html String.raw`\nsudo apt-get install zsh`}\n\nRed Hat-based Systems:\n\n{@html String.raw`\nsudo yum install zsh`}\n\nArch Linux:\n\n{@html String.raw`\nsudo pacman -S zsh`}\n\nmacOS:\n\n{@html String.raw`\nbrew install zsh`}\n\n\nKSH (KORN SHELL)\n\nKsh [http://www.kornshell.com/] is a powerful and efficient shell known for its\nscripting capabilities and compatibility with Bash.\n\n\nPROS\n\n 1. Compatibility: Ksh maintains compatibility with Bash, which makes it a\n    seamless transition for users already familiar with Bash scripting.\n 2. Efficiency: Ksh is designed for efficiency, making it a suitable choice for\n    both interactive use and scripting tasks.\n\n\nCONS\n\n 1. Less Interactive Features: While Ksh is powerful for scripting, it may lack\n    some of the interactive features found in shells like Fish or Zsh. Users who\n    prioritize interactive use might need to explore additional plugins or\n    configurations.\n 2. Learning Curve: For users new to Unix-like shells, Ksh might have a steeper\n    learning curve compared to more user-friendly options like Fish. However,\n    its comprehensive documentation can aid in the learning process.\n\n\nINSTALLATION\n\nInstalling Ksh varies depending on your Linux distribution.\n\nDebian/Ubuntu-based Systems:\n\n{@html String.raw`\nsudo apt-get install ksh`}\n\nRed Hat-based Systems:\n\n{@html String.raw`\nsudo yum install ksh`}\n\nArch Linux:\n\n{@html String.raw`\nsudo pacman -S ksh`}\n\nmacOS:\n\n{@html String.raw`\nbrew install ksh`}\n\n\nCSH (C SHELL)\n\nCsh [https://www.csh.org/] is known for its C-like syntax and scripting\ncapabilities, caters to users who appreciate a familiar language structure.\n\n\nPROS\n\n 1. C-Like Syntax: Users familiar with C programming will find the C Shell's\n    syntax comfortable and easy to grasp. This can be an advantage for those\n    transitioning from C or C++ environments.\n 2. Scripting: Csh offers powerful scripting features, making it suitable for\n    automation and complex scripting tasks. If you're accustomed to C-like\n    languages, you might find the scripting in C Shell more natural.\n\n\nCONS\n\n 1. Limited Interactive Features: Compared to modern shells like Fish or Zsh,\n    the C Shell may lack some interactive features, such as advanced\n    auto-completion and syntax highlighting.\n 2. Less Popular: The C Shell is not as widely adopted as shells like Bash or\n    Zsh. As a result, the community support and availability of plugins may be\n    more limited.\n\n\nINSTALLATION\n\nInstalling the C Shell is typically straightforward, and it is available through\npackage managers on various systems.\n\nDebian/Ubuntu-based Systems:\n\n{@html String.raw`\nsudo apt-get install csh`}\n\nRed Hat-based Systems:\n\n{@html String.raw`\nsudo yum install csh`}",
      "content_html": "<h2 id=\"introduction\"><a href=\"#introduction\">Introduction</a></h2>\n<p>In the world of Unix-based operating systems, the default shell is often <a href=\"https://www.gnu.org/software/bash/\" rel=\"external\" >Bash</a>. However, the open-source nature of Linux allows for a variety of alternatives, each catering to different preferences and use cases.</p>\n<p>In this tutorial, we&#39;ll explore five alternatives to Bash and guide you on how to choose the Linux shell that best suits your needs.</p>\n<h2 id=\"fish-friendly-interactive-shell\"><a href=\"#fish-friendly-interactive-shell\">Fish (Friendly Interactive Shell)</a></h2>\n<p><a href=\"https://fishshell.com/\" rel=\"external\" >Fish</a> stands out for its user-friendly design and interactive features.\nIf you value simplicity and a clean interface, Fish might be the shell for you.</p>\n<h3 id=\"pros\"><a href=\"#pros\">Pros</a></h3>\n<ol>\n<li><strong>User-Friendly Interface</strong>: Fish boasts a clean and straightforward design, making it an excellent choice for users who prefer an intuitive and visually appealing experience;</li>\n<li><strong>Auto-Completion</strong>: Fish suggests commands as you type, based on command history, completions, and valid file paths;</li>\n<li><strong>Excellent documentation</strong>: Fish has a great tutorial and the official documentation is clear, full of eloquent examples, and to the point.</li>\n</ol>\n<h3 id=\"cons\"><a href=\"#cons\">Cons</a></h3>\n<ol>\n<li><strong>Not POSIX compliant</strong>: Fish prioritizes a more modern and user-centric approach, incorporating features like syntax highlighting, auto-suggestions, and a simplified scripting language.</li>\n<li><strong>Slow</strong>: Much of the functionality in Fish was not written with performance in mind. However, scripting in a shell is not supposed to be about performance.</li>\n<li><strong>Doesn&#39;t support history expansion</strong>: Fish has no support for <code class=\"inline-code-block\">!!</code>, but you can use <a href=\"https://github.com/oh-my-fish/oh-my-fish\" rel=\"external\" >Oh My Fish shell framework</a> and install bang-bang plugin to have this shortcut in Fish shell.</li>\n</ol>\n<h3 id=\"installation\"><a href=\"#installation\">Installation</a></h3>\n<p>Installing Fish is a straightforward process and can be accomplished using package managers on various Linux distributions.</p>\n<p>Debian/Ubuntu-based Systems:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> fish</div></div>`}</code></pre></CodeCopy></div>\n<p>Red Hat-based Systems:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> fish</div></div>`}</code></pre></CodeCopy></div>\n<p>Arch Linux:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> fish</div></div>`}</code></pre></CodeCopy></div>\n<p>sudo pacman -S fish</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">brew <span class=\"token function\">install</span> fish</div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"zsh-z-shell\"><a href=\"#zsh-z-shell\">zsh (Z Shell)</a></h2>\n<p><a href=\"https://www.zsh.org/\" rel=\"external\" >Zsh</a> is a highly customizable shell known for its extensive features and scripting capabilities.\nIt provides an interactive command-line editor, improved autocompletion, and a vibrant community that contributes to a vast collection of plugins and themes.</p>\n<h3 id=\"pros\"><a href=\"#pros\">Pros</a></h3>\n<ol>\n<li><strong>Robust Plugin Ecosystem</strong>: The Zsh community has developed a rich ecosystem of plugins that extend its functionality. These plugins cover a wide range of tasks, from Git integration to syntax highlighting.</li>\n<li><strong>Powerful Scripting</strong>: Zsh offers advanced scripting features, making it a preferred choice for users who engage in complex automation and scripting tasks.</li>\n</ol>\n<h3 id=\"cons\"><a href=\"#cons\">Cons</a></h3>\n<ol>\n<li><strong>Learning Curve</strong>: Due to its extensive feature set, Zsh has a steeper learning curve compared to simpler shells. New users might need some time to explore and configure its numerous options effectively.</li>\n<li><strong>Requires a lot of configuration</strong>:  Zsh requires a lot of tinkering with configuration files and downloading plugins in order to be able to do tasks which other shells may be able to do out of the box.</li>\n</ol>\n<h3 id=\"installation\"><a href=\"#installation\">Installation</a></h3>\n<p>Zsh is available through package managers on most Linux distributions. Below are examples for different package managers.</p>\n<p>Debian/Ubuntu-based Systems:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">zsh</span></div></div>`}</code></pre></CodeCopy></div>\n<p>Red Hat-based Systems:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> <span class=\"token function\">zsh</span></div></div>`}</code></pre></CodeCopy></div>\n<p>Arch Linux:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> <span class=\"token function\">zsh</span></div></div>`}</code></pre></CodeCopy></div>\n<p>macOS:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">brew <span class=\"token function\">install</span> <span class=\"token function\">zsh</span></div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"ksh-korn-shell\"><a href=\"#ksh-korn-shell\">ksh (Korn Shell)</a></h2>\n<p><a href=\"http://www.kornshell.com/\" rel=\"external\" >Ksh</a> is a powerful and efficient shell known for its scripting capabilities and compatibility with Bash.</p>\n<h3 id=\"pros\"><a href=\"#pros\">Pros</a></h3>\n<ol>\n<li><strong>Compatibility</strong>: Ksh maintains compatibility with Bash, which makes it a seamless transition for users already familiar with Bash scripting.</li>\n<li><strong>Efficiency</strong>: Ksh is designed for efficiency, making it a suitable choice for both interactive use and scripting tasks.</li>\n</ol>\n<h3 id=\"cons\"><a href=\"#cons\">Cons</a></h3>\n<ol>\n<li><strong>Less Interactive Features</strong>: While Ksh is powerful for scripting, it may lack some of the interactive features found in shells like <a href=\"#fish-friendly-interactive-shell\"  >Fish</a> or <a href=\"#zsh-z-shell\"  >Zsh</a>. Users who prioritize interactive use might need to explore additional plugins or configurations.</li>\n<li><strong>Learning Curve</strong>: For users new to Unix-like shells, Ksh might have a steeper learning curve compared to more user-friendly options like <a href=\"#fish-friendly-interactive-shell\"  >Fish</a>. However, its comprehensive documentation can aid in the learning process.</li>\n</ol>\n<h3 id=\"installation\"><a href=\"#installation\">Installation</a></h3>\n<p>Installing Ksh varies depending on your Linux distribution.</p>\n<p>Debian/Ubuntu-based Systems:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> ksh</div></div>`}</code></pre></CodeCopy></div>\n<p>Red Hat-based Systems:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> ksh</div></div>`}</code></pre></CodeCopy></div>\n<p>Arch Linux:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> ksh</div></div>`}</code></pre></CodeCopy></div>\n<p>macOS:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">brew <span class=\"token function\">install</span> ksh</div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"csh-c-shell\"><a href=\"#csh-c-shell\">csh (C Shell)</a></h2>\n<p><a href=\"https://www.csh.org/\" rel=\"external\" >Csh</a> is known for its C-like syntax and scripting capabilities, caters to users who appreciate a familiar language structure.</p>\n<h3 id=\"pros\"><a href=\"#pros\">Pros</a></h3>\n<ol>\n<li><strong>C-Like Syntax</strong>: Users familiar with C programming will find the C Shell&#39;s syntax comfortable and easy to grasp. This can be an advantage for those transitioning from C or C++ environments.</li>\n<li><strong>Scripting</strong>: Csh offers powerful scripting features, making it suitable for automation and complex scripting tasks. If you&#39;re accustomed to C-like languages, you might find the scripting in C Shell more natural.</li>\n</ol>\n<h3 id=\"cons\"><a href=\"#cons\">Cons</a></h3>\n<ol>\n<li><strong>Limited Interactive Features</strong>: Compared to modern shells like <a href=\"#fish-friendly-interactive-shell\"  >Fish</a> or <a href=\"#zsh-z-shell\"  >Zsh</a>, the C Shell may lack some interactive features, such as advanced auto-completion and syntax highlighting.</li>\n<li><strong>Less Popular</strong>: The C Shell is not as widely adopted as shells like Bash or <a href=\"#zsh-z-shell\"  >Zsh</a>. As a result, the community support and availability of plugins may be more limited.</li>\n</ol>\n<h3 id=\"installation\"><a href=\"#installation\">Installation</a></h3>\n<p>Installing the C Shell is typically straightforward, and it is available through package managers on various systems.</p>\n<p>Debian/Ubuntu-based Systems:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> csh</div></div>`}</code></pre></CodeCopy></div>\n<p>Red Hat-based Systems:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> csh</div></div>`}</code></pre></CodeCopy></div>\n",
      "tags": [
        "Linux",
        "Shell",
        "Tips",
        "Bash",
        "Fish"
      ]
    },
    {
      "id": "why-care-about-privacy",
      "url": "https://blog.racca.me/why-care-about-privacy",
      "title": "I have nothing to hide. Why should I care about my privacy?",
      "summary": "👀 Reasons why you should care about your privacy",
      "image": "/why-care-about-privacy/cover.jpg",
      "date_published": "2023-12-16T16:22:10.000+01:00",
      "date_modified": "2023-12-16T16:22:10.000+01:00",
      "content_text": "PRIVACY ISN’T ABOUT HIDING\n\nThe \"I have nothing to hide\" argument frames privacy as something only criminals\nand other bad actors would demand, but nothing could be further from the truth.\nPrivacy is about the freedom to make choices without fear: how you want to live,\nwhat you believe in, who you are friends with, and what you want to share with\nwhom. A lack of privacy leads to uniformity and self-censorship, which pushes\nour opinions to the edges and erodes our ability to engage in healthy debate.\n\nUltimately, privacy also protects us from the unknown. Circumstances change.\nSomething that can be harmlessly shared today may someday be worth concealing,\nwhether it’s political beliefs or your ethnic or religious background. Privacy\nis the ultimate insurance against a rapidly changing corporate and political\nclimate.\n\nOnce we lose our privacy, we won’t get it back.\n\n\nPRIVACY IS A HUMAN RIGHT\n\nJust like other human rights, we didn’t always have the right to privacy.\nSeveral dictatorships around the world still don't value this right. Generations\nbefore ours fought for our right to privacy. Not caring about it shows little\nknowledge about history and the importance of it.\n\nArticle 12 of Universal Declaration of Human Rights states:\n\n> No one shall be subjected to arbitrary interference with his privacy, family,\n> home or correspondence, nor to attacks upon his honour and reputation.\n\nIt’s a human right just like the right to equality, to justice, freedom, a\nnationality, the right to religion, etc.\n\n\nYOUR INFORMATION IS VALUABLE\n\nYou might be okay with governments or security agencies or companies having your\nprivate information. You might trust Google and Facebook. But what if these get\nhacked and your information falls in the wrong hands? Let’s say, someone\ntargeting your family, your company, your wife/husband. Would you still be okay\nwith that? Would you be okay knowing that your photos, emails, or chats are in\nthe hands of someone who can blackmail you? Can you imagine what it’s like to\nhave your life torn apart because of a conversation you had 5 or 10 years ago?\nWhat would it be like to lose your job because of a conversation you had by\nphone with your wife?\n\nWe’ve all joked with things we consider sensitive. But, among friends, it’s\nsomething we all do. In fact, our behavior changes depending on the people we’re\nwith. I bet I could find something offensive you said in a group chat that you\nhave with your closest friends. Because they’re your friends and it was a joke\nor a sarcastic remark. But take it out of context and it is not longer a joke.\nWhat would happen if this “joke” fell in the hands of someone trying to harm\nyou?\n\nA company like Facebook or Google allows you to upload unlimited data to their\nservers, for free. What’s their business model? How do they make so much money?\nThey sell your info to advertising companies. But they never asked you if you\nwanted to sell your information. If someone asked you in person 100 questions\nabout your personal life to sell it, would you answer them? Probably not, right?\nBut you let this happen every time you use a service that makes money by selling\nyour info.",
      "content_html": "<h2 id=\"privacy-isnt-about-hiding\"><a href=\"#privacy-isnt-about-hiding\">Privacy isn’t about hiding</a></h2>\n<p>The &quot;I have nothing to hide&quot; argument frames privacy as something only criminals and other bad actors would demand, but nothing could be further from the truth.\nPrivacy is about the <strong>freedom</strong> to make choices without fear: how you want to live, what you believe in, who you are friends with, and what you want to share with whom.\nA lack of privacy leads to uniformity and <strong>self-censorship</strong>, which pushes our opinions to the edges and erodes our ability to engage in healthy debate.</p>\n<p>Ultimately, privacy also protects us from the unknown.\nCircumstances change.\nSomething that can be harmlessly shared today may <strong>someday</strong> be worth concealing, whether it’s political beliefs or your ethnic or religious background.\nPrivacy is the <strong>ultimate insurance</strong> against a rapidly changing corporate and political climate.</p>\n<p>Once we lose our privacy, we won’t get it back.</p>\n<h2 id=\"privacy-is-a-human-right\"><a href=\"#privacy-is-a-human-right\">Privacy is a human right</a></h2>\n<p>Just like other human rights, we didn’t always have the right to privacy.\nSeveral dictatorships around the world still don&#39;t value this right.\nGenerations before ours fought for our right to privacy.\nNot caring about it shows little knowledge about history and the importance of it.</p>\n<p><strong>Article 12 of Universal Declaration of Human Rights</strong> states: </p>\n<blockquote>\n<p>No one shall be subjected to arbitrary interference with his privacy, family, home\nor correspondence, nor to attacks upon his honour and reputation.</p>\n</blockquote>\n<!-- Source: https://www.un.org/sites/un2.un.org/files/2021/03/udhr.pdf -->\n\n<p>It’s a <strong>human right</strong> just like the right to equality, to justice, freedom, a nationality, the right to religion, etc.</p>\n<h2 id=\"your-information-is-valuable\"><a href=\"#your-information-is-valuable\">Your information is valuable</a></h2>\n<p>You might be okay with governments or security agencies or companies having your private information.\nYou might trust Google and Facebook.\nBut what if these get hacked and your <strong>information</strong> falls in the <strong>wrong hands</strong>?\nLet’s say, someone targeting your family, your company, your wife/husband.\nWould you still be okay with that? Would you be okay knowing that your photos, emails, or chats are in the hands of someone who can <strong>blackmail</strong> you?\nCan you imagine what it’s like to have your life torn apart because of a conversation you had 5 or 10 years ago?\nWhat would it be like to lose your job because of a conversation you had by phone with your wife?</p>\n<p>We’ve all joked with things we consider sensitive.\nBut, among friends, it’s something we all do.\nIn fact, <strong>our behavior changes depending on the people we’re with</strong>.\nI bet I could find something offensive you said in a group chat that you have with your closest friends.\nBecause they’re your friends and it was a joke or a sarcastic remark.\nBut take it out of context and it is not longer a joke.\nWhat would happen if this “joke” fell in the hands of someone trying to <strong>harm</strong> you?</p>\n<p>A company like Facebook or Google allows you to upload unlimited data to their servers, for free.\nWhat’s their business model?\n<strong>How do they make so much money?</strong>\nThey <strong>sell your info</strong> to advertising companies.\nBut they never asked you if you wanted to sell your information.\nIf someone asked you in person 100 questions about your personal life to sell it, would you answer them?\nProbably not, right?\nBut you let this happen every time you use a service that makes money by selling your info.</p>\n",
      "tags": [
        "Privacy"
      ]
    },
    {
      "id": "barcodes-vs-qr-codes",
      "url": "https://blog.racca.me/barcodes-vs-qr-codes",
      "title": "Barcodes VS QR Codes",
      "summary": "🖥 Barcodes VS QR Codes - 101 comparison",
      "image": "/barcodes-vs-qr-codes/cover.jpg",
      "date_published": "2023-12-05T19:10:53.000+01:00",
      "date_modified": "2023-12-14T19:47:53.000+01:00",
      "content_text": "BARCODES VS QR CODES - 101 COMPARISON\n\nBoth barcodes and QR codes offer great functionalities and have embedded\nthemselves in our everyday life, from business applications to personal use.\n\nIn this article we're going to look advantages and disdvantages of both types.\n\n\nBARCODES\n\nA barcode is a method of representing data in a visual, machine-readable form.\n\n * 1-dimentional barcodes: represent data by varying the widths, spacings and\n   sizes of parallel lines.\n * 2-dimentional barcodes (or matrix codes): represent data using rectangles,\n   dots, hexagons and other patterns.\n\nThe main components of a barcode include:\n\n * Quiet zone: blank margin located at either end of a barcode;\n * Barcode symbol: the actual representation of the data;\n * Start character: the first character in the sequence above the bars;\n * Data message: the following characters;\n * Check digit: the penultimate character;\n * Stop character: the last character in the sequence.\n\nThere are several types of barcodes, each one with symbol variations:\n\n * EAN (JAN):\n   * Displays only numerals (0 to 9);\n   * Commonly used for products;\n   * Compatible with EAN in Europe and UPC in the USA.\n * Interleaved 2 of 5:\n   * Uses numerals (0 to 9);\n   * Standard distribution code;\n   * Common in logistics.\n * Codabar (NW-7):\n   * Uses numerals (0 to 9), symbols, and start-stop characters (a to d);\n   * Easily printed;\n   * Mainly used for shipping labels, envelopes, and laboratory samples.\n * CODE 39:\n   * Comprises numerals, symbols, alphabetical letters, and start-stop\n     characters;\n   * Commonly used in factory automation.\n * CODE 128:\n   * Uses all 128 ASCII characters;\n   * Includes 3 start characters, 1 stop character, 4 non-data function\n     characters, and 4 code setting selection characters;\n   * Mostly used for electronic part management.\n\n\nADVANTAGES\n\n * Accuracy: Barcodes enhance data accuracy by minimizing the potential for\n   human errors during data entry. This is crucial for maintaining precise\n   records and preventing mistakes that can occur in manual data input.\n\n * Speed: Scanning barcodes is a quick and efficient process, allowing for the\n   rapid handling of transactions. This speed is particularly beneficial in\n   environments where large volumes of data need to be processed swiftly, such\n   as in retail, logistics, and manufacturing.\n\n * Cost-effectiveness: Barcodes are a cost-effective solution for companies of\n   all sizes. They are relatively easy to create, implement, and use. The\n   real-time tracking capabilities provided by barcodes contribute to efficient\n   inventory management, reducing the risks of stock shortages and overstocking.\n   This can lead to cost savings and improved overall inventory control.\n\n * Improved Customer Service: Barcodes enable businesses to quickly access and\n   retrieve customer information, facilitating personalized and efficient\n   service. This capability is especially valuable in retail and other\n   customer-oriented industries, where providing tailored service can enhance\n   the customer experience and satisfaction.\n\n\nDISADVANTAGES\n\n * Restricted data: Barcodes typically store a limited amount of data, such as a\n   serial number or product code. For more detailed information, additional\n   labels or tags may be required. This limitation can be a drawback when more\n   comprehensive data storage is needed.\n\n * Damage-prone: Barcodes can be susceptible to damage. Scratches or other forms\n   of damage may make the barcode unreadable, leading to potential issues in\n   data collection and accuracy.\n\n * Technology Dependency: Barcodes depend on specialized hardware, such as\n   barcode scanners or mobile devices equipped with scanning capabilities. The\n   need for specific technology may limit accessibility and compatibility with\n   certain systems, especially in environments where such equipment is not\n   readily available.\n\n * Security Concerns: Barcodes, if not properly secured, can be easily copied.\n   This vulnerability may pose a risk of fraud or counterfeiting, especially if\n   the barcodes are used for authentication or verification purposes.\n\n * Environmental Impact: The materials used to make barcodes are often\n   non-biodegradable. Improper disposal of barcode-related materials can\n   contribute to environmental issues, such as increased trash and pollution.\n   Considering environmentally friendly alternatives or disposal methods becomes\n   important in addressing this concern.\n\n\nGENERATE BARCODES (LINUX)\n\nInstall the barcode generator:\n\n{@html String.raw`\nsudo apt-get update\nsudo apt-get install barcode`}\n\nGenerate the barcode:\n\n{@html String.raw`\nbarcode -E -b \"id:0123456789\" > barcode.ps`}\n\nConvert it to png:\n\n{@html String.raw`\nconvert barcode.ps barcode.png`}\n\n\nQR CODES\n\nQR Codes are a type of two-dimensional matrix barcodes, they consists of black\nsquares arranged in a square grid on a white background, including some fiducial\nmarkers, which can be read by an imaging device.\n\nQR codes offer remarkable versatility, making them a powerful tool for various\napplications:\n\n * Share links: Generate QR codes with multiple links to effortlessly share\n   URLs, such as web pages, social media profiles, or document links;\n\n * Send emails: Simplify communication by sending emails with a quick scan,\n   facilitating seamless connections (i.e. including reaching out to customer\n   support);\n\n * Make phone calls: Streamline phone calls by using QR codes that redirect to a\n   phone number, eliminating the need to manually dial;\n\n * Send SMS: Enhance convenience by utilizing QR codes for preset text messages,\n   sparing users the effort of typing messages manually;\n\n * Share WhatsApp contacts: Instantly open WhatsApp chat windows without the\n   hassle of typing and saving contact numbers.\n\n * Connect to Wifi: Expedite internet network connections without searching for\n   network names or asking for passwords.\n\n\nADVANTAGES\n\n * Quick & Simple: QR codes allow consumers to access information swiftly\n   without the need for manual data entry or typing. This quick and simple\n   process enhances user convenience;\n\n * Large Capacity: QR codes have a larger data capacity compared to standard\n   barcodes. This makes them versatile and suitable for various applications\n   where more information needs to be stored;\n\n * Versatility: QR codes are indeed versatile and find applications in product\n   labeling, promotional materials, event tickets, and more. Their flexibility\n   makes them useful in diverse contexts;\n\n * Enhancing Consumer Experience: QR codes can enhance the consumer experience\n   by providing additional information about goods or services. They can also be\n   used to offer discounts and exclusive promotions, adding value for customers;\n\n * Cost-effective: QR codes are cost-effective to generate and print. This\n   affordability contributes to their widespread use as a means of providing\n   additional information to customers without significant expense.\n\n * Contactless: QR codes can be scanned from a distance, allowing for\n   contactless interactions. This is particularly valuable in public settings,\n   promoting hygiene and safety by reducing the need for physical contact.\n\n\nDISADVANTAGES\n\n * Technology Dependency: Just like barcodes, QR Codes, depend on specialized\n   hardware, such as barcode scanners or mobile devices equipped with scanning\n   capabilities.\n\n * Visual Aesthetic Concerns: Some argue that QR codes can be visually\n   unappealing, and their presence might be considered intrusive in certain\n   designs or settings.\n\n * User Education: Some users may not be familiar with QR codes or may be unsure\n   about how to use them.\n\n\nGENERATE QR CODES (LINUX)\n\nInstall the QR Code generator:\n\n{@html String.raw`\nsudo apt-get update\nsudo apt-get install qrencode`}\n\nGenerate the QR Code:\n\n{@html String.raw`\nqrencode -o qrcode.png 'https://example.com'`}",
      "content_html": "<h2 id=\"barcodes-vs-qr-codes-101-comparison\"><a href=\"#barcodes-vs-qr-codes-101-comparison\">Barcodes VS QR Codes - 101 Comparison</a></h2>\n<p>Both barcodes and QR codes offer great functionalities and have embedded themselves in our everyday life, from business applications to personal use.</p>\n<p>In this article we&#39;re going to look advantages and disdvantages of both types.</p>\n<h2 id=\"barcodes\"><a href=\"#barcodes\">Barcodes</a></h2>\n<p>A barcode is a method of representing data in a visual, machine-readable form.</p>\n<ul>\n<li><strong>1-dimentional barcodes</strong>: represent data by varying the widths, spacings and sizes of parallel lines.</li>\n<li><strong>2-dimentional barcodes</strong> (<em>or matrix codes</em>): represent data using rectangles, dots, hexagons and other patterns.</li>\n</ul>\n<p>The main components of a barcode include:</p>\n<ul>\n<li><strong>Quiet zone</strong>: blank margin located at either end of a barcode;</li>\n<li><strong>Barcode symbol</strong>: the actual representation of the data;</li>\n<li><strong>Start character</strong>: the first character in the sequence above the bars;</li>\n<li><strong>Data message</strong>: the following characters;</li>\n<li><strong>Check digit</strong>: the penultimate character;</li>\n<li><strong>Stop character</strong>: the last character in the sequence.</li>\n</ul>\n<p>There are several types of barcodes, each one with symbol variations:</p>\n<ul>\n<li><strong>EAN (JAN)</strong>:<ul>\n<li>Displays only numerals (0 to 9);</li>\n<li>Commonly used for products;</li>\n<li>Compatible with EAN in Europe and UPC in the USA.</li>\n</ul>\n</li>\n<li><strong>Interleaved 2 of 5</strong>:<ul>\n<li>Uses numerals (0 to 9);</li>\n<li>Standard distribution code;</li>\n<li>Common in logistics.</li>\n</ul>\n</li>\n<li><strong>Codabar (NW-7)</strong>:<ul>\n<li>Uses numerals (0 to 9), symbols, and start-stop characters (a to d);</li>\n<li>Easily printed;</li>\n<li>Mainly used for shipping labels, envelopes, and laboratory samples.</li>\n</ul>\n</li>\n<li><strong>CODE 39</strong>:<ul>\n<li>Comprises numerals, symbols, alphabetical letters, and start-stop characters;</li>\n<li>Commonly used in factory automation.</li>\n</ul>\n</li>\n<li><strong>CODE 128</strong>:<ul>\n<li>Uses all 128 ASCII characters;</li>\n<li>Includes 3 start characters, 1 stop character, 4 non-data function characters, and 4 code setting selection characters;</li>\n<li>Mostly used for electronic part management.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"advantages\"><a href=\"#advantages\">Advantages</a></h3>\n<ul>\n<li><p><strong>Accuracy</strong>: Barcodes enhance data accuracy by minimizing the potential for human errors during data entry. This is crucial for maintaining precise records and preventing mistakes that can occur in manual data input.</p>\n</li>\n<li><p><strong>Speed</strong>: Scanning barcodes is a quick and efficient process, allowing for the rapid handling of transactions. This speed is particularly beneficial in environments where large volumes of data need to be processed swiftly, such as in retail, logistics, and manufacturing.</p>\n</li>\n<li><p><strong>Cost-effectiveness</strong>: Barcodes are a cost-effective solution for companies of all sizes. They are relatively easy to create, implement, and use. The real-time tracking capabilities provided by barcodes contribute to efficient inventory management, reducing the risks of stock shortages and overstocking. This can lead to cost savings and improved overall inventory control.</p>\n</li>\n<li><p><strong>Improved Customer Service</strong>: Barcodes enable businesses to quickly access and retrieve customer information, facilitating\npersonalized and efficient service. This capability is especially valuable in retail and other customer-oriented industries, where providing tailored service can enhance the customer experience and satisfaction.</p>\n</li>\n</ul>\n<h3 id=\"disadvantages\"><a href=\"#disadvantages\">Disadvantages</a></h3>\n<ul>\n<li><p><strong>Restricted data</strong>: Barcodes typically store a limited amount of data, such as a serial number or product code. For more detailed information, additional labels or tags may be required. This limitation can be a drawback when more comprehensive data storage is needed.</p>\n</li>\n<li><p><strong>Damage-prone</strong>: Barcodes can be susceptible to damage. Scratches or other forms of damage may make the barcode unreadable, leading to potential issues in data collection and accuracy.</p>\n</li>\n<li><p><strong>Technology Dependency</strong>: Barcodes depend on specialized hardware, such as barcode scanners or mobile devices equipped with scanning capabilities. The need for specific technology may limit accessibility and compatibility with certain systems, especially in environments where such equipment is not readily available.</p>\n</li>\n<li><p><strong>Security Concerns</strong>: Barcodes, if not properly secured, can be easily copied. This vulnerability may pose a risk of fraud or counterfeiting, especially if the barcodes are used for authentication or verification purposes.</p>\n</li>\n<li><p><strong>Environmental Impact</strong>: The materials used to make barcodes are often non-biodegradable. Improper disposal of barcode-related materials can contribute to environmental issues, such as increased trash and pollution. Considering environmentally friendly alternatives or disposal methods becomes important in addressing this concern.</p>\n</li>\n</ul>\n<h3 id=\"generate-barcodes-linux\"><a href=\"#generate-barcodes-linux\">Generate Barcodes (Linux)</a></h3>\n<p>Install the barcode generator:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> barcode</div></div>`}</code></pre></CodeCopy></div>\n<p>Generate the barcode:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">barcode <span class=\"token parameter variable\">-E</span> <span class=\"token parameter variable\">-b</span> <span class=\"token string\">\"id:0123456789\"</span> <span class=\"token operator\">></span> barcode.ps</div></div>`}</code></pre></CodeCopy></div>\n<p>Convert it to png:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">convert barcode.ps barcode.png</div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"qr-codes\"><a href=\"#qr-codes\">QR Codes</a></h2>\n<p>QR Codes are a type of two-dimensional matrix barcodes, they consists of black squares arranged in a square grid on a white background, including some fiducial markers, which can be read by an imaging device.</p>\n<p>QR codes offer remarkable versatility, making them a powerful tool for various applications:</p>\n<ul>\n<li><p><strong>Share links</strong>: Generate QR codes with multiple links to effortlessly share URLs, such as web pages, social media profiles, or document links;</p>\n</li>\n<li><p><strong>Send emails</strong>: Simplify communication by sending emails with a quick scan, facilitating seamless connections (<em>i.e. including reaching out to customer support</em>);</p>\n</li>\n<li><p><strong>Make phone calls</strong>: Streamline phone calls by using QR codes that redirect to a phone number, eliminating the need to manually dial;</p>\n</li>\n<li><p><strong>Send SMS</strong>: Enhance convenience by utilizing QR codes for preset text messages, sparing users the effort of typing messages manually;</p>\n</li>\n<li><p><strong>Share WhatsApp contacts</strong>: Instantly open WhatsApp chat windows without the hassle of typing and saving contact numbers.</p>\n</li>\n<li><p><strong>Connect to Wifi</strong>: Expedite internet network connections without searching for network names or asking for passwords.</p>\n</li>\n</ul>\n<h3 id=\"advantages\"><a href=\"#advantages\">Advantages</a></h3>\n<ul>\n<li><p><strong>Quick &amp; Simple</strong>: QR codes allow consumers to access information swiftly without the need for manual data entry or typing. This quick and simple process enhances user convenience;</p>\n</li>\n<li><p><strong>Large Capacity</strong>: QR codes have a larger data capacity compared to standard barcodes. This makes them versatile and suitable for various applications where more information needs to be stored;</p>\n</li>\n<li><p><strong>Versatility</strong>: QR codes are indeed versatile and find applications in product labeling, promotional materials, event tickets, and more. Their flexibility makes them useful in diverse contexts;</p>\n</li>\n<li><p><strong>Enhancing Consumer Experience</strong>: QR codes can enhance the consumer experience by providing additional information about goods or services. They can also be used to offer discounts and exclusive promotions, adding value for customers;</p>\n</li>\n<li><p><strong>Cost-effective</strong>: QR codes are cost-effective to generate and print. This affordability contributes to their widespread use as a means of providing additional information to customers without significant expense.</p>\n</li>\n<li><p><strong>Contactless</strong>: QR codes can be scanned from a distance, allowing for contactless interactions. This is particularly valuable in public settings, promoting hygiene and safety by reducing the need for physical contact.</p>\n</li>\n</ul>\n<h3 id=\"disadvantages\"><a href=\"#disadvantages\">Disadvantages</a></h3>\n<ul>\n<li><p><strong>Technology Dependency</strong>: Just like barcodes, QR Codes, depend on specialized hardware, such as barcode scanners or mobile devices equipped with scanning capabilities.</p>\n</li>\n<li><p><strong>Visual Aesthetic Concerns</strong>: Some argue that QR codes can be visually unappealing, and their presence might be considered intrusive in certain designs or settings.</p>\n</li>\n<li><p><strong>User Education</strong>: Some users may not be familiar with QR codes or may be unsure about how to use them.</p>\n</li>\n</ul>\n<h3 id=\"generate-qr-codes-linux\"><a href=\"#generate-qr-codes-linux\">Generate QR Codes (Linux)</a></h3>\n<p>Install the QR Code generator:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> qrencode</div></div>`}</code></pre></CodeCopy></div>\n<p>Generate the QR Code:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">qrencode <span class=\"token parameter variable\">-o</span> qrcode.png <span class=\"token string\">'https://example.com'</span></div></div>`}</code></pre></CodeCopy></div>\n",
      "tags": [
        "QRCode",
        "Barcode"
      ]
    },
    {
      "id": "custom-email-with-cloudflare-and-gmail",
      "url": "https://blog.racca.me/custom-email-with-cloudflare-and-gmail",
      "title": "Create a Custom Email address with Gmail and Cloudflare",
      "summary": "📩 Create a custom email address in 10 minutes",
      "image": "/custom-email-with-cloudflare-and-gmail/cover.jpg",
      "date_published": "2023-12-03T15:58:03.000+01:00",
      "date_modified": "2023-12-03T15:58:03.000+01:00",
      "content_text": "CREATE A CUSTOM EMAIL ADDRESS FOR FREE\n\nIn the digital age, having a custom email address not only adds a professional\ntouch to your communication but also enhances brand identity. In this tutorial,\nwe'll walk you through the process of setting up a custom email address using\nCloudflare Email Routing and Gmail SMTP. By the end of this guide, you'll be\nable to send and receive emails using your own domain, all while leveraging the\npower and reliability of Gmail.\n\n\nPREREQUISITES\n\nBefore we dive into the steps, make sure you have the following prerequisites in\nplace:\n\n * An active Gmail account.\n * A domain registered with Cloudflare.\n * Access to your domain's DNS settings on Cloudflare.\n\n\nSETUP YOUR GOOGLE ACCOUNT\n\n\nENABLE 2 FACTOR AUTHENTIFICATION\n\nIf you already have enabled two factor authentification you can safely skip this\nstep.\n\n 1. Open your Google Account [https://myaccount.google.com/];\n 2. Select \"Security\" in the navigation panel;\n 3. Under “Signing in to Google,” select\" 2-Step Verification\", then \"Get\n    started\";\n 4. Follow the on-screen steps.\n\n\nCREATE AN APP PASSWORD\n\nAn app password is a 16-digit passcode that gives a less secure app or device\npermission to access your Google Account.\n\n 1. Open the App Passwords console [https://myaccount.google.com/apppasswords]\n    on your Google account;\n 2. Type a name for your applicatiom i.e. \"My Custom Email\"\n 3. Safely store the 16-digit passcode, you'll need this later.\n\n\nENABLE CLOUDFLARE'S EMAIL ROUTING\n\nEmails that are routed through Cloudflare to your preferred email inbox, benefit\nfrom enhanced security, spam filtering, and improved deliverability. Cloudflare\nEmail Routing acts as a protective layer for your email infrastructure,\nshielding it from potential threats and optimizing the overall email experience.\n\n 1. Go to the Cloudflare Dashboard [https://dash.cloudflare.com] and select your\n    domain;\n 2. Go to Email Email Routing Get Started;\n 3. Enter the custom email address in Custom Address (i.e. );\n 4. Enter the email address you want your emails to be forwarded to in\n    Destination Address (i.e. );\n 5. Select Create and Continue follow the instruction sent to your gmail\n    address.\n 6. Go to the DNS section of the dashboard and add a new TXT record with the\n    following content:\n\n{@html String.raw`\n\"v=spf1 include:_spf.mx.cloudflare.net include:_spf.google.com ~all\"`}\n\n\nADD YOUR CLOUDFLARE-ROUTED EMAIL TO GMAIL\n\nOnce did all the previous we can finally add the custom address to gmail.\n\n 1. Go to your Gmail Account [https://gmail.com/] Settings Accounts;\n 2. Select Add another email address under Send Mail As;\n 3. Fill the form with the name of the email and the Cloudflare-routed email\n    (i.e. ) untick \"Treat as an alias\";\n 4. Fill the next form with the following information:\n    SMTP Server: smtp.gmail.com\n    Port: 587\n    Username: your gmail address (i.e. )\n    Password: the app password\n 5. Leave TLS enabled click Add Account\n 6. Confirm the email address with the code Google's sent you to your gmail\n    account.\n\n\nENJOY\n\nYou now have a fully working email that is routed through Cloudflare to receive\nemails and uses Google's SMTP server to send them.\n\nWhenever you send a new email via GMail, make sure to switch the sender\naccordingly to your preferences.",
      "content_html": "<h2 id=\"create-a-custom-email-address-for-free\"><a href=\"#create-a-custom-email-address-for-free\">Create a Custom Email Address for Free</a></h2>\n<p>In the digital age, having a custom email address not only adds a professional touch to your communication but also enhances brand identity.\nIn this tutorial, we&#39;ll walk you through the process of setting up a custom email address using Cloudflare Email Routing and Gmail SMTP.\nBy the end of this guide, you&#39;ll be able to send and receive emails using your own domain, all while leveraging the power and reliability of Gmail.</p>\n<h3 id=\"prerequisites\"><a href=\"#prerequisites\">Prerequisites</a></h3>\n<p>Before we dive into the steps, make sure you have the following prerequisites in place:</p>\n<ul>\n<li>An active Gmail account.</li>\n<li>A domain registered with Cloudflare.</li>\n<li>Access to your domain&#39;s DNS settings on Cloudflare.</li>\n</ul>\n<h2 id=\"setup-your-google-account\"><a href=\"#setup-your-google-account\">Setup Your Google Account</a></h2>\n<h3 id=\"enable-2-factor-authentification\"><a href=\"#enable-2-factor-authentification\">Enable 2 Factor Authentification</a></h3>\n<p>If you already have enabled two factor authentification you can safely skip this step.</p>\n<ol>\n<li>Open your <a href=\"https://myaccount.google.com/\" rel=\"external\" >Google Account</a>;</li>\n<li>Select &quot;Security&quot; in the navigation panel;</li>\n<li>Under “Signing in to Google,” select&quot; 2-Step Verification&quot;, then &quot;Get started&quot;;</li>\n<li>Follow the on-screen steps.</li>\n</ol>\n<h3 id=\"create-an-app-password\"><a href=\"#create-an-app-password\">Create an App Password</a></h3>\n<p>An app password is a 16-digit passcode that gives a less secure app or device permission to access your Google Account.</p>\n<ol>\n<li>Open the <a href=\"https://myaccount.google.com/apppasswords\" rel=\"external\" >App Passwords console</a> on your Google account;</li>\n<li>Type a name for your applicatiom <em>i.e. &quot;My Custom Email&quot;</em></li>\n<li>Safely store the 16-digit passcode, you&#39;ll need this later.</li>\n</ol>\n<h2 id=\"enable-cloudflare-and-39-s-email-routing\"><a href=\"#enable-cloudflare-and-39-s-email-routing\">Enable Cloudflare&#39;s Email Routing</a></h2>\n<p>Emails that are routed through Cloudflare to your preferred email inbox, benefit from enhanced security, spam filtering, and improved deliverability.\nCloudflare Email Routing acts as a protective layer for your email infrastructure, shielding it from potential threats and optimizing the overall email experience.</p>\n<ol>\n<li>Go to the <strong><a href=\"https://dash.cloudflare.com\" rel=\"external\" >Cloudflare Dashboard</a></strong> and select your domain;</li>\n<li>Go to <strong>Email</strong> <AndThen /> <strong>Email Routing</strong> <AndThen text=\"then select\" /> <strong>Get Started</strong>;</li>\n<li>Enter the custom email address in <strong>Custom Address</strong> (<em>i.e. <NotEmail email=\"cool-email@example.com\" /></em>);</li>\n<li>Enter the email address you want your emails to be forwarded to in <strong>Destination Address</strong> (<em>i.e. <NotEmail email=\"my-personal-email@gmail.com\" /></em>);</li>\n<li>Select <strong>Create and Continue</strong> <AndThen /> follow the instruction sent to your gmail address.</li>\n<li>Go to the <strong>DNS</strong> section of the dashboard and add a new TXT record with the following content:</li>\n</ol>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-txt\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">\"v=spf1 include:_spf.mx.cloudflare.net include:_spf.google.com ~all\"</div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"add-your-cloudflare-routed-email-to-gmail\"><a href=\"#add-your-cloudflare-routed-email-to-gmail\">Add Your Cloudflare-Routed Email to Gmail</a></h2>\n<p>Once did all the previous we can finally add the custom address to gmail.</p>\n<ol>\n<li>Go to your <a href=\"https://gmail.com/\" rel=\"external\" >Gmail Account</a> <AndThen text=\"then click on\" /> <strong>Settings</strong> <AndThen text=\"then select\" /> <strong>Accounts</strong>;</li>\n<li>Select <strong>Add another email address</strong> under <strong>Send Mail As</strong>;</li>\n<li>Fill the form with the name of the email and the Cloudflare-routed email (<em>i.e. <NotEmail email=\"cool-email@example.com\" /></em>) <AndThen /> untick &quot;<strong>Treat as an alias</strong>&quot;;</li>\n<li>Fill the next form with the following information:<br>\n <strong>SMTP Server</strong>: smtp.gmail.com<br>\n <strong>Port</strong>: 587<br>\n <strong>Username</strong>: your gmail address (<em>i.e. <NotEmail email=\"my-personal-email@gmail.com\" /></em>)<br>\n <strong>Password</strong>: <a href=\"#create-an-app-password\"  >the app password</a></li>\n<li>Leave <strong>TLS</strong> enabled <AndThen /> click <strong>Add Account</strong></li>\n<li>Confirm the email address with the code Google&#39;s sent you to your gmail account.</li>\n</ol>\n<h2 id=\"enjoy\"><a href=\"#enjoy\">Enjoy</a></h2>\n<p>You now have a fully working email that is routed through Cloudflare to receive emails and uses Google&#39;s SMTP server to send them.</p>\n<p>Whenever you send a new email via GMail, make sure to switch the sender accordingly to your preferences.</p>\n",
      "tags": [
        "Email",
        "Gmail",
        "Clodflare"
      ]
    },
    {
      "id": "7-reasons-i-love-hetzner",
      "url": "https://blog.racca.me/7-reasons-i-love-hetzner",
      "title": "Why I Love Hetzner Cloud",
      "summary": "❤️ 7 reasons why I love Hetzner Cloud",
      "image": "/7-reasons-i-love-hetzner/cover.jpg",
      "date_published": "2023-11-08T17:12:00.000+01:00",
      "date_modified": "2023-11-08T17:12:00.000+01:00",
      "content_text": "WHY I LOVE HETZNER CLOUD\n\nHetzner Cloud [{refLink}] is a cloud computing service provided by Hetzner\nOnline GmbH, a German web hosting company and data center operator. It offers\nvirtual machines, known as cloud servers, that run on physical servers and are\nused to run an operating system and computer programs.\n\n\nPROS\n\n 1. Affordability: Hetzner Cloud [{refLink}] is known for its competitive\n    pricing. It offers high-performance cloud servers at a reasonable cost,\n    making it an attractive option for users on a budget;\n\n 2. Performance: Hetzner [{refLink}]'s servers utilize fast NVMe storage, which\n    delivers excellent performance. This makes Hetzner a good choice for\n    applications that require high I/O operations, such as databases or media\n    servers;\n\n 3. Ease of Use: Hetzner [{refLink}]'s user interface is user-friendly, making\n    it easy for beginners to navigate and use the service. It also supports\n    cloud-init, allowing users to execute special commands while booting up\n    their servers;\n\n 4. Scalability: Hetzner [{refLink}] allows users to scale their servers up or\n    down based on their needs. This is particularly useful for applications that\n    experience fluctuating loads;\n\n 5. Private Network: Hetzner [{refLink}] allows users to create servers without\n    public IP addresses, providing an extra layer of security for applications\n    that do not require an internet connection;\n\n 6. APIs: Hetzner Cloud [{refLink}] provides a REST-API and a CLI tool for\n    developers meaning that you can monitor or change the status of your\n    server\\bs;\n\n 7. Referrals Program: Users can join Hetzner Cloud [{refLink}] with a special\n    link that gives them €20 in free cloud credits [{refLink}].\n\n\nCONS\n\n 1. Limited Disk Space: If you need a huge ammount of disk space, Hetzner Cloud\n    [{refLink}] might not be the right solution for you;\n\n 2. Strict Payment Policies: Hetzner [{refLink}] has strict payment policies. If\n    there's a slight delay in your payment, your account may be deactivated;\n\n 3. KYC Requirements: Hetzner [{refLink}] requires users to provide personal\n    identification documents, such as a passport and proof of address, for Know\n    Your Customer (KYC) purposes. This can be a barrier for users who are\n    uncomfortable sharing personal information.\n\n\nCONCLUSION\n\nIn conclusion, Hetzner Cloud offers a compelling array of advantages that make\nit a top choice for cloud hosting. Its affordability, outstanding performance,\nuser-friendly interface, scalability, private network options,\ndeveloper-friendly APIs, and a lucrative referral program are all standout\nfeatures that have won over many users.",
      "content_html": "<h2 id=\"why-i-love-hetzner-cloud\"><a href=\"#why-i-love-hetzner-cloud\">Why I Love Hetzner Cloud</a></h2>\n<p><a href=\"{refLink}\"  >Hetzner Cloud</a> is a cloud computing service provided by Hetzner Online GmbH, a German web hosting company and data center operator. It offers virtual machines, known as cloud servers, that run on physical servers and are used to run an operating system and computer programs.</p>\n<h3 id=\"pros\"><a href=\"#pros\">Pros</a></h3>\n<ol>\n<li><p><strong>Affordability</strong>: <a href=\"{refLink}\"  >Hetzner Cloud</a> is known for its competitive pricing. It offers high-performance cloud servers at a reasonable cost, making it an attractive option for users on a budget;</p>\n</li>\n<li><p><strong>Performance</strong>: <a href=\"{refLink}\"  >Hetzner</a>&#39;s servers utilize fast NVMe storage, which delivers excellent performance. This makes Hetzner a good choice for applications that require high I/O operations, such as databases or media servers;</p>\n</li>\n<li><p><strong>Ease of Use</strong>: <a href=\"{refLink}\"  >Hetzner</a>&#39;s user interface is user-friendly, making it easy for beginners to navigate and use the service. It also supports cloud-init, allowing users to execute special commands while booting up their servers;</p>\n</li>\n<li><p><strong>Scalability</strong>: <a href=\"{refLink}\"  >Hetzner</a> allows users to scale their servers up or down based on their needs. This is particularly useful for applications that experience fluctuating loads;</p>\n</li>\n<li><p><strong>Private Network</strong>: <a href=\"{refLink}\"  >Hetzner</a> allows users to create servers without public IP addresses, providing an extra layer of security for applications that do not require an internet connection;</p>\n</li>\n<li><p><strong>APIs</strong>: <a href=\"{refLink}\"  >Hetzner Cloud</a> provides a REST-API and a CLI tool for developers meaning that you can monitor or change the status of your server\\b<em>s</em>;</p>\n</li>\n<li><p><strong>Referrals Program</strong>: Users can join <a href=\"{refLink}\"  >Hetzner Cloud</a> with a special link that gives them <a href=\"{refLink}\"  ><strong>€20 in free cloud credits</strong></a>.</p>\n</li>\n</ol>\n<h3 id=\"cons\"><a href=\"#cons\">Cons</a></h3>\n<ol>\n<li><p><strong>Limited Disk Space</strong>: If you need a huge ammount of disk space, <a href=\"{refLink}\"  >Hetzner Cloud</a> might not be the right solution for you;</p>\n</li>\n<li><p><strong>Strict Payment Policies</strong>: <a href=\"{refLink}\"  >Hetzner</a> has strict payment policies. If there&#39;s a slight delay in your payment, your account may be deactivated;</p>\n</li>\n<li><p><strong>KYC Requirements</strong>: <a href=\"{refLink}\"  >Hetzner</a> requires users to provide personal identification documents, such as a passport and proof of address, for Know Your Customer (KYC) purposes. This can be a barrier for users who are uncomfortable sharing personal information.</p>\n</li>\n</ol>\n<h2 id=\"conclusion\"><a href=\"#conclusion\">Conclusion</a></h2>\n<p>In conclusion, Hetzner Cloud offers a compelling array of advantages that make it a top choice for cloud hosting. Its affordability, outstanding performance, user-friendly interface, scalability, private network options, developer-friendly APIs, and a lucrative referral program are all standout features that have won over many users.</p>\n",
      "tags": [
        "Hosting",
        "Hetzner",
        "Referral"
      ]
    },
    {
      "id": "create-an-echo-bot",
      "url": "https://blog.racca.me/create-an-echo-bot",
      "title": "Create a Telegram Echo Bot",
      "summary": "🤖 Create a Telegram Echo Bot",
      "image": "/create-an-echo-bot/cover.jpg",
      "date_published": "2023-11-07T12:00:00.000+01:00",
      "date_modified": "2023-12-12T11:00:00.000+01:00",
      "content_text": "INTRODUCTION\n\nThis article is part of the FirstBot [/?tags-Series=PHPBot] series. We recommend\nreading the introcution chapter [/create-your-first-bot] before continuing.\n\n{@html String.raw`\ncomposer require telegramsdk/botapi`}\n\n\nTELEGRAM UPDATES\n\nBefore writing the code we have to mention that there are 2 methods to get\nupdates from our Telegram bot.\n\n 1. getUpdates [https://core.telegram.org/bots/api#getupdates] : used for long\n    polling , usefull if you don't have a public ip or an https url.\n 2. setWebhook [https://core.telegram.org/bots/api#setwebhook] : more efficient\n    way for recinving incoming updates, you need to have a public ip address\n    with an https url.\n\nIn this article we'll look into both ways of creating a Telegram Bot.\n\n\nSTART CODING\n\n\nGET UPDATES\n\nHere's a simple example on how to get updates from Telegram and reply to them\nwith the same message they sent.\n\n\nBOT.PHP\n\n{@html String.raw`\n1\n<?php\n2\n\n3\nrequire_once  \"vendor/autoload.php\";\n4\n\n5\nuse TelegramSDK\\BotAPI\\Exception\\TelegramException;\n6\nuse TelegramSDK\\BotAPI\\Telegram\\{Bot, Update};\n7\n\n8\n\n9\ndefine(\"GREEN_COLOR\", \"\\033[0;32m\");\n10\ndefine(\"RED_COLOR\", \"\\033[0;31m\");\n11\ndefine(\"DEFAULT_COLOR\", \"\\033[0m\");\n12\n\n13\n\n14\n$bot = new Bot(\"YOUR_BOT_TOKEN\", Update::UPDATES_FROM_GET_UPDATES);\n15\n\n16\nif(!$bot->isValidToken(true)) {\n17\n    echo RED_COLOR . \"Invalid bot token.\\n\" . DEFAULT_COLOR;\n18\n    exit(1);\n19\n}\n20\n\n21\necho GREEN_COLOR . \"Bot Started!\\n\" . DEFAULT_COLOR;\n22\n\n23\nfor ( ; ; sleep(5)) {\n24\n\n25\n    $updates = $bot->updates(isset($updates) ? $updates->getLastUpdateId() : null);\n26\n\n27\n    foreach($updates->result as $update){\n28\n        if(isset($update->message)){\n29\n            $chat = $update->getChat();\n30\n\n31\n            try {\n32\n\n33\n                $res = $bot->copyMessage([\n34\n                    \"chat_id\" => $chat->id,\n35\n                    \"from_chat_id\" => $chat->id,\n36\n                    \"message_id\" => $update->getMessage()->message_id\n37\n                ]);\n38\n\n39\n                echo GREEN_COLOR . \"Replied to \" . $chat->id . \"\\n\" . DEFAULT_COLOR;\n40\n\n41\n            } catch (TelegramException $e) {\n42\n                echo RED_COLOR . \"Coulnd't reply to \" . $chat->id . \": \" . $e->getResponseBody()->description . \"\\n\" . DEFAULT_COLOR;\n43\n            }\n44\n\n45\n        }\n46\n    }\n47\n}`}\n\nWHAT AM I DOING?\n\nIf you already worked with TelegramSDK [https://github.com/TelegramSDK/BotAPI]\nyou might already know what I've just written, but I still reccommend having a\nlook at the official documentation [https://botapi.racca.me/] for more\ninformation.\n\nINCLUDE THE LIBRARY\n\n{@html String.raw`\nrequire_once  \"vendor/autoload.php\";`}\n\nThis line includes the autoloader file from the Composer dependency manager.\nIt's used to autoload classes and functions from the third-party libraries,\nensuring that you don't need to manually include each file.\n\nUSE STATEMENTS\n\n{@html String.raw`\nuse TelegramSDK\\BotAPI\\Exception\\TelegramException;\nuse TelegramSDK\\BotAPI\\Telegram\\{Bot, Update};`}\n\nThese use statements import specific classes from telgramsdk/botapi. This allows\nyou to use these classes in the code without specifying the full namespace each\ntime.\n\nDEFINE CONSTANTS FOR CONSOLE COLORS\n\n{@html String.raw`\ndefine(\"GREEN_COLOR\", \"\\033[0;32m\");\ndefine(\"RED_COLOR\", \"\\033[0;31m\");\ndefine(\"DEFAULT_COLOR\", \"\\033[0m\");`}\n\nThese lines define constants for ANSI escape codes, which are used to colorize\nthe console output. GREEN_COLOR sets the text color to green, RED_COLOR to red,\nand DEFAULT_COLOR resets the color to the default.\n\nINITIALIZE THE TELEGRAM BOT\n\n{@html String.raw`\n$bot = new Bot(\"YOUR_BOT_TOKEN\", Update::UPDATES_FROM_GET_UPDATES);`}\n\nAn instance of the Bot class is created with the Telegram bot token and the\nupdate method (UPDATES_FROM_GET_UPDATES) specified. The\nUpdate::UPDATES_FROM_GET_UPDATES constant indicates that updates should be\nfetched using the getUpdates method.\n\nCHECK TOKEN VALIDITY\n\n{@html String.raw`\nif (!$bot->isValidToken(true)) {\n    echo RED_COLOR . \"Invalid bot token.\\n\" . DEFAULT_COLOR;\n    exit(1);\n}`}\n\nIt checks if the bot token is valid. If not, it prints an error message in red\nand exits the script.\n\nINFINITE LOOP FOR HANDLING UPDATES\n\n{@html String.raw`\nfor (; ; sleep(5)) {\n    // Code for handling updates\n}`}\n\nAn infinite loop that fetches updates every 5 seconds.\n\nHANDLE UPDATES\n\n{@html String.raw`\n$updates = $bot->updates(isset($updates) ? $updates->getLastUpdateId() : null);`}\n\nFetches updates using the getUpdates method. If $updates is set, it fetches\nupdates starting from the last processed update.\n\n{@html String.raw`\nforeach ($updates->result as $update) {\n    // Code for processing each update\n}`}\n\nLoops through each update in the result array.\n\nPROCESS MESSAGE UPDATES\n\n{@html String.raw`\nif (isset($update->message)) {\n    // Code for processing message updates\n}`}\n\nChecks if the update is a message.\n\n{@html String.raw`\n$res = $bot->copyMessage([\n    \"chat_id\" => $chat->id,\n    \"from_chat_id\" => $chat->id,\n    \"message_id\" => $update->getMessage()->message_id\n]);`}\n\nCopies the received message and sends it back to the same chat.\n\nHANDLE EXCEPTIONS\n\n{@html String.raw`\n} catch (TelegramException $e) {\n    // Code for handling exceptions\n}`}\n\nCatches any exceptions that may occur during the message copy process and prints\nan error message.\n\nSTART THE BOT\n\nThat's it, now you can start the bot with\n\n{@html String.raw`\nphp bot.php`}\n\nSend to it a message and see it replying!\n\n\nSET WEBHOOK\n\nSetting a webhook [https://core.telegram.org/bots/api#setwebhook] with Telegram\nis bit more complicated than working with getUpdates\n[https://core.telegram.org/bots/api#getupdates] as it requires an HTTPS url. In\nthis article will assume that you already have it.\n\nDIRECTORY STRUCTURE\n\nHere's an example of directory structure you might follow:\n\n\n\nENVIRONMENT\n\nLet's start with environment.php, a file that will hamdle common tasks such as\ncreating a new instance of the bot.\n\n\nSRC/ENVIRONMENT.PHP\n\n{@html String.raw`\n1\n<?php\n2\n\n3\nrequire_once __DIR__ . \"/../vendor/autoload.php\";\n4\n\n5\nuse TelegramSDK\\BotAPI\\Telegram\\{Bot, Update};\n6\n\n7\n$bot = new Bot(\"YOUR_BOT_TOKEN\", Update::UPDATES_FROM_WEBHOOK);\n8\n\n9\n$update = $bot->updates(); // Getting the updates`}\n\nAs you can see, getting updates from the webhook is much easier than doing it\nwith getUpdates.\n\nBOOTSTRAP\n\nThe bootstrap.php file simply sets the webhook to the specified url.\n\n\nSRC/BOOTSTRAP.PHP\n\n{@html String.raw`\n1\n<?php\n2\n\n3\nrequire_once __DIR__ . \"/environment.php\";\n4\n\n5\n$bot->setWebhook([\n6\n    \"url\" => \"https://example.com\", // Remember to use https\n7\n    \"drop_pending_updates\" => true // Drop any pending updates\n8\n]);`}\n\nSee setWebhook [https://core.telegram.org/bots/api#setwebhook] for more\ninformation.\n\nPUBLIC FILE\n\nThe src/public/ directory will be the one exposed to your web server and it will\ncontain only one file, index.php\n\n\nSRC/PUBLIC/INDEX.PHP\n\n{@html String.raw`\n1\n<?php\n2\n\n3\nrequire_once __DIR__ . \"/../environment.php\"; // require the environment\n4\n\n5\nif(isset($update->update_id)) { // Check if there is an update\n6\n\n7\n    if(isset($update->message)) { // Check if a message was sent\n8\n        $bot->copyMessage([ // Copy the message\n9\n            \"chat_id\" => $update->chat->id,\n10\n            \"from_chat_id\" => $update->chat->id,\n11\n            \"message_id\" => $update->message->message_id\n12\n        ]);\n13\n    }\n14\n\n15\n} else{\n16\n    echo \"No updates from telegram where found.\\n\";\n17\n}`}\n\nSTART THE BOT\n\nOnce you have those files you just need to bootstrap your bot:\n\n{@html String.raw`\nphp src/bootstrap.php`}\n\nAnd start your HTTPS web server.\n\n\nENJOY\n\nYou now have a full functioning bot that replies to every message sent by the\nusers.\n\nIf you have any question please leave a comment below and I'll be happy to\nreply.",
      "content_html": "<h2 id=\"introduction\"><a href=\"#introduction\">Introduction</a></h2>\n<p>This article is part of the <a href=\"/?tags-Series=PHPBot\"  >FirstBot</a> series.\nWe recommend reading the <a href=\"/create-your-first-bot\"  >introcution chapter</a> before continuing.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">composer</span> require telegramsdk/botapi</div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"telegram-updates\"><a href=\"#telegram-updates\">Telegram Updates</a></h2>\n<p>Before writing the code we have to mention that there are 2 methods to get updates from our Telegram bot.</p>\n<ol>\n<li><a href=\"https://core.telegram.org/bots/api#getupdates\" rel=\"external\" >getUpdates</a> : used for long polling , usefull if you don&#39;t have a public ip or an https url.</li>\n<li><a href=\"https://core.telegram.org/bots/api#setwebhook\" rel=\"external\" >setWebhook</a> : more efficient way for recinving incoming updates, you need to have a public ip address with an https url.</li>\n</ol>\n<p>In this article we&#39;ll look into both ways of creating a Telegram Bot.</p>\n<h2 id=\"start-coding\"><a href=\"#start-coding\">Start Coding</a></h2>\n<h3 id=\"get-updates\"><a href=\"#get-updates\">Get Updates</a></h3>\n<p>Here&#39;s a simple example on how to get updates from Telegram and reply to them with the same message they sent.</p>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">bot.php</h2><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;?php</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">require_once  \"vendor/autoload.php\";</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Exception\\TelegramException;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Telegram\\{Bot, Update};</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">7</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">8</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">9</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">define(\"GREEN_COLOR\", \"\\033[0;32m\");</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">10</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">define(\"RED_COLOR\", \"\\033[0;31m\");</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">11</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">define(\"DEFAULT_COLOR\", \"\\033[0m\");</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">12</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">13</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">14</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;bot = new Bot(\"YOUR_BOT_TOKEN\", Update::UPDATES_FROM_GET_UPDATES);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">15</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">16</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">if(!&#36;bot-&gt;isValidToken(true)) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">17</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    echo RED_COLOR . \"Invalid bot token.\\n\" . DEFAULT_COLOR;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">18</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    exit(1);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">19</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">20</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">21</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">echo GREEN_COLOR . \"Bot Started!\\n\" . DEFAULT_COLOR;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">22</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">23</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">for ( ; ; sleep(5)) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">24</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">25</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    &#36;updates = &#36;bot-&gt;updates(isset(&#36;updates) ? &#36;updates-&gt;getLastUpdateId() : null);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">26</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">27</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    foreach(&#36;updates-&gt;result as &#36;update){</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">28</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        if(isset(&#36;update-&gt;message)){</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">29</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            &#36;chat = &#36;update-&gt;getChat();</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">30</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">31</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            try {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">32</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">33</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">                &#36;res = &#36;bot-&gt;copyMessage([</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">34</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">                    \"chat_id\" =&gt; &#36;chat-&gt;id,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">35</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">                    \"from_chat_id\" =&gt; &#36;chat-&gt;id,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">36</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">                    \"message_id\" =&gt; &#36;update-&gt;getMessage()-&gt;message_id</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">37</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">                ]);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">38</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">39</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">                echo GREEN_COLOR . \"Replied to \" . &#36;chat-&gt;id . \"\\n\" . DEFAULT_COLOR;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">40</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">41</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            } catch (TelegramException &#36;e) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">42</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">                echo RED_COLOR . \"Coulnd't reply to \" . &#36;chat-&gt;id . \": \" . &#36;e-&gt;getResponseBody()-&gt;description . \"\\n\" . DEFAULT_COLOR;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">43</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            }</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">44</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">45</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        }</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">46</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    }</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">47</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<h4 id=\"what-am-i-doing\"><a href=\"#what-am-i-doing\">What Am I Doing?</a></h4>\n<p>If you already worked with <a href=\"https://github.com/TelegramSDK/BotAPI\" rel=\"external\" >TelegramSDK</a> you might already know what I&#39;ve just written, but I still reccommend having a look at the <a href=\"https://botapi.racca.me/\" rel=\"external\" >official documentation</a> for more information.</p>\n<h5 id=\"include-the-library\"><a href=\"#include-the-library\">Include the Library</a></h5>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">require_once  \"vendor/autoload.php\";</div></div>`}</code></pre></CodeCopy></div>\n<p>This line includes the autoloader file from the Composer dependency manager.\nIt&#39;s used to autoload classes and functions from the third-party libraries, ensuring that you don&#39;t need to manually include each file.</p>\n<h5 id=\"use-statements\"><a href=\"#use-statements\">Use Statements</a></h5>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Exception\\TelegramException;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Telegram\\{Bot, Update};</div></div>`}</code></pre></CodeCopy></div>\n<p>These use statements import specific classes from <code class=\"inline-code-block\">telgramsdk/botapi</code>.\nThis allows you to use these classes in the code without specifying the full namespace each time.</p>\n<h5 id=\"define-constants-for-console-colors\"><a href=\"#define-constants-for-console-colors\">Define Constants for Console Colors</a></h5>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">define(\"GREEN_COLOR\", \"\\033[0;32m\");</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">define(\"RED_COLOR\", \"\\033[0;31m\");</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">define(\"DEFAULT_COLOR\", \"\\033[0m\");</div></div>`}</code></pre></CodeCopy></div>\n<p>These lines define constants for ANSI escape codes, which are used to colorize the console output. <code class=\"inline-code-block\">GREEN_COLOR</code> sets the text color to green, <code class=\"inline-code-block\">RED_COLOR</code> to red, and <code class=\"inline-code-block\">DEFAULT_COLOR</code> resets the color to the default.</p>\n<h5 id=\"initialize-the-telegram-bot\"><a href=\"#initialize-the-telegram-bot\">Initialize the Telegram Bot</a></h5>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;bot = new Bot(\"YOUR_BOT_TOKEN\", Update::UPDATES_FROM_GET_UPDATES);</div></div>`}</code></pre></CodeCopy></div>\n<p>An instance of the Bot class is created with the Telegram bot token and the update method (<code class=\"inline-code-block\">UPDATES_FROM_GET_UPDATES</code>) specified. The <code class=\"inline-code-block\">Update::UPDATES_FROM_GET_UPDATES</code> constant indicates that updates should be fetched using the <code class=\"inline-code-block\">getUpdates</code> method.</p>\n<h5 id=\"check-token-validity\"><a href=\"#check-token-validity\">Check Token Validity</a></h5>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">if (!&#36;bot-&gt;isValidToken(true)) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    echo RED_COLOR . \"Invalid bot token.\\n\" . DEFAULT_COLOR;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    exit(1);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<p>It checks if the bot token is valid. If not, it prints an error message in red and exits the script.</p>\n<h5 id=\"infinite-loop-for-handling-updates\"><a href=\"#infinite-loop-for-handling-updates\">Infinite Loop for Handling Updates</a></h5>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">for (; ; sleep(5)) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    // Code for handling updates</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<p>An infinite loop that fetches updates every 5 seconds.</p>\n<h5 id=\"handle-updates\"><a href=\"#handle-updates\">Handle Updates</a></h5>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;updates = &#36;bot-&gt;updates(isset(&#36;updates) ? &#36;updates-&gt;getLastUpdateId() : null);</div></div>`}</code></pre></CodeCopy></div>\n<p>Fetches updates using the <code class=\"inline-code-block\">getUpdates</code> method. If <code class=\"inline-code-block\">$updates</code> is set, it fetches updates starting from the last processed update.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">foreach (&#36;updates-&gt;result as &#36;update) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    // Code for processing each update</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<p>Loops through each update in the result array.</p>\n<h6 id=\"process-message-updates\"><a href=\"#process-message-updates\">Process Message Updates</a></h6>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">if (isset(&#36;update-&gt;message)) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    // Code for processing message updates</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<p>Checks if the update is a message.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;res = &#36;bot-&gt;copyMessage([</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    \"chat_id\" =&gt; &#36;chat-&gt;id,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    \"from_chat_id\" =&gt; &#36;chat-&gt;id,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    \"message_id\" =&gt; &#36;update-&gt;getMessage()-&gt;message_id</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">]);</div></div>`}</code></pre></CodeCopy></div>\n<p>Copies the received message and sends it back to the same chat.</p>\n<h6 id=\"handle-exceptions\"><a href=\"#handle-exceptions\">Handle Exceptions</a></h6>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">} catch (TelegramException &#36;e) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    // Code for handling exceptions</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<p>Catches any exceptions that may occur during the message copy process and prints an error message.</p>\n<h4 id=\"start-the-bot\"><a href=\"#start-the-bot\">Start the Bot</a></h4>\n<p>That&#39;s it, now you can start the bot with</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">php bot.php</div></div>`}</code></pre></CodeCopy></div>\n<p>Send to it a message and see it replying!</p>\n<h3 id=\"set-webhook\"><a href=\"#set-webhook\">Set Webhook</a></h3>\n<p>Setting a <a href=\"https://core.telegram.org/bots/api#setwebhook\" rel=\"external\" >webhook</a> with Telegram is bit more complicated than working with <a href=\"https://core.telegram.org/bots/api#getupdates\" rel=\"external\" >getUpdates</a> as it requires an HTTPS url.\nIn this article will assume that you already have it.</p>\n<h4 id=\"directory-structure\"><a href=\"#directory-structure\">Directory Structure</a></h4>\n<p>Here&#39;s an example of directory structure you might follow:</p>\n<div class=\"p4 border-1 shadow-xl rounded-xl border-black dark:border-white overflow-auto\">\n  <NestedFolder folderData={webhookDirectory} />\n</div>\n\n\n<h4 id=\"environment\"><a href=\"#environment\">Environment</a></h4>\n<p>Let&#39;s start with <code class=\"inline-code-block\">environment.php</code>, a file that will hamdle common tasks such as creating a new instance of the bot.</p>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">src/environment.php</h2><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;?php</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">require_once __DIR__ . \"/../vendor/autoload.php\";</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Telegram\\{Bot, Update};</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">7</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;bot = new Bot(\"YOUR_BOT_TOKEN\", Update::UPDATES_FROM_WEBHOOK);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">8</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">9</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;update = &#36;bot-&gt;updates(); // Getting the updates</div></div>`}</code></pre></CodeCopy></div>\n<p>As you can see, getting updates from the webhook is much easier than doing it with <code class=\"inline-code-block\">getUpdates</code>.</p>\n<h4 id=\"bootstrap\"><a href=\"#bootstrap\">Bootstrap</a></h4>\n<p>The <code class=\"inline-code-block\">bootstrap.php</code> file simply sets the webhook to the specified url.</p>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">src/bootstrap.php</h2><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;?php</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">require_once __DIR__ . \"/environment.php\";</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;bot-&gt;setWebhook([</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    \"url\" =&gt; \"https://example.com\", // Remember to use https</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">7</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    \"drop_pending_updates\" =&gt; true // Drop any pending updates</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">8</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">]);</div></div>`}</code></pre></CodeCopy></div>\n<p>See <a href=\"https://core.telegram.org/bots/api#setwebhook\" rel=\"external\" >setWebhook</a> for more information.</p>\n<h4 id=\"public-file\"><a href=\"#public-file\">Public file</a></h4>\n<p>The <code class=\"inline-code-block\">src/public/</code> directory will be the one exposed to your web server and it will contain only one file, <code class=\"inline-code-block\">index.php</code></p>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">src/public/index.php</h2><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;?php</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">require_once __DIR__ . \"/../environment.php\"; // require the environment</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">if(isset(&#36;update-&gt;update_id)) { // Check if there is an update</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">7</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    if(isset(&#36;update-&gt;message)) { // Check if a message was sent</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">8</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        &#36;bot-&gt;copyMessage([ // Copy the message</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">9</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            \"chat_id\" =&gt; &#36;update-&gt;chat-&gt;id,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">10</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            \"from_chat_id\" =&gt; &#36;update-&gt;chat-&gt;id,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">11</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            \"message_id\" =&gt; &#36;update-&gt;message-&gt;message_id</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">12</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        ]);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">13</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    }</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">14</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">15</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">} else{</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">16</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    echo \"No updates from telegram where found.\\n\";</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">17</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<h4 id=\"start-the-bot\"><a href=\"#start-the-bot\">Start the bot</a></h4>\n<p>Once you have those files you just need to bootstrap your bot:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">php src/bootstrap.php</div></div>`}</code></pre></CodeCopy></div>\n<p>And start your HTTPS web server.</p>\n<h2 id=\"enjoy\"><a href=\"#enjoy\">Enjoy</a></h2>\n<p>You now have a full functioning bot that replies to every message sent by the users.</p>\n<p>If you have any question please leave a comment below and I&#39;ll be happy to reply.</p>\n",
      "tags": [
        "Telegram",
        "Bot",
        "Automation",
        "TelegramSDK",
        "Series-FirstBot"
      ]
    },
    {
      "id": "create-your-first-bot",
      "url": "https://blog.racca.me/create-your-first-bot",
      "title": "Create Your First Telegram Bot",
      "summary": "🤖 Create your first Telegram Bot using PHP in just a few steps",
      "image": "/create-your-first-bot/cover.jpg",
      "date_published": "2023-11-06T12:00:00.000+01:00",
      "date_modified": "2024-01-10T13:00:00.000+01:00",
      "content_text": "INTRODUCTION\n\nTelegram bots are special accounts that serve as an interface for code running\non a server, allowing for a variety of functionalities within the Telegram\nplatform. They can be used to automate tasks, provide information, interact with\nusers, and even replace entire websites.\n\nIn this article, we'll explore how to build a PHP Telegram bot using the\nTelegram Bot Api [https://core.telegram.org/bots/api] and TelegramSDK\n[https://botapi.racca.me]. We'll walk through the process of setting up the bot,\nconfiguring it, and testing it.\n\n\nPREREQUISITES\n\nBefore we begin, ensure that you have the following:\n\n * PHP installed on your machine. If not, you can download it from the official\n   PHP website [https://www.php.net/download].\n * Composer, a dependency manager for PHP. If you don't have it, you can\n   download it from the official Composer website\n   [https://getcomposer.org/download/].\n\n\nSETUP YOUR BOT ON TELEGRAM\n\nThe first step is to create a Bot to which users will chat with. Go to\n@botfather [https://t.me/BotFather], start it and type /newbot\n\n\n\n\nSTART CODING\n\n\nSETUP LOCAL ENVIRORMENT\n\nBefore writing the bot's logic we need to install the library we're going to\nuse:\n\n{@html String.raw`\ncomposer require telegramsdk/botapi`}\n\ntelegramsdk/botapi [https://github.com/TelegramSDK/BotAPI] is a light weight\nlibrary that lets us access the Telegram API [https://core.telegram.org] easly\nand freely.\n\n\nWRITE THE LOGIC\n\nIt's time for the fun part!\n\nAll you need to do is create a new file named bot.php (or whatever you like) and\nwrite this code:\n\n\nBOT.PHP\n\n{@html String.raw`\n1 \n<?php\n2 \nrequire_once \"vendor/autoload.php\";\n3 \n\n4 \nuse TelegramSDK\\BotAPI\\Telegram\\Bot;\n5 \n\n6 \n$bot = new Bot(\"YOUR_BOT_TOKEN\");\n7 \n\n8 \n$bot->sendMessage([\n9 \n    \"chat_id\" => YOUR_CHAT_ID,\n10 \n    \"text\" => \"My First Telegram bot!\"\n11 \n]);`}\n\nJust send a message to @userinfobot [https://t.me/userinfobot] and replace\nYOUR_CHAT_ID with the id the bot provided.\n\nWHAT AM I DOING?\n\nIf this is your first approach to Telegram or to telegramsdk/botapi\n[https://github.com/TelegramSDK/BotAPI], you may wonder:\n\n> What am I Doing?\n\nIf you already know, you can skip this explanation.\n\nLet's have a look a the code you've just written:\n\nINSTANCING A NEW BOT\n\nIn this lines we're importing the library from the vendor/ directory and\ninstancing a new Bot object.\n\n\nBOT.PHP\n\n{@html String.raw`\n1\n<?php\n2\nrequire_once \"vendor/autoload.php\";\n3\n\n4\nuse TelegramSDK\\BotAPI\\Telegram\\Bot;\n5\n\n6\n$bot = new Bot(\"YOUR_BOT_TOKEN\");`}\n\nPlease remember to replace YOUR_BOT_TOKEN with the actual bot token that\n@botfather [https://t.me/botfather] sent you.\n\nSee \"Setup your Bot on Telegram\" if you don't know how to do it.\n\nSENDING A MESSAGE\n\nThe lines are an API call to the Telegram sendMessage\n[https://core.telegram.org/bots/api#sendmessage] method.\n\nThis call will send a message to the specified user saying \"My First Telegram\nbot!\"\n\n\nBOT.PHP\n\n{@html String.raw`\n1\n<?php\n2\nrequire_once \"vendor/autoload.php\";\n3\n\n4\nuse TelegramSDK\\BotAPI\\Telegram\\Bot;\n5\n\n6\n$bot = new Bot(\"YOUR_BOT_TOKEN\");\n7\n\n8\n$bot->sendMessage([\n9\n   \"chat_id\" => YOUR_CHAT_ID,\n10\n   \"text\" => \"My First Telegram bot!\"\n11\n]);`}\n\nPlease remember to replace YOUR_CHAT_ID with your actual id.\n\nIf you don't know how to get your char id start, @userinfobot\n[https://t.me/userinfobot] and get your id.\n\n\nTEST THE BOT\n\nTesting the bot is super easy, you just need to start the file!\n\n{@html String.raw`\nphp bot.php`}\n\nIf you don't start the bot you created, the program won't be able to send you\nthe message.\n\n\nENJOY\n\nThat's it! You now have a fully working telegram bot. Or do you?\n[/create-an-echo-bot]\n\nMake sure to check out the next post [/create-an-echo-bot] of the series.\n\nIf you have any question please leave a comment below and I'll be happy to\nreply.",
      "content_html": "<h2 id=\"introduction\"><a href=\"#introduction\">Introduction</a></h2>\n<p>Telegram bots are special accounts that serve as an interface for code running on a server, allowing for a variety of functionalities within the Telegram platform.\nThey can be used to automate tasks, provide information, interact with users, and even replace entire websites.</p>\n<p>In this article, we&#39;ll explore how to build a PHP Telegram bot using the <a href=\"https://core.telegram.org/bots/api\" rel=\"external\" >Telegram Bot Api</a> and <a href=\"https://botapi.racca.me\" rel=\"external\" >TelegramSDK</a>.\nWe&#39;ll walk through the process of setting up the bot, configuring it, and testing it.</p>\n<h3 id=\"prerequisites\"><a href=\"#prerequisites\">Prerequisites</a></h3>\n<p>Before we begin, ensure that you have the following:</p>\n<ul>\n<li>PHP installed on your machine. If not, you can download it from the official <a href=\"https://www.php.net/download\" rel=\"external\" >PHP website</a>.</li>\n<li>Composer, a dependency manager for PHP. If you don&#39;t have it, you can download it from the official <a href=\"https://getcomposer.org/download/\" rel=\"external\" >Composer website</a>.</li>\n</ul>\n<h2 id=\"setup-your-bot-on-telegram\"><a href=\"#setup-your-bot-on-telegram\">Setup your Bot on Telegram</a></h2>\n<p>The first step is to create a Bot to which users will chat with.\nGo to <a href=\"https://t.me/BotFather\" rel=\"external\" >@botfather</a>, start it and type <code class=\"inline-code-block\">/newbot</code></p>\n<p><VideoPlayer\n  autoplay={true}\n  loop={true}\n  style=\"max-height: 700px !important;\"\n  title=\"BotFather Tutorial\"\n  mp4=\"/create-your-first-bot/botfather.mp4\"\n/></p>\n<h2 id=\"start-coding\"><a href=\"#start-coding\">Start Coding</a></h2>\n<h3 id=\"setup-local-envirorment\"><a href=\"#setup-local-envirorment\">Setup Local Envirorment</a></h3>\n<p>Before writing the bot&#39;s logic we need to install the library we&#39;re going to use:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">composer</span> require telegramsdk/botapi</div></div>`}</code></pre></CodeCopy></div>\n<p><a href=\"https://github.com/TelegramSDK/BotAPI\" rel=\"external\" >telegramsdk/botapi</a> is a light weight library that lets us access the <a href=\"https://core.telegram.org\" rel=\"external\" >Telegram API</a> easly and freely.</p>\n<h3 id=\"write-the-logic\"><a href=\"#write-the-logic\">Write the Logic</a></h3>\n<p>It&#39;s time for the fun part!</p>\n<p>All you need to do is create a new file named <code class=\"inline-code-block\">bot.php</code> (<em>or whatever you like</em>) and write this code:</p>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">bot.php</h2><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">&lt;?php</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">require_once \"vendor/autoload.php\";</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"line-diff\"> </span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Telegram\\Bot;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"line-diff\"> </span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">&#36;bot = new Bot(\"YOUR_BOT_TOKEN\");</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">7</span><span class=\"line-diff\"> </span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">8</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">&#36;bot-&gt;sendMessage([</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">9</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">    \"chat_id\" =&gt; YOUR_CHAT_ID,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">10</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">    \"text\" =&gt; \"My First Telegram bot!\"</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">11</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">]);</div></div>`}</code></pre></CodeCopy></div>\n<InfoBox statusType=\"info\" statusName=\"How can I get my CHAT_ID?\"><p>Just send a message to <a href=\"https://t.me/userinfobot\" rel=\"external\" >@userinfobot</a> and replace <code class=\"inline-code-block\">YOUR_CHAT_ID</code> with the id the bot provided.</p>\n</InfoBox>\n<h4 id=\"what-am-i-doing\"><a href=\"#what-am-i-doing\">What Am I Doing?</a></h4>\n<p>If this is your first approach to Telegram or to <a href=\"https://github.com/TelegramSDK/BotAPI\" rel=\"external\" >telegramsdk/botapi</a>, you may wonder:</p>\n<blockquote>\n<p>What am I Doing?</p>\n</blockquote>\n<p>If you already know, you can skip this explanation.</p>\n<p>Let&#39;s have a look a the code you&#39;ve just written:</p>\n<h5 id=\"instancing-a-new-bot\"><a href=\"#instancing-a-new-bot\">Instancing a new Bot</a></h5>\n<p>In this lines we&#39;re importing the library from the <code class=\"inline-code-block\">vendor/</code> directory and instancing a new <code class=\"inline-code-block\">Bot</code> object.</p>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">bot.php</h2><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;?php</div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">require_once \"vendor/autoload.php\";</div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Telegram\\Bot;</div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;bot = new Bot(\"YOUR_BOT_TOKEN\");</div></div>`}</code></pre></CodeCopy></div>\n<InfoBox statusType=\"info\" statusName=\"Replace the Token!\"><p>Please remember to replace <code class=\"inline-code-block\">YOUR_BOT_TOKEN</code> with the actual bot token that <a href=\"https://t.me/botfather\" rel=\"external\" >@botfather</a> sent you.</p>\n<p>See &quot;<a href=\"#setup-your-bot-on-telegram\"  >Setup your Bot on Telegram</a>&quot; if you don&#39;t know how to do it.</p>\n</InfoBox>\n<h5 id=\"sending-a-message\"><a href=\"#sending-a-message\">Sending a Message</a></h5>\n<p>The lines are an API call to the Telegram <a href=\"https://core.telegram.org/bots/api#sendmessage\" rel=\"external\" ><code class=\"inline-code-block\">sendMessage</code></a> method.</p>\n<p>This call will send a message to the specified user saying &quot;My First Telegram bot!&quot;</p>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">bot.php</h2><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;?php</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">require_once \"vendor/autoload.php\";</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Telegram\\Bot;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;bot = new Bot(\"YOUR_BOT_TOKEN\");</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">7</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">8</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;bot-&gt;sendMessage([</div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">9</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">   \"chat_id\" =&gt; YOUR_CHAT_ID,</div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">10</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">   \"text\" =&gt; \"My First Telegram bot!\"</div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">11</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">]);</div></div>`}</code></pre></CodeCopy></div>\n<p>Please remember to replace <code class=\"inline-code-block\">YOUR_CHAT_ID</code> with your actual id.</p>\n<p>If you don&#39;t know how to get your char id start, <a href=\"https://t.me/userinfobot\" rel=\"external\" >@userinfobot</a> and get your id.</p>\n<h3 id=\"test-the-bot\"><a href=\"#test-the-bot\">Test the bot</a></h3>\n<p>Testing the bot is super easy, you just need to start the file!</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">php bot.php</div></div>`}</code></pre></CodeCopy></div>\n<InfoBox statusType=\"info\" statusName=\"Start the Bot\"><p>If you don&#39;t <strong>start the bot you created</strong>, the program won&#39;t be able to send you the message.</p>\n</InfoBox>\n<h3 id=\"enjoy\"><a href=\"#enjoy\">Enjoy</a></h3>\n<p>That&#39;s it! You now have a fully working telegram bot.\n<a href=\"/create-an-echo-bot\"  >Or do you?</a></p>\n<p>Make sure to check out the <a href=\"/create-an-echo-bot\"  >next post</a> of the series.</p>\n<p>If you have any question please leave a comment below and I&#39;ll be happy to reply.</p>\n",
      "tags": [
        "Telegram",
        "Bot",
        "Automation",
        "TelegramSDK",
        "Series-FirstBot"
      ]
    }
  ]
}