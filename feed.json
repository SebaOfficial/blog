{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "Seba's Blog",
  "home_page_url": "https://blog.racca.me",
  "feed_url": "https://blog.racca.me/feed.json",
  "description": "Sebastiano Racca's personal blog. Discover new ways of thinking, new technologies and much more",
  "icon": "/_app/immutable/assets/avatar.9d2117a3.png",
  "favicon": "https://blog.racca.me/favicon.png",
  "authors": [
    {
      "name": "Sebastiano Racca",
      "url": "https://github.com/SebaOfficial",
      "avatar": "/_app/immutable/assets/avatar.9d2117a3.png"
    }
  ],
  "language": "en",
  "items": [
    {
      "id": "why-care-about-privacy",
      "url": "https://blog.racca.me/why-care-about-privacy",
      "title": "I have nothing to hide. Why should I care about my privacy?",
      "summary": "üëÄ Reasons why you should care about your privacy",
      "image": "/why-care-about-privacy/cover.jpg",
      "date_published": "2023-12-16T16:22:10.000+01:00",
      "date_modified": "2023-12-16T16:22:10.000+01:00",
      "content_text": "PRIVACY ISN‚ÄôT ABOUT HIDING\n\nThe \"I have nothing to hide\" argument frames privacy as something only criminals\nand other bad actors would demand, but nothing could be further from the truth.\nPrivacy is about the freedom to make choices without fear: how you want to live,\nwhat you believe in, who you are friends with, and what you want to share with\nwhom. A lack of privacy leads to uniformity and self-censorship, which pushes\nour opinions to the edges and erodes our ability to engage in healthy debate.\n\nUltimately, privacy also protects us from the unknown. Circumstances change.\nSomething that can be harmlessly shared today may someday be worth concealing,\nwhether it‚Äôs political beliefs or your ethnic or religious background. Privacy\nis the ultimate insurance against a rapidly changing corporate and political\nclimate.\n\nOnce we lose our privacy, we won‚Äôt get it back.\n\n\nPRIVACY IS A HUMAN RIGHT\n\nJust like other human rights, we didn‚Äôt always have the right to privacy.\nSeveral dictatorships around the world still don't value this right. Generations\nbefore ours fought for our right to privacy. Not caring about it shows little\nknowledge about history and the importance of it.\n\nArticle 12 of Universal Declaration of Human Rights states:\n\n> No one shall be subjected to arbitrary interference with his privacy, family,\n> home or correspondence, nor to attacks upon his honour and reputation.\n\nIt‚Äôs a human right just like the right to equality, to justice, freedom, a\nnationality, the right to religion, etc.\n\n\nYOUR INFORMATION IS VALUABLE\n\nYou might be okay with governments or security agencies or companies having your\nprivate information. You might trust Google and Facebook. But what if these get\nhacked and your information falls in the wrong hands? Let‚Äôs say, someone\ntargeting your family, your company, your wife/husband. Would you still be okay\nwith that? Would you be okay knowing that your photos, emails, or chats are in\nthe hands of someone who can blackmail you? Can you imagine what it‚Äôs like to\nhave your life torn apart because of a conversation you had 5 or 10 years ago?\nWhat would it be like to lose your job because of a conversation you had by\nphone with your wife?\n\nWe‚Äôve all joked with things we consider sensitive. But, among friends, it‚Äôs\nsomething we all do. In fact, our behavior changes depending on the people we‚Äôre\nwith. I bet I could find something offensive you said in a group chat that you\nhave with your closest friends. Because they‚Äôre your friends and it was a joke\nor a sarcastic remark. But take it out of context and it is not longer a joke.\nWhat would happen if this ‚Äújoke‚Äù fell in the hands of someone trying to harm\nyou?\n\nA company like Facebook or Google allows you to upload unlimited data to their\nservers, for free. What‚Äôs their business model? How do they make so much money?\nThey sell your info to advertising companies. But they never asked you if you\nwanted to sell your information. If someone asked you in person 100 questions\nabout your personal life to sell it, would you answer them? Probably not, right?\nBut you let this happen every time you use a service that makes money by selling\nyour info.",
      "content_html": "<h2 id=\"privacy-isnt-about-hiding\"><a href=\"#privacy-isnt-about-hiding\">Privacy isn‚Äôt about hiding</a></h2>\n<p>The &quot;I have nothing to hide&quot; argument frames privacy as something only criminals and other bad actors would demand, but nothing could be further from the truth.\nPrivacy is about the <strong>freedom</strong> to make choices without fear: how you want to live, what you believe in, who you are friends with, and what you want to share with whom.\nA lack of privacy leads to uniformity and <strong>self-censorship</strong>, which pushes our opinions to the edges and erodes our ability to engage in healthy debate.</p>\n<p>Ultimately, privacy also protects us from the unknown.\nCircumstances change.\nSomething that can be harmlessly shared today may <strong>someday</strong> be worth concealing, whether it‚Äôs political beliefs or your ethnic or religious background.\nPrivacy is the <strong>ultimate insurance</strong> against a rapidly changing corporate and political climate.</p>\n<p>Once we lose our privacy, we won‚Äôt get it back.</p>\n<h2 id=\"privacy-is-a-human-right\"><a href=\"#privacy-is-a-human-right\">Privacy is a human right</a></h2>\n<p>Just like other human rights, we didn‚Äôt always have the right to privacy.\nSeveral dictatorships around the world still don&#39;t value this right.\nGenerations before ours fought for our right to privacy.\nNot caring about it shows little knowledge about history and the importance of it.</p>\n<p><strong>Article 12 of Universal Declaration of Human Rights</strong> states: </p>\n<blockquote>\n<p>No one shall be subjected to arbitrary interference with his privacy, family, home\nor correspondence, nor to attacks upon his honour and reputation.</p>\n</blockquote>\n<!-- Source: https://www.un.org/sites/un2.un.org/files/2021/03/udhr.pdf -->\n\n<p>It‚Äôs a <strong>human right</strong> just like the right to equality, to justice, freedom, a nationality, the right to religion, etc.</p>\n<h2 id=\"your-information-is-valuable\"><a href=\"#your-information-is-valuable\">Your information is valuable</a></h2>\n<p>You might be okay with governments or security agencies or companies having your private information.\nYou might trust Google and Facebook.\nBut what if these get hacked and your <strong>information</strong> falls in the <strong>wrong hands</strong>?\nLet‚Äôs say, someone targeting your family, your company, your wife/husband.\nWould you still be okay with that? Would you be okay knowing that your photos, emails, or chats are in the hands of someone who can <strong>blackmail</strong> you?\nCan you imagine what it‚Äôs like to have your life torn apart because of a conversation you had 5 or 10 years ago?\nWhat would it be like to lose your job because of a conversation you had by phone with your wife?</p>\n<p>We‚Äôve all joked with things we consider sensitive.\nBut, among friends, it‚Äôs something we all do.\nIn fact, <strong>our behavior changes depending on the people we‚Äôre with</strong>.\nI bet I could find something offensive you said in a group chat that you have with your closest friends.\nBecause they‚Äôre your friends and it was a joke or a sarcastic remark.\nBut take it out of context and it is not longer a joke.\nWhat would happen if this ‚Äújoke‚Äù fell in the hands of someone trying to <strong>harm</strong> you?</p>\n<p>A company like Facebook or Google allows you to upload unlimited data to their servers, for free.\nWhat‚Äôs their business model?\n<strong>How do they make so much money?</strong>\nThey <strong>sell your info</strong> to advertising companies.\nBut they never asked you if you wanted to sell your information.\nIf someone asked you in person 100 questions about your personal life to sell it, would you answer them?\nProbably not, right?\nBut you let this happen every time you use a service that makes money by selling your info.</p>\n",
      "tags": [
        "Privacy",
        "Year-2023",
        "Language-English"
      ]
    },
    {
      "id": "barcodes-vs-qr-codes",
      "url": "https://blog.racca.me/barcodes-vs-qr-codes",
      "title": "Barcodes VS QR Codes",
      "summary": "üñ• Barcodes VS QR Codes - 101 comparison",
      "image": "/barcodes-vs-qr-codes/cover.jpg",
      "date_published": "2023-12-05T19:10:53.000+01:00",
      "date_modified": "2023-12-14T19:47:53.000+01:00",
      "content_text": "BARCODES VS QR CODES - 101 COMPARISON\n\nBoth barcodes and QR codes offer great functionalities and have embedded\nthemselves in our everyday life, from business applications to personal use.\n\nIn this article we're going to look advantages and disdvantages of both types.\n\n\nBARCODES\n\nA barcode is a method of representing data in a visual, machine-readable form.\n\n * 1-dimentional barcodes: represent data by varying the widths, spacings and\n   sizes of parallel lines.\n * 2-dimentional barcodes (or matrix codes): represent data using rectangles,\n   dots, hexagons and other patterns.\n\nThe main components of a barcode include:\n\n * Quiet zone: blank margin located at either end of a barcode;\n * Barcode symbol: the actual representation of the data;\n * Start character: the first character in the sequence above the bars;\n * Data message: the following characters;\n * Check digit: the penultimate character;\n * Stop character: the last character in the sequence.\n\nThere are several types of barcodes, each one with symbol variations:\n\n * EAN (JAN):\n   * Displays only numerals (0 to 9);\n   * Commonly used for products;\n   * Compatible with EAN in Europe and UPC in the USA.\n * Interleaved 2 of 5:\n   * Uses numerals (0 to 9);\n   * Standard distribution code;\n   * Common in logistics.\n * Codabar (NW-7):\n   * Uses numerals (0 to 9), symbols, and start-stop characters (a to d);\n   * Easily printed;\n   * Mainly used for shipping labels, envelopes, and laboratory samples.\n * CODE 39:\n   * Comprises numerals, symbols, alphabetical letters, and start-stop\n     characters;\n   * Commonly used in factory automation.\n * CODE 128:\n   * Uses all 128 ASCII characters;\n   * Includes 3 start characters, 1 stop character, 4 non-data function\n     characters, and 4 code setting selection characters;\n   * Mostly used for electronic part management.\n\n\nADVANTAGES\n\n * Accuracy: Barcodes enhance data accuracy by minimizing the potential for\n   human errors during data entry. This is crucial for maintaining precise\n   records and preventing mistakes that can occur in manual data input.\n\n * Speed: Scanning barcodes is a quick and efficient process, allowing for the\n   rapid handling of transactions. This speed is particularly beneficial in\n   environments where large volumes of data need to be processed swiftly, such\n   as in retail, logistics, and manufacturing.\n\n * Cost-effectiveness: Barcodes are a cost-effective solution for companies of\n   all sizes. They are relatively easy to create, implement, and use. The\n   real-time tracking capabilities provided by barcodes contribute to efficient\n   inventory management, reducing the risks of stock shortages and overstocking.\n   This can lead to cost savings and improved overall inventory control.\n\n * Improved Customer Service: Barcodes enable businesses to quickly access and\n   retrieve customer information, facilitating personalized and efficient\n   service. This capability is especially valuable in retail and other\n   customer-oriented industries, where providing tailored service can enhance\n   the customer experience and satisfaction.\n\n\nDISADVANTAGES\n\n * Restricted data: Barcodes typically store a limited amount of data, such as a\n   serial number or product code. For more detailed information, additional\n   labels or tags may be required. This limitation can be a drawback when more\n   comprehensive data storage is needed.\n\n * Damage-prone: Barcodes can be susceptible to damage. Scratches or other forms\n   of damage may make the barcode unreadable, leading to potential issues in\n   data collection and accuracy.\n\n * Technology Dependency: Barcodes depend on specialized hardware, such as\n   barcode scanners or mobile devices equipped with scanning capabilities. The\n   need for specific technology may limit accessibility and compatibility with\n   certain systems, especially in environments where such equipment is not\n   readily available.\n\n * Security Concerns: Barcodes, if not properly secured, can be easily copied.\n   This vulnerability may pose a risk of fraud or counterfeiting, especially if\n   the barcodes are used for authentication or verification purposes.\n\n * Environmental Impact: The materials used to make barcodes are often\n   non-biodegradable. Improper disposal of barcode-related materials can\n   contribute to environmental issues, such as increased trash and pollution.\n   Considering environmentally friendly alternatives or disposal methods becomes\n   important in addressing this concern.\n\n\nGENERATE BARCODES (LINUX)\n\nInstall the barcode generator:\n\n{@html String.raw`\nsudo apt-get update\nsudo apt-get install barcode`}\n\nGenerate the barcode:\n\n{@html String.raw`\nbarcode -E -b \"id:0123456789\" > barcode.ps`}\n\nConvert it to png:\n\n{@html String.raw`\nconvert barcode.ps barcode.png`}\n\n\nQR CODES\n\nQR Codes are a type of two-dimensional matrix barcodes, they consists of black\nsquares arranged in a square grid on a white background, including some fiducial\nmarkers, which can be read by an imaging device.\n\nQR codes offer remarkable versatility, making them a powerful tool for various\napplications:\n\n * Share links: Generate QR codes with multiple links to effortlessly share\n   URLs, such as web pages, social media profiles, or document links;\n\n * Send emails: Simplify communication by sending emails with a quick scan,\n   facilitating seamless connections (i.e. including reaching out to customer\n   support);\n\n * Make phone calls: Streamline phone calls by using QR codes that redirect to a\n   phone number, eliminating the need to manually dial;\n\n * Send SMS: Enhance convenience by utilizing QR codes for preset text messages,\n   sparing users the effort of typing messages manually;\n\n * Share WhatsApp contacts: Instantly open WhatsApp chat windows without the\n   hassle of typing and saving contact numbers.\n\n * Connect to Wifi: Expedite internet network connections without searching for\n   network names or asking for passwords.\n\n\nADVANTAGES\n\n * Quick & Simple: QR codes allow consumers to access information swiftly\n   without the need for manual data entry or typing. This quick and simple\n   process enhances user convenience;\n\n * Large Capacity: QR codes have a larger data capacity compared to standard\n   barcodes. This makes them versatile and suitable for various applications\n   where more information needs to be stored;\n\n * Versatility: QR codes are indeed versatile and find applications in product\n   labeling, promotional materials, event tickets, and more. Their flexibility\n   makes them useful in diverse contexts;\n\n * Enhancing Consumer Experience: QR codes can enhance the consumer experience\n   by providing additional information about goods or services. They can also be\n   used to offer discounts and exclusive promotions, adding value for customers;\n\n * Cost-effective: QR codes are cost-effective to generate and print. This\n   affordability contributes to their widespread use as a means of providing\n   additional information to customers without significant expense.\n\n * Contactless: QR codes can be scanned from a distance, allowing for\n   contactless interactions. This is particularly valuable in public settings,\n   promoting hygiene and safety by reducing the need for physical contact.\n\n\nDISADVANTAGES\n\n * Technology Dependency: Just like barcodes, QR Codes, depend on specialized\n   hardware, such as barcode scanners or mobile devices equipped with scanning\n   capabilities.\n\n * Visual Aesthetic Concerns: Some argue that QR codes can be visually\n   unappealing, and their presence might be considered intrusive in certain\n   designs or settings.\n\n * User Education: Some users may not be familiar with QR codes or may be unsure\n   about how to use them.\n\n\nGENERATE QR CODES (LINUX)\n\nInstall the QR Code generator:\n\n{@html String.raw`\nsudo apt-get update\nsudo apt-get install qrencode`}\n\nGenerate the QR Code:\n\n{@html String.raw`\nqrencode -o qrcode.png 'https://example.com'`}",
      "content_html": "<h2 id=\"barcodes-vs-qr-codes-101-comparison\"><a href=\"#barcodes-vs-qr-codes-101-comparison\">Barcodes VS QR Codes - 101 Comparison</a></h2>\n<p>Both barcodes and QR codes offer great functionalities and have embedded themselves in our everyday life, from business applications to personal use.</p>\n<p>In this article we&#39;re going to look advantages and disdvantages of both types.</p>\n<h2 id=\"barcodes\"><a href=\"#barcodes\">Barcodes</a></h2>\n<p>A barcode is a method of representing data in a visual, machine-readable form.</p>\n<ul>\n<li><strong>1-dimentional barcodes</strong>: represent data by varying the widths, spacings and sizes of parallel lines.</li>\n<li><strong>2-dimentional barcodes</strong> (<em>or matrix codes</em>): represent data using rectangles, dots, hexagons and other patterns.</li>\n</ul>\n<p>The main components of a barcode include:</p>\n<ul>\n<li><strong>Quiet zone</strong>: blank margin located at either end of a barcode;</li>\n<li><strong>Barcode symbol</strong>: the actual representation of the data;</li>\n<li><strong>Start character</strong>: the first character in the sequence above the bars;</li>\n<li><strong>Data message</strong>: the following characters;</li>\n<li><strong>Check digit</strong>: the penultimate character;</li>\n<li><strong>Stop character</strong>: the last character in the sequence.</li>\n</ul>\n<p>There are several types of barcodes, each one with symbol variations:</p>\n<ul>\n<li><strong>EAN (JAN)</strong>:<ul>\n<li>Displays only numerals (0 to 9);</li>\n<li>Commonly used for products;</li>\n<li>Compatible with EAN in Europe and UPC in the USA.</li>\n</ul>\n</li>\n<li><strong>Interleaved 2 of 5</strong>:<ul>\n<li>Uses numerals (0 to 9);</li>\n<li>Standard distribution code;</li>\n<li>Common in logistics.</li>\n</ul>\n</li>\n<li><strong>Codabar (NW-7)</strong>:<ul>\n<li>Uses numerals (0 to 9), symbols, and start-stop characters (a to d);</li>\n<li>Easily printed;</li>\n<li>Mainly used for shipping labels, envelopes, and laboratory samples.</li>\n</ul>\n</li>\n<li><strong>CODE 39</strong>:<ul>\n<li>Comprises numerals, symbols, alphabetical letters, and start-stop characters;</li>\n<li>Commonly used in factory automation.</li>\n</ul>\n</li>\n<li><strong>CODE 128</strong>:<ul>\n<li>Uses all 128 ASCII characters;</li>\n<li>Includes 3 start characters, 1 stop character, 4 non-data function characters, and 4 code setting selection characters;</li>\n<li>Mostly used for electronic part management.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"advantages\"><a href=\"#advantages\">Advantages</a></h3>\n<ul>\n<li><p><strong>Accuracy</strong>: Barcodes enhance data accuracy by minimizing the potential for human errors during data entry. This is crucial for maintaining precise records and preventing mistakes that can occur in manual data input.</p>\n</li>\n<li><p><strong>Speed</strong>: Scanning barcodes is a quick and efficient process, allowing for the rapid handling of transactions. This speed is particularly beneficial in environments where large volumes of data need to be processed swiftly, such as in retail, logistics, and manufacturing.</p>\n</li>\n<li><p><strong>Cost-effectiveness</strong>: Barcodes are a cost-effective solution for companies of all sizes. They are relatively easy to create, implement, and use. The real-time tracking capabilities provided by barcodes contribute to efficient inventory management, reducing the risks of stock shortages and overstocking. This can lead to cost savings and improved overall inventory control.</p>\n</li>\n<li><p><strong>Improved Customer Service</strong>: Barcodes enable businesses to quickly access and retrieve customer information, facilitating\npersonalized and efficient service. This capability is especially valuable in retail and other customer-oriented industries, where providing tailored service can enhance the customer experience and satisfaction.</p>\n</li>\n</ul>\n<h3 id=\"disadvantages\"><a href=\"#disadvantages\">Disadvantages</a></h3>\n<ul>\n<li><p><strong>Restricted data</strong>: Barcodes typically store a limited amount of data, such as a serial number or product code. For more detailed information, additional labels or tags may be required. This limitation can be a drawback when more comprehensive data storage is needed.</p>\n</li>\n<li><p><strong>Damage-prone</strong>: Barcodes can be susceptible to damage. Scratches or other forms of damage may make the barcode unreadable, leading to potential issues in data collection and accuracy.</p>\n</li>\n<li><p><strong>Technology Dependency</strong>: Barcodes depend on specialized hardware, such as barcode scanners or mobile devices equipped with scanning capabilities. The need for specific technology may limit accessibility and compatibility with certain systems, especially in environments where such equipment is not readily available.</p>\n</li>\n<li><p><strong>Security Concerns</strong>: Barcodes, if not properly secured, can be easily copied. This vulnerability may pose a risk of fraud or counterfeiting, especially if the barcodes are used for authentication or verification purposes.</p>\n</li>\n<li><p><strong>Environmental Impact</strong>: The materials used to make barcodes are often non-biodegradable. Improper disposal of barcode-related materials can contribute to environmental issues, such as increased trash and pollution. Considering environmentally friendly alternatives or disposal methods becomes important in addressing this concern.</p>\n</li>\n</ul>\n<h3 id=\"generate-barcodes-linux\"><a href=\"#generate-barcodes-linux\">Generate Barcodes (Linux)</a></h3>\n<p>Install the barcode generator:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> barcode</div></div>`}</code></pre></CodeCopy></div>\n<p>Generate the barcode:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">barcode <span class=\"token parameter variable\">-E</span> <span class=\"token parameter variable\">-b</span> <span class=\"token string\">\"id:0123456789\"</span> <span class=\"token operator\">></span> barcode.ps</div></div>`}</code></pre></CodeCopy></div>\n<p>Convert it to png:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">convert barcode.ps barcode.png</div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"qr-codes\"><a href=\"#qr-codes\">QR Codes</a></h2>\n<p>QR Codes are a type of two-dimensional matrix barcodes, they consists of black squares arranged in a square grid on a white background, including some fiducial markers, which can be read by an imaging device.</p>\n<p>QR codes offer remarkable versatility, making them a powerful tool for various applications:</p>\n<ul>\n<li><p><strong>Share links</strong>: Generate QR codes with multiple links to effortlessly share URLs, such as web pages, social media profiles, or document links;</p>\n</li>\n<li><p><strong>Send emails</strong>: Simplify communication by sending emails with a quick scan, facilitating seamless connections (<em>i.e. including reaching out to customer support</em>);</p>\n</li>\n<li><p><strong>Make phone calls</strong>: Streamline phone calls by using QR codes that redirect to a phone number, eliminating the need to manually dial;</p>\n</li>\n<li><p><strong>Send SMS</strong>: Enhance convenience by utilizing QR codes for preset text messages, sparing users the effort of typing messages manually;</p>\n</li>\n<li><p><strong>Share WhatsApp contacts</strong>: Instantly open WhatsApp chat windows without the hassle of typing and saving contact numbers.</p>\n</li>\n<li><p><strong>Connect to Wifi</strong>: Expedite internet network connections without searching for network names or asking for passwords.</p>\n</li>\n</ul>\n<h3 id=\"advantages\"><a href=\"#advantages\">Advantages</a></h3>\n<ul>\n<li><p><strong>Quick &amp; Simple</strong>: QR codes allow consumers to access information swiftly without the need for manual data entry or typing. This quick and simple process enhances user convenience;</p>\n</li>\n<li><p><strong>Large Capacity</strong>: QR codes have a larger data capacity compared to standard barcodes. This makes them versatile and suitable for various applications where more information needs to be stored;</p>\n</li>\n<li><p><strong>Versatility</strong>: QR codes are indeed versatile and find applications in product labeling, promotional materials, event tickets, and more. Their flexibility makes them useful in diverse contexts;</p>\n</li>\n<li><p><strong>Enhancing Consumer Experience</strong>: QR codes can enhance the consumer experience by providing additional information about goods or services. They can also be used to offer discounts and exclusive promotions, adding value for customers;</p>\n</li>\n<li><p><strong>Cost-effective</strong>: QR codes are cost-effective to generate and print. This affordability contributes to their widespread use as a means of providing additional information to customers without significant expense.</p>\n</li>\n<li><p><strong>Contactless</strong>: QR codes can be scanned from a distance, allowing for contactless interactions. This is particularly valuable in public settings, promoting hygiene and safety by reducing the need for physical contact.</p>\n</li>\n</ul>\n<h3 id=\"disadvantages\"><a href=\"#disadvantages\">Disadvantages</a></h3>\n<ul>\n<li><p><strong>Technology Dependency</strong>: Just like barcodes, QR Codes, depend on specialized hardware, such as barcode scanners or mobile devices equipped with scanning capabilities.</p>\n</li>\n<li><p><strong>Visual Aesthetic Concerns</strong>: Some argue that QR codes can be visually unappealing, and their presence might be considered intrusive in certain designs or settings.</p>\n</li>\n<li><p><strong>User Education</strong>: Some users may not be familiar with QR codes or may be unsure about how to use them.</p>\n</li>\n</ul>\n<h3 id=\"generate-qr-codes-linux\"><a href=\"#generate-qr-codes-linux\">Generate QR Codes (Linux)</a></h3>\n<p>Install the QR Code generator:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> qrencode</div></div>`}</code></pre></CodeCopy></div>\n<p>Generate the QR Code:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">qrencode <span class=\"token parameter variable\">-o</span> qrcode.png <span class=\"token string\">'https://example.com'</span></div></div>`}</code></pre></CodeCopy></div>\n",
      "tags": [
        "QRCode",
        "Barcode",
        "Year-2023",
        "Language-English"
      ]
    },
    {
      "id": "custom-email-with-cloudflare-and-gmail",
      "url": "https://blog.racca.me/custom-email-with-cloudflare-and-gmail",
      "title": "Create a Custom Email address with Gmail and Cloudflare",
      "summary": "üì© Create a custom email address in 10 minutes",
      "image": "/custom-email-with-cloudflare-and-gmail/cover.jpg",
      "date_published": "2023-12-03T15:58:03.000+01:00",
      "date_modified": "2023-12-03T15:58:03.000+01:00",
      "content_text": "CREATE A CUSTOM EMAIL ADDRESS FOR FREE\n\nIn the digital age, having a custom email address not only adds a professional\ntouch to your communication but also enhances brand identity. In this tutorial,\nwe'll walk you through the process of setting up a custom email address using\nCloudflare Email Routing and Gmail SMTP. By the end of this guide, you'll be\nable to send and receive emails using your own domain, all while leveraging the\npower and reliability of Gmail.\n\n\nPREREQUISITES\n\nBefore we dive into the steps, make sure you have the following prerequisites in\nplace:\n\n * An active Gmail account.\n * A domain registered with Cloudflare.\n * Access to your domain's DNS settings on Cloudflare.\n\n\nSETUP YOUR GOOGLE ACCOUNT\n\n\nENABLE 2 FACTOR AUTHENTIFICATION\n\nIf you already have enabled two factor authentification you can safely skip this\nstep.\n\n 1. Open your Google Account [https://myaccount.google.com/];\n 2. Select \"Security\" in the navigation panel;\n 3. Under ‚ÄúSigning in to Google,‚Äù select\" 2-Step Verification\", then \"Get\n    started\";\n 4. Follow the on-screen steps.\n\n\nCREATE AN APP PASSWORD\n\nAn app password is a 16-digit passcode that gives a less secure app or device\npermission to access your Google Account.\n\n 1. Open the App Passwords console [https://myaccount.google.com/apppasswords]\n    on your Google account;\n 2. Type a name for your applicatiom i.e. \"My Custom Email\"\n 3. Safely store the 16-digit passcode, you'll need this later.\n\n\nENABLE CLOUDFLARE'S EMAIL ROUTING\n\nEmails that are routed through Cloudflare to your preferred email inbox, benefit\nfrom enhanced security, spam filtering, and improved deliverability. Cloudflare\nEmail Routing acts as a protective layer for your email infrastructure,\nshielding it from potential threats and optimizing the overall email experience.\n\n 1. Go to the Cloudflare Dashboard [https://dash.cloudflare.com] and select your\n    domain;\n 2. Go to Email Email Routing Get Started;\n 3. Enter the custom email address in Custom Address (i.e. );\n 4. Enter the email address you want your emails to be forwarded to in\n    Destination Address (i.e. );\n 5. Select Create and Continue follow the instruction sent to your gmail\n    address.\n 6. Go to the DNS section of the dashboard and add a new TXT record with the\n    following content:\n\n{@html String.raw`\n\"v=spf1 include:_spf.mx.cloudflare.net include:_spf.google.com ~all\"`}\n\n\nADD YOUR CLOUDFLARE-ROUTED EMAIL TO GMAIL\n\nOnce did all the previous we can finally add the custom address to gmail.\n\n 1. Go to your Gmail Account [https://gmail.com/] Settings Accounts;\n 2. Select Add another email address under Send Mail As;\n 3. Fill the form with the name of the email and the Cloudflare-routed email\n    (i.e. ) untick \"Treat as an alias\";\n 4. Fill the next form with the following information:\n    SMTP Server: smtp.gmail.com\n    Port: 587\n    Username: your gmail address (i.e. )\n    Password: the app password\n 5. Leave TLS enabled click Add Account\n 6. Confirm the email address with the code Google's sent you to your gmail\n    account.\n\n\nENJOY\n\nYou now have a fully working email that is routed through Cloudflare to receive\nemails and uses Google's SMTP server to send them.\n\nWhenever you send a new email via GMail, make sure to switch the sender\naccordingly to your preferences.",
      "content_html": "<h2 id=\"create-a-custom-email-address-for-free\"><a href=\"#create-a-custom-email-address-for-free\">Create a Custom Email Address for Free</a></h2>\n<p>In the digital age, having a custom email address not only adds a professional touch to your communication but also enhances brand identity.\nIn this tutorial, we&#39;ll walk you through the process of setting up a custom email address using Cloudflare Email Routing and Gmail SMTP.\nBy the end of this guide, you&#39;ll be able to send and receive emails using your own domain, all while leveraging the power and reliability of Gmail.</p>\n<h3 id=\"prerequisites\"><a href=\"#prerequisites\">Prerequisites</a></h3>\n<p>Before we dive into the steps, make sure you have the following prerequisites in place:</p>\n<ul>\n<li>An active Gmail account.</li>\n<li>A domain registered with Cloudflare.</li>\n<li>Access to your domain&#39;s DNS settings on Cloudflare.</li>\n</ul>\n<h2 id=\"setup-your-google-account\"><a href=\"#setup-your-google-account\">Setup Your Google Account</a></h2>\n<h3 id=\"enable-2-factor-authentification\"><a href=\"#enable-2-factor-authentification\">Enable 2 Factor Authentification</a></h3>\n<p>If you already have enabled two factor authentification you can safely skip this step.</p>\n<ol>\n<li>Open your <a href=\"https://myaccount.google.com/\" rel=\"external\" >Google Account</a>;</li>\n<li>Select &quot;Security&quot; in the navigation panel;</li>\n<li>Under ‚ÄúSigning in to Google,‚Äù select&quot; 2-Step Verification&quot;, then &quot;Get started&quot;;</li>\n<li>Follow the on-screen steps.</li>\n</ol>\n<h3 id=\"create-an-app-password\"><a href=\"#create-an-app-password\">Create an App Password</a></h3>\n<p>An app password is a 16-digit passcode that gives a less secure app or device permission to access your Google Account.</p>\n<ol>\n<li>Open the <a href=\"https://myaccount.google.com/apppasswords\" rel=\"external\" >App Passwords console</a> on your Google account;</li>\n<li>Type a name for your applicatiom <em>i.e. &quot;My Custom Email&quot;</em></li>\n<li>Safely store the 16-digit passcode, you&#39;ll need this later.</li>\n</ol>\n<h2 id=\"enable-cloudflare-and-39-s-email-routing\"><a href=\"#enable-cloudflare-and-39-s-email-routing\">Enable Cloudflare&#39;s Email Routing</a></h2>\n<p>Emails that are routed through Cloudflare to your preferred email inbox, benefit from enhanced security, spam filtering, and improved deliverability.\nCloudflare Email Routing acts as a protective layer for your email infrastructure, shielding it from potential threats and optimizing the overall email experience.</p>\n<ol>\n<li>Go to the <strong><a href=\"https://dash.cloudflare.com\" rel=\"external\" >Cloudflare Dashboard</a></strong> and select your domain;</li>\n<li>Go to <strong>Email</strong> <AndThen /> <strong>Email Routing</strong> <AndThen text=\"then select\" /> <strong>Get Started</strong>;</li>\n<li>Enter the custom email address in <strong>Custom Address</strong> (<em>i.e. <NotEmail email=\"cool-email@example.com\" /></em>);</li>\n<li>Enter the email address you want your emails to be forwarded to in <strong>Destination Address</strong> (<em>i.e. <NotEmail email=\"my-personal-email@gmail.com\" /></em>);</li>\n<li>Select <strong>Create and Continue</strong> <AndThen /> follow the instruction sent to your gmail address.</li>\n<li>Go to the <strong>DNS</strong> section of the dashboard and add a new TXT record with the following content:</li>\n</ol>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-txt\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">\"v=spf1 include:_spf.mx.cloudflare.net include:_spf.google.com ~all\"</div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"add-your-cloudflare-routed-email-to-gmail\"><a href=\"#add-your-cloudflare-routed-email-to-gmail\">Add Your Cloudflare-Routed Email to Gmail</a></h2>\n<p>Once did all the previous we can finally add the custom address to gmail.</p>\n<ol>\n<li>Go to your <a href=\"https://gmail.com/\" rel=\"external\" >Gmail Account</a> <AndThen text=\"then click on\" /> <strong>Settings</strong> <AndThen text=\"then select\" /> <strong>Accounts</strong>;</li>\n<li>Select <strong>Add another email address</strong> under <strong>Send Mail As</strong>;</li>\n<li>Fill the form with the name of the email and the Cloudflare-routed email (<em>i.e. <NotEmail email=\"cool-email@example.com\" /></em>) <AndThen /> untick &quot;<strong>Treat as an alias</strong>&quot;;</li>\n<li>Fill the next form with the following information:<br>\n <strong>SMTP Server</strong>: smtp.gmail.com<br>\n <strong>Port</strong>: 587<br>\n <strong>Username</strong>: your gmail address (<em>i.e. <NotEmail email=\"my-personal-email@gmail.com\" /></em>)<br>\n <strong>Password</strong>: <a href=\"#create-an-app-password\"  >the app password</a></li>\n<li>Leave <strong>TLS</strong> enabled <AndThen /> click <strong>Add Account</strong></li>\n<li>Confirm the email address with the code Google&#39;s sent you to your gmail account.</li>\n</ol>\n<h2 id=\"enjoy\"><a href=\"#enjoy\">Enjoy</a></h2>\n<p>You now have a fully working email that is routed through Cloudflare to receive emails and uses Google&#39;s SMTP server to send them.</p>\n<p>Whenever you send a new email via GMail, make sure to switch the sender accordingly to your preferences.</p>\n",
      "tags": [
        "Email",
        "Gmail",
        "Clodflare",
        "Year-2023",
        "Language-English"
      ]
    },
    {
      "id": "7-reasons-i-love-hetzner",
      "url": "https://blog.racca.me/7-reasons-i-love-hetzner",
      "title": "Why I Love Hetzner Cloud",
      "summary": "‚ù§Ô∏è 7 reasons why I love Hetzner Cloud",
      "image": "/7-reasons-i-love-hetzner/cover.jpg",
      "date_published": "2023-11-08T17:12:00.000+01:00",
      "date_modified": "2023-11-08T17:12:00.000+01:00",
      "content_text": "WHY I LOVE HETZNER CLOUD\n\nHetzner Cloud [{refLink}] is a cloud computing service provided by Hetzner\nOnline GmbH, a German web hosting company and data center operator. It offers\nvirtual machines, known as cloud servers, that run on physical servers and are\nused to run an operating system and computer programs.\n\n\nPROS\n\n 1. Affordability: Hetzner Cloud [{refLink}] is known for its competitive\n    pricing. It offers high-performance cloud servers at a reasonable cost,\n    making it an attractive option for users on a budget;\n\n 2. Performance: Hetzner [{refLink}]'s servers utilize fast NVMe storage, which\n    delivers excellent performance. This makes Hetzner a good choice for\n    applications that require high I/O operations, such as databases or media\n    servers;\n\n 3. Ease of Use: Hetzner [{refLink}]'s user interface is user-friendly, making\n    it easy for beginners to navigate and use the service. It also supports\n    cloud-init, allowing users to execute special commands while booting up\n    their servers;\n\n 4. Scalability: Hetzner [{refLink}] allows users to scale their servers up or\n    down based on their needs. This is particularly useful for applications that\n    experience fluctuating loads;\n\n 5. Private Network: Hetzner [{refLink}] allows users to create servers without\n    public IP addresses, providing an extra layer of security for applications\n    that do not require an internet connection;\n\n 6. APIs: Hetzner Cloud [{refLink}] provides a REST-API and a CLI tool for\n    developers meaning that you can monitor or change the status of your\n    server\\bs;\n\n 7. Referrals Program: Users can join Hetzner Cloud [{refLink}] with a special\n    link that gives them ‚Ç¨20 in free cloud credits [{refLink}].\n\n\nCONS\n\n 1. Limited Disk Space: If you need a huge ammount of disk space, Hetzner Cloud\n    [{refLink}] might not be the right solution for you;\n\n 2. Strict Payment Policies: Hetzner [{refLink}] has strict payment policies. If\n    there's a slight delay in your payment, your account may be deactivated;\n\n 3. KYC Requirements: Hetzner [{refLink}] requires users to provide personal\n    identification documents, such as a passport and proof of address, for Know\n    Your Customer (KYC) purposes. This can be a barrier for users who are\n    uncomfortable sharing personal information.\n\n\nCONCLUSION\n\nIn conclusion, Hetzner Cloud offers a compelling array of advantages that make\nit a top choice for cloud hosting. Its affordability, outstanding performance,\nuser-friendly interface, scalability, private network options,\ndeveloper-friendly APIs, and a lucrative referral program are all standout\nfeatures that have won over many users.",
      "content_html": "<h2 id=\"why-i-love-hetzner-cloud\"><a href=\"#why-i-love-hetzner-cloud\">Why I Love Hetzner Cloud</a></h2>\n<p><a href=\"{refLink}\"  >Hetzner Cloud</a> is a cloud computing service provided by Hetzner Online GmbH, a German web hosting company and data center operator. It offers virtual machines, known as cloud servers, that run on physical servers and are used to run an operating system and computer programs.</p>\n<h3 id=\"pros\"><a href=\"#pros\">Pros</a></h3>\n<ol>\n<li><p><strong>Affordability</strong>: <a href=\"{refLink}\"  >Hetzner Cloud</a> is known for its competitive pricing. It offers high-performance cloud servers at a reasonable cost, making it an attractive option for users on a budget;</p>\n</li>\n<li><p><strong>Performance</strong>: <a href=\"{refLink}\"  >Hetzner</a>&#39;s servers utilize fast NVMe storage, which delivers excellent performance. This makes Hetzner a good choice for applications that require high I/O operations, such as databases or media servers;</p>\n</li>\n<li><p><strong>Ease of Use</strong>: <a href=\"{refLink}\"  >Hetzner</a>&#39;s user interface is user-friendly, making it easy for beginners to navigate and use the service. It also supports cloud-init, allowing users to execute special commands while booting up their servers;</p>\n</li>\n<li><p><strong>Scalability</strong>: <a href=\"{refLink}\"  >Hetzner</a> allows users to scale their servers up or down based on their needs. This is particularly useful for applications that experience fluctuating loads;</p>\n</li>\n<li><p><strong>Private Network</strong>: <a href=\"{refLink}\"  >Hetzner</a> allows users to create servers without public IP addresses, providing an extra layer of security for applications that do not require an internet connection;</p>\n</li>\n<li><p><strong>APIs</strong>: <a href=\"{refLink}\"  >Hetzner Cloud</a> provides a REST-API and a CLI tool for developers meaning that you can monitor or change the status of your server\\b<em>s</em>;</p>\n</li>\n<li><p><strong>Referrals Program</strong>: Users can join <a href=\"{refLink}\"  >Hetzner Cloud</a> with a special link that gives them <a href=\"{refLink}\"  ><strong>‚Ç¨20 in free cloud credits</strong></a>.</p>\n</li>\n</ol>\n<h3 id=\"cons\"><a href=\"#cons\">Cons</a></h3>\n<ol>\n<li><p><strong>Limited Disk Space</strong>: If you need a huge ammount of disk space, <a href=\"{refLink}\"  >Hetzner Cloud</a> might not be the right solution for you;</p>\n</li>\n<li><p><strong>Strict Payment Policies</strong>: <a href=\"{refLink}\"  >Hetzner</a> has strict payment policies. If there&#39;s a slight delay in your payment, your account may be deactivated;</p>\n</li>\n<li><p><strong>KYC Requirements</strong>: <a href=\"{refLink}\"  >Hetzner</a> requires users to provide personal identification documents, such as a passport and proof of address, for Know Your Customer (KYC) purposes. This can be a barrier for users who are uncomfortable sharing personal information.</p>\n</li>\n</ol>\n<h2 id=\"conclusion\"><a href=\"#conclusion\">Conclusion</a></h2>\n<p>In conclusion, Hetzner Cloud offers a compelling array of advantages that make it a top choice for cloud hosting. Its affordability, outstanding performance, user-friendly interface, scalability, private network options, developer-friendly APIs, and a lucrative referral program are all standout features that have won over many users.</p>\n",
      "tags": [
        "Hosting",
        "Hetzner",
        "Referral",
        "Year-2023",
        "Language-English"
      ]
    },
    {
      "id": "create-an-echo-bot",
      "url": "https://blog.racca.me/create-an-echo-bot",
      "title": "Create a Telegram Echo Bot",
      "summary": "ü§ñ Create a Telegram Echo Bot",
      "image": "/create-an-echo-bot/cover.jpg",
      "date_published": "2023-11-07T12:00:00.000+01:00",
      "date_modified": "2023-12-12T11:00:00.000+01:00",
      "content_text": "INTRODUCTION\n\nThis article is part of the FirstBot [/?tags-Series=PHPBot] series. We recommend\nreading the introcution chapter [/create-your-first-bot] before continuing.\n\n{@html String.raw`\ncomposer require telegramsdk/botapi`}\n\n\nTELEGRAM UPDATES\n\nBefore writing the code we have to mention that there are 2 methods to get\nupdates from our Telegram bot.\n\n 1. getUpdates [https://core.telegram.org/bots/api#getupdates] : used for long\n    polling , usefull if you don't have a public ip or an https url.\n 2. setWebhook [https://core.telegram.org/bots/api#setwebhook] : more efficient\n    way for recinving incoming updates, you need to have a public ip address\n    with an https url.\n\nIn this article we'll look into both ways of creating a Telegram Bot.\n\n\nSTART CODING\n\n\nGET UPDATES\n\nHere's a simple example on how to get updates from Telegram and reply to them\nwith the same message they sent.\n\n\nBOT.PHP\n\n{@html String.raw`\n1\n<?php\n2\n\n3\nrequire_once  \"vendor/autoload.php\";\n4\n\n5\nuse TelegramSDK\\BotAPI\\Exception\\TelegramException;\n6\nuse TelegramSDK\\BotAPI\\Telegram\\{Bot, Update};\n7\n\n8\n\n9\ndefine(\"GREEN_COLOR\", \"\\033[0;32m\");\n10\ndefine(\"RED_COLOR\", \"\\033[0;31m\");\n11\ndefine(\"DEFAULT_COLOR\", \"\\033[0m\");\n12\n\n13\n\n14\n$bot = new Bot(\"YOUR_BOT_TOKEN\", Update::UPDATES_FROM_GET_UPDATES);\n15\n\n16\nif(!$bot->isValidToken(true)) {\n17\n    echo RED_COLOR . \"Invalid bot token.\\n\" . DEFAULT_COLOR;\n18\n    exit(1);\n19\n}\n20\n\n21\necho GREEN_COLOR . \"Bot Started!\\n\" . DEFAULT_COLOR;\n22\n\n23\nfor ( ; ; sleep(5)) {\n24\n\n25\n    $updates = $bot->updates(isset($updates) ? $updates->getLastUpdateId() : null);\n26\n\n27\n    foreach($updates->result as $update){\n28\n        if(isset($update->message)){\n29\n            $chat = $update->getChat();\n30\n\n31\n            try {\n32\n\n33\n                $res = $bot->copyMessage([\n34\n                    \"chat_id\" => $chat->id,\n35\n                    \"from_chat_id\" => $chat->id,\n36\n                    \"message_id\" => $update->getMessage()->message_id\n37\n                ]);\n38\n\n39\n                echo GREEN_COLOR . \"Replied to \" . $chat->id . \"\\n\" . DEFAULT_COLOR;\n40\n\n41\n            } catch (TelegramException $e) {\n42\n                echo RED_COLOR . \"Coulnd't reply to \" . $chat->id . \": \" . $e->getResponseBody()->description . \"\\n\" . DEFAULT_COLOR;\n43\n            }\n44\n\n45\n        }\n46\n    }\n47\n}`}\n\nWHAT AM I DOING?\n\nIf you already worked with TelegramSDK [https://github.com/TelegramSDK/BotAPI]\nyou might already know what I've just written, but I still reccommend having a\nlook at the official documentation [https://botapi.racca.me/] for more\ninformation.\n\nINCLUDE THE LIBRARY\n\n{@html String.raw`\nrequire_once  \"vendor/autoload.php\";`}\n\nThis line includes the autoloader file from the Composer dependency manager.\nIt's used to autoload classes and functions from the third-party libraries,\nensuring that you don't need to manually include each file.\n\nUSE STATEMENTS\n\n{@html String.raw`\nuse TelegramSDK\\BotAPI\\Exception\\TelegramException;\nuse TelegramSDK\\BotAPI\\Telegram\\{Bot, Update};`}\n\nThese use statements import specific classes from telgramsdk/botapi. This allows\nyou to use these classes in the code without specifying the full namespace each\ntime.\n\nDEFINE CONSTANTS FOR CONSOLE COLORS\n\n{@html String.raw`\ndefine(\"GREEN_COLOR\", \"\\033[0;32m\");\ndefine(\"RED_COLOR\", \"\\033[0;31m\");\ndefine(\"DEFAULT_COLOR\", \"\\033[0m\");`}\n\nThese lines define constants for ANSI escape codes, which are used to colorize\nthe console output. GREEN_COLOR sets the text color to green, RED_COLOR to red,\nand DEFAULT_COLOR resets the color to the default.\n\nINITIALIZE THE TELEGRAM BOT\n\n{@html String.raw`\n$bot = new Bot(\"YOUR_BOT_TOKEN\", Update::UPDATES_FROM_GET_UPDATES);`}\n\nAn instance of the Bot class is created with the Telegram bot token and the\nupdate method (UPDATES_FROM_GET_UPDATES) specified. The\nUpdate::UPDATES_FROM_GET_UPDATES constant indicates that updates should be\nfetched using the getUpdates method.\n\nCHECK TOKEN VALIDITY\n\n{@html String.raw`\nif (!$bot->isValidToken(true)) {\n    echo RED_COLOR . \"Invalid bot token.\\n\" . DEFAULT_COLOR;\n    exit(1);\n}`}\n\nIt checks if the bot token is valid. If not, it prints an error message in red\nand exits the script.\n\nINFINITE LOOP FOR HANDLING UPDATES\n\n{@html String.raw`\nfor (; ; sleep(5)) {\n    // Code for handling updates\n}`}\n\nAn infinite loop that fetches updates every 5 seconds.\n\nHANDLE UPDATES\n\n{@html String.raw`\n$updates = $bot->updates(isset($updates) ? $updates->getLastUpdateId() : null);`}\n\nFetches updates using the getUpdates method. If $updates is set, it fetches\nupdates starting from the last processed update.\n\n{@html String.raw`\nforeach ($updates->result as $update) {\n    // Code for processing each update\n}`}\n\nLoops through each update in the result array.\n\nPROCESS MESSAGE UPDATES\n\n{@html String.raw`\nif (isset($update->message)) {\n    // Code for processing message updates\n}`}\n\nChecks if the update is a message.\n\n{@html String.raw`\n$res = $bot->copyMessage([\n    \"chat_id\" => $chat->id,\n    \"from_chat_id\" => $chat->id,\n    \"message_id\" => $update->getMessage()->message_id\n]);`}\n\nCopies the received message and sends it back to the same chat.\n\nHANDLE EXCEPTIONS\n\n{@html String.raw`\n} catch (TelegramException $e) {\n    // Code for handling exceptions\n}`}\n\nCatches any exceptions that may occur during the message copy process and prints\nan error message.\n\nSTART THE BOT\n\nThat's it, now you can start the bot with\n\n{@html String.raw`\nphp bot.php`}\n\nSend to it a message and see it replying!\n\n\nSET WEBHOOK\n\nSetting a webhook [https://core.telegram.org/bots/api#setwebhook] with Telegram\nis bit more complicated than working with getUpdates\n[https://core.telegram.org/bots/api#getupdates] as it requires an HTTPS url. In\nthis article will assume that you already have it.\n\nDIRECTORY STRUCTURE\n\nHere's an example of directory structure you might follow:\n\n\n\nENVIRONMENT\n\nLet's start with environment.php, a file that will hamdle common tasks such as\ncreating a new instance of the bot.\n\n\nSRC/ENVIRONMENT.PHP\n\n{@html String.raw`\n1\n<?php\n2\n\n3\nrequire_once __DIR__ . \"/../vendor/autoload.php\";\n4\n\n5\nuse TelegramSDK\\BotAPI\\Telegram\\{Bot, Update};\n6\n\n7\n$bot = new Bot(\"YOUR_BOT_TOKEN\", Update::UPDATES_FROM_WEBHOOK);\n8\n\n9\n$update = $bot->updates(); // Getting the updates`}\n\nAs you can see, getting updates from the webhook is much easier than doing it\nwith getUpdates.\n\nBOOTSTRAP\n\nThe bootstrap.php file simply sets the webhook to the specified url.\n\n\nSRC/BOOTSTRAP.PHP\n\n{@html String.raw`\n1\n<?php\n2\n\n3\nrequire_once __DIR__ . \"/environment.php\";\n4\n\n5\n$bot->setWebhook([\n6\n    \"url\" => \"https://example.com\", // Remember to use https\n7\n    \"drop_pending_updates\" => true // Drop any pending updates\n8\n]);`}\n\nSee setWebhook [https://core.telegram.org/bots/api#setwebhook] for more\ninformation.\n\nPUBLIC FILE\n\nThe src/public/ directory will be the one exposed to your web server and it will\ncontain only one file, index.php\n\n\nSRC/PUBLIC/INDEX.PHP\n\n{@html String.raw`\n1\n<?php\n2\n\n3\nrequire_once __DIR__ . \"/../environment.php\"; // require the environment\n4\n\n5\nif(isset($update->update_id)) { // Check if there is an update\n6\n\n7\n    if(isset($update->message)) { // Check if a message was sent\n8\n        $bot->copyMessage([ // Copy the message\n9\n            \"chat_id\" => $update->chat->id,\n10\n            \"from_chat_id\" => $update->chat->id,\n11\n            \"message_id\" => $update->message->message_id\n12\n        ]);\n13\n    }\n14\n\n15\n} else{\n16\n    echo \"No updates from telegram where found.\\n\";\n17\n}`}\n\nSTART THE BOT\n\nOnce you have those files you just need to bootstrap your bot:\n\n{@html String.raw`\nphp src/bootstrap.php`}\n\nAnd start your HTTPS web server.\n\n\nENJOY\n\nYou now have a full functioning bot that replies to every message sent by the\nusers.\n\nIf you have any question please leave a comment below and I'll be happy to\nreply.",
      "content_html": "<h2 id=\"introduction\"><a href=\"#introduction\">Introduction</a></h2>\n<p>This article is part of the <a href=\"/?tags-Series=PHPBot\"  >FirstBot</a> series.\nWe recommend reading the <a href=\"/create-your-first-bot\"  >introcution chapter</a> before continuing.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">composer</span> require telegramsdk/botapi</div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"telegram-updates\"><a href=\"#telegram-updates\">Telegram Updates</a></h2>\n<p>Before writing the code we have to mention that there are 2 methods to get updates from our Telegram bot.</p>\n<ol>\n<li><a href=\"https://core.telegram.org/bots/api#getupdates\" rel=\"external\" >getUpdates</a> : used for long polling , usefull if you don&#39;t have a public ip or an https url.</li>\n<li><a href=\"https://core.telegram.org/bots/api#setwebhook\" rel=\"external\" >setWebhook</a> : more efficient way for recinving incoming updates, you need to have a public ip address with an https url.</li>\n</ol>\n<p>In this article we&#39;ll look into both ways of creating a Telegram Bot.</p>\n<h2 id=\"start-coding\"><a href=\"#start-coding\">Start Coding</a></h2>\n<h3 id=\"get-updates\"><a href=\"#get-updates\">Get Updates</a></h3>\n<p>Here&#39;s a simple example on how to get updates from Telegram and reply to them with the same message they sent.</p>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">bot.php</h2><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;?php</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">require_once  \"vendor/autoload.php\";</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Exception\\TelegramException;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Telegram\\{Bot, Update};</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">7</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">8</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">9</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">define(\"GREEN_COLOR\", \"\\033[0;32m\");</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">10</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">define(\"RED_COLOR\", \"\\033[0;31m\");</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">11</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">define(\"DEFAULT_COLOR\", \"\\033[0m\");</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">12</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">13</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">14</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;bot = new Bot(\"YOUR_BOT_TOKEN\", Update::UPDATES_FROM_GET_UPDATES);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">15</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">16</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">if(!&#36;bot-&gt;isValidToken(true)) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">17</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    echo RED_COLOR . \"Invalid bot token.\\n\" . DEFAULT_COLOR;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">18</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    exit(1);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">19</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">20</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">21</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">echo GREEN_COLOR . \"Bot Started!\\n\" . DEFAULT_COLOR;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">22</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">23</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">for ( ; ; sleep(5)) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">24</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">25</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    &#36;updates = &#36;bot-&gt;updates(isset(&#36;updates) ? &#36;updates-&gt;getLastUpdateId() : null);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">26</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">27</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    foreach(&#36;updates-&gt;result as &#36;update){</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">28</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        if(isset(&#36;update-&gt;message)){</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">29</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            &#36;chat = &#36;update-&gt;getChat();</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">30</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">31</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            try {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">32</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">33</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">                &#36;res = &#36;bot-&gt;copyMessage([</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">34</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">                    \"chat_id\" =&gt; &#36;chat-&gt;id,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">35</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">                    \"from_chat_id\" =&gt; &#36;chat-&gt;id,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">36</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">                    \"message_id\" =&gt; &#36;update-&gt;getMessage()-&gt;message_id</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">37</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">                ]);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">38</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">39</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">                echo GREEN_COLOR . \"Replied to \" . &#36;chat-&gt;id . \"\\n\" . DEFAULT_COLOR;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">40</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">41</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            } catch (TelegramException &#36;e) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">42</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">                echo RED_COLOR . \"Coulnd't reply to \" . &#36;chat-&gt;id . \": \" . &#36;e-&gt;getResponseBody()-&gt;description . \"\\n\" . DEFAULT_COLOR;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">43</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            }</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">44</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">45</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        }</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">46</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    }</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">47</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<h4 id=\"what-am-i-doing\"><a href=\"#what-am-i-doing\">What Am I Doing?</a></h4>\n<p>If you already worked with <a href=\"https://github.com/TelegramSDK/BotAPI\" rel=\"external\" >TelegramSDK</a> you might already know what I&#39;ve just written, but I still reccommend having a look at the <a href=\"https://botapi.racca.me/\" rel=\"external\" >official documentation</a> for more information.</p>\n<h5 id=\"include-the-library\"><a href=\"#include-the-library\">Include the Library</a></h5>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">require_once  \"vendor/autoload.php\";</div></div>`}</code></pre></CodeCopy></div>\n<p>This line includes the autoloader file from the Composer dependency manager.\nIt&#39;s used to autoload classes and functions from the third-party libraries, ensuring that you don&#39;t need to manually include each file.</p>\n<h5 id=\"use-statements\"><a href=\"#use-statements\">Use Statements</a></h5>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Exception\\TelegramException;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Telegram\\{Bot, Update};</div></div>`}</code></pre></CodeCopy></div>\n<p>These use statements import specific classes from <code class=\"inline-code-block\">telgramsdk/botapi</code>.\nThis allows you to use these classes in the code without specifying the full namespace each time.</p>\n<h5 id=\"define-constants-for-console-colors\"><a href=\"#define-constants-for-console-colors\">Define Constants for Console Colors</a></h5>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">define(\"GREEN_COLOR\", \"\\033[0;32m\");</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">define(\"RED_COLOR\", \"\\033[0;31m\");</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">define(\"DEFAULT_COLOR\", \"\\033[0m\");</div></div>`}</code></pre></CodeCopy></div>\n<p>These lines define constants for ANSI escape codes, which are used to colorize the console output. <code class=\"inline-code-block\">GREEN_COLOR</code> sets the text color to green, <code class=\"inline-code-block\">RED_COLOR</code> to red, and <code class=\"inline-code-block\">DEFAULT_COLOR</code> resets the color to the default.</p>\n<h5 id=\"initialize-the-telegram-bot\"><a href=\"#initialize-the-telegram-bot\">Initialize the Telegram Bot</a></h5>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;bot = new Bot(\"YOUR_BOT_TOKEN\", Update::UPDATES_FROM_GET_UPDATES);</div></div>`}</code></pre></CodeCopy></div>\n<p>An instance of the Bot class is created with the Telegram bot token and the update method (<code class=\"inline-code-block\">UPDATES_FROM_GET_UPDATES</code>) specified. The <code class=\"inline-code-block\">Update::UPDATES_FROM_GET_UPDATES</code> constant indicates that updates should be fetched using the <code class=\"inline-code-block\">getUpdates</code> method.</p>\n<h5 id=\"check-token-validity\"><a href=\"#check-token-validity\">Check Token Validity</a></h5>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">if (!&#36;bot-&gt;isValidToken(true)) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    echo RED_COLOR . \"Invalid bot token.\\n\" . DEFAULT_COLOR;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    exit(1);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<p>It checks if the bot token is valid. If not, it prints an error message in red and exits the script.</p>\n<h5 id=\"infinite-loop-for-handling-updates\"><a href=\"#infinite-loop-for-handling-updates\">Infinite Loop for Handling Updates</a></h5>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">for (; ; sleep(5)) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    // Code for handling updates</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<p>An infinite loop that fetches updates every 5 seconds.</p>\n<h5 id=\"handle-updates\"><a href=\"#handle-updates\">Handle Updates</a></h5>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;updates = &#36;bot-&gt;updates(isset(&#36;updates) ? &#36;updates-&gt;getLastUpdateId() : null);</div></div>`}</code></pre></CodeCopy></div>\n<p>Fetches updates using the <code class=\"inline-code-block\">getUpdates</code> method. If <code class=\"inline-code-block\">$updates</code> is set, it fetches updates starting from the last processed update.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">foreach (&#36;updates-&gt;result as &#36;update) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    // Code for processing each update</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<p>Loops through each update in the result array.</p>\n<h6 id=\"process-message-updates\"><a href=\"#process-message-updates\">Process Message Updates</a></h6>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">if (isset(&#36;update-&gt;message)) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    // Code for processing message updates</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<p>Checks if the update is a message.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;res = &#36;bot-&gt;copyMessage([</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    \"chat_id\" =&gt; &#36;chat-&gt;id,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    \"from_chat_id\" =&gt; &#36;chat-&gt;id,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    \"message_id\" =&gt; &#36;update-&gt;getMessage()-&gt;message_id</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">]);</div></div>`}</code></pre></CodeCopy></div>\n<p>Copies the received message and sends it back to the same chat.</p>\n<h6 id=\"handle-exceptions\"><a href=\"#handle-exceptions\">Handle Exceptions</a></h6>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">} catch (TelegramException &#36;e) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    // Code for handling exceptions</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<p>Catches any exceptions that may occur during the message copy process and prints an error message.</p>\n<h4 id=\"start-the-bot\"><a href=\"#start-the-bot\">Start the Bot</a></h4>\n<p>That&#39;s it, now you can start the bot with</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">php bot.php</div></div>`}</code></pre></CodeCopy></div>\n<p>Send to it a message and see it replying!</p>\n<h3 id=\"set-webhook\"><a href=\"#set-webhook\">Set Webhook</a></h3>\n<p>Setting a <a href=\"https://core.telegram.org/bots/api#setwebhook\" rel=\"external\" >webhook</a> with Telegram is bit more complicated than working with <a href=\"https://core.telegram.org/bots/api#getupdates\" rel=\"external\" >getUpdates</a> as it requires an HTTPS url.\nIn this article will assume that you already have it.</p>\n<h4 id=\"directory-structure\"><a href=\"#directory-structure\">Directory Structure</a></h4>\n<p>Here&#39;s an example of directory structure you might follow:</p>\n<div class=\"p4 border-1 shadow-xl rounded-xl border-black dark:border-white overflow-auto\">\n  <NestedFolder folderData={webhookDirectory} />\n</div>\n\n\n<h4 id=\"environment\"><a href=\"#environment\">Environment</a></h4>\n<p>Let&#39;s start with <code class=\"inline-code-block\">environment.php</code>, a file that will hamdle common tasks such as creating a new instance of the bot.</p>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">src/environment.php</h2><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;?php</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">require_once __DIR__ . \"/../vendor/autoload.php\";</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Telegram\\{Bot, Update};</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">7</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;bot = new Bot(\"YOUR_BOT_TOKEN\", Update::UPDATES_FROM_WEBHOOK);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">8</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">9</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;update = &#36;bot-&gt;updates(); // Getting the updates</div></div>`}</code></pre></CodeCopy></div>\n<p>As you can see, getting updates from the webhook is much easier than doing it with <code class=\"inline-code-block\">getUpdates</code>.</p>\n<h4 id=\"bootstrap\"><a href=\"#bootstrap\">Bootstrap</a></h4>\n<p>The <code class=\"inline-code-block\">bootstrap.php</code> file simply sets the webhook to the specified url.</p>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">src/bootstrap.php</h2><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;?php</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">require_once __DIR__ . \"/environment.php\";</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;bot-&gt;setWebhook([</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    \"url\" =&gt; \"https://example.com\", // Remember to use https</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">7</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    \"drop_pending_updates\" =&gt; true // Drop any pending updates</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">8</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">]);</div></div>`}</code></pre></CodeCopy></div>\n<p>See <a href=\"https://core.telegram.org/bots/api#setwebhook\" rel=\"external\" >setWebhook</a> for more information.</p>\n<h4 id=\"public-file\"><a href=\"#public-file\">Public file</a></h4>\n<p>The <code class=\"inline-code-block\">src/public/</code> directory will be the one exposed to your web server and it will contain only one file, <code class=\"inline-code-block\">index.php</code></p>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">src/public/index.php</h2><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;?php</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">require_once __DIR__ . \"/../environment.php\"; // require the environment</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">if(isset(&#36;update-&gt;update_id)) { // Check if there is an update</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">7</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    if(isset(&#36;update-&gt;message)) { // Check if a message was sent</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">8</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        &#36;bot-&gt;copyMessage([ // Copy the message</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">9</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            \"chat_id\" =&gt; &#36;update-&gt;chat-&gt;id,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">10</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            \"from_chat_id\" =&gt; &#36;update-&gt;chat-&gt;id,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">11</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            \"message_id\" =&gt; &#36;update-&gt;message-&gt;message_id</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">12</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        ]);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">13</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    }</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">14</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">15</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">} else{</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">16</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    echo \"No updates from telegram where found.\\n\";</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">17</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<h4 id=\"start-the-bot\"><a href=\"#start-the-bot\">Start the bot</a></h4>\n<p>Once you have those files you just need to bootstrap your bot:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">php src/bootstrap.php</div></div>`}</code></pre></CodeCopy></div>\n<p>And start your HTTPS web server.</p>\n<h2 id=\"enjoy\"><a href=\"#enjoy\">Enjoy</a></h2>\n<p>You now have a full functioning bot that replies to every message sent by the users.</p>\n<p>If you have any question please leave a comment below and I&#39;ll be happy to reply.</p>\n",
      "tags": [
        "Telegram",
        "Bot",
        "Automation",
        "TelegramSDK",
        "Series-FirstBot",
        "Year-2023",
        "Language-English"
      ]
    },
    {
      "id": "create-your-first-bot",
      "url": "https://blog.racca.me/create-your-first-bot",
      "title": "Create Your First Telegram Bot",
      "summary": "ü§ñ Create your first Telegram Bot using PHP in just a few steps",
      "image": "/create-your-first-bot/cover.jpg",
      "date_published": "2023-11-06T12:00:00.000+01:00",
      "date_modified": "2023-12-12T11:00:00.000+01:00",
      "content_text": "INTRODUCTION\n\nTelegram bots are special accounts that serve as an interface for code running\non a server, allowing for a variety of functionalities within the Telegram\nplatform. They can be used to automate tasks, provide information, interact with\nusers, and even replace entire websites.\n\nIn this article, we'll explore how to build a PHP Telegram bot using the\nTelegram Bot Api [https://core.telegram.org/bots/api] and TelegramSDK\n[https://botapi.racca.me]. We'll walk through the process of setting up the bot,\nconfiguring it, and testing it.\n\n\nPREREQUISITES\n\nBefore we begin, ensure that you have the following:\n\n * PHP installed on your machine. If not, you can download it from the official\n   PHP website [https://www.php.net/download].\n * Composer, a dependency manager for PHP. If you don't have it, you can\n   download it from the official Composer website.\n\n\nSETUP YOUR BOT ON TELEGRAM\n\nThe first step is to create a Bot to which users will chat with. Go to\n@botfather [https://t.me/BotFather], start it and type /newbot\n\n\n\n\nSTART CODING\n\n\nSETUP LOCAL ENVIRORMENT\n\nBefore actually writing the bot's logic we need to install the lirary we're\ngoing to use:\n\n{@html String.raw`\ncomposer require telegramsdk/botapi`}\n\ntelegramsdk/botapi [https://github.com/TelegramSDK/BotAPI] is a light weight\nlibrary that lets us access the Telegram API [https://core.telegram.org] easly\nand freely.\n\n\nWRITE THE LOGIC\n\nIt's time for the fun part!\n\nAll you need to do is create a new file named bot.php (or whatever you like) and\nwrite this code:\n\n\nBOT.PHP\n\n{@html String.raw`\n1 \n<?php\n2 \nrequire_once \"vendor/autoload.php\";\n3 \n\n4 \nuse TelegramSDK\\BotAPI\\Telegram\\Bot;\n5 \n\n6 \n$bot = new Bot(\"YOUR_BOT_TOKEN\");\n7 \n\n8 \n$bot->sendMessage([\n9 \n    \"chat_id\" => YOUR_CHAT_ID,\n10 \n    \"text\" => \"My First Telegram bot!\"\n11 \n]);`}\n\nJust send a message to @userinfobot [https://t.me/userinfobot] and replace\nYOUR_CHAT_ID with the id the bot provided.\n\nWHAT AM I DOING?\n\nIf this is your first approach to Telegram or to telegramsdk/botapi\n[https://github.com/TelegramSDK/BotAPI], you may wonder:\n\n> What am I Doing?\n\nOtherwise you can skip this explanation.\n\nLet's have a look a the code you've just written:\n\nINSTANCING A NEW BOT\n\nIn this lines we're importing the library from the vendor/ directory and\ninstancing a new Bot object.\n\n\nBOT.PHP\n\n{@html String.raw`\n1\n<?php\n2\nrequire_once \"vendor/autoload.php\";\n3\n\n4\nuse TelegramSDK\\BotAPI\\Telegram\\Bot;\n5\n\n6\n$bot = new Bot(\"YOUR_BOT_TOKEN\");`}\n\nPlease remember to replace YOUR_BOT_TOKEN with the actual bot token that\n@botfather [https://t.me/botfather] sent you.\n\nSee \"Setup your Bot on Telegram\" if you don't know how to do it.\n\nSENDING A MESSAGE\n\nThe lines are an API call to the Telegram sendMessage method.\n\nThis call will send a message to the specified user saying \"My First Telegram\nbot!\"\n\n\nBOT.PHP\n\n{@html String.raw`\n1\n<?php\n2\nrequire_once \"vendor/autoload.php\";\n3\n\n4\nuse TelegramSDK\\BotAPI\\Telegram\\Bot;\n5\n\n6\n$bot = new Bot(\"YOUR_BOT_TOKEN\");\n7\n\n8\n$bot->sendMessage([\n9\n   \"chat_id\" => YOUR_CHAT_ID,\n10\n   \"text\" => \"My First Telegram bot!\"\n11\n]);`}\n\nPlease remember to replace YOUR_CHAT_ID with your actual id.\n\nIf you don't know how to get your char id start, @userinfobot\n[https://t.me/userinfobot] and get your id.\n\n\nTEST THE BOT\n\nTesting the bot is super easy, you just need to start the file!\n\n{@html String.raw`\nphp bot.php`}\n\nIf you don't start the bot you created, the program won't be able to send you\nthe message.\n\n\nENJOY\n\nThat's it! You now have a fully working telegram bot. Or do you?\n[/create-an-echo-bot]\n\nMake sure to check out the next post [/create-an-echo-bot] of the series.\n\nIf you have any question please leave a comment below and I'll be happy to\nreply.",
      "content_html": "<h2 id=\"introduction\"><a href=\"#introduction\">Introduction</a></h2>\n<p>Telegram bots are special accounts that serve as an interface for code running on a server, allowing for a variety of functionalities within the Telegram platform. They can be used to automate tasks, provide information, interact with users, and even replace entire websites.</p>\n<p>In this article, we&#39;ll explore how to build a PHP Telegram bot using the <a href=\"https://core.telegram.org/bots/api\" rel=\"external\" >Telegram Bot Api</a> and <a href=\"https://botapi.racca.me\" rel=\"external\" >TelegramSDK</a>. We&#39;ll walk through the process of setting up the bot, configuring it, and testing it.</p>\n<h3 id=\"prerequisites\"><a href=\"#prerequisites\">Prerequisites</a></h3>\n<p>Before we begin, ensure that you have the following:</p>\n<ul>\n<li>PHP installed on your machine. If not, you can download it from the official <a href=\"https://www.php.net/download\" rel=\"external\" >PHP website</a>.</li>\n<li>Composer, a dependency manager for PHP. If you don&#39;t have it, you can download it from the official Composer website.</li>\n</ul>\n<h2 id=\"setup-your-bot-on-telegram\"><a href=\"#setup-your-bot-on-telegram\">Setup your Bot on Telegram</a></h2>\n<p>The first step is to create a Bot to which users will chat with.\nGo to <a href=\"https://t.me/BotFather\" rel=\"external\" >@botfather</a>, start it and type <code class=\"inline-code-block\">/newbot</code></p>\n<p><VideoPlayer\n  autoplay={true}\n  loop={true}\n  style=\"max-height: 700px !important;\"\n  title=\"BotFather Tutorial\"\n  mp4=\"/create-your-first-bot/botfather.mp4\"\n/></p>\n<h2 id=\"start-coding\"><a href=\"#start-coding\">Start Coding</a></h2>\n<h3 id=\"setup-local-envirorment\"><a href=\"#setup-local-envirorment\">Setup Local Envirorment</a></h3>\n<p>Before actually writing the bot&#39;s logic we need to install the lirary we&#39;re going to use:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">composer</span> require telegramsdk/botapi</div></div>`}</code></pre></CodeCopy></div>\n<p><a href=\"https://github.com/TelegramSDK/BotAPI\" rel=\"external\" >telegramsdk/botapi</a> is a light weight library that lets us access the <a href=\"https://core.telegram.org\" rel=\"external\" >Telegram API</a> easly and freely.</p>\n<h3 id=\"write-the-logic\"><a href=\"#write-the-logic\">Write the Logic</a></h3>\n<p>It&#39;s time for the fun part!</p>\n<p>All you need to do is create a new file named <code class=\"inline-code-block\">bot.php</code> (<em>or whatever you like</em>) and write this code:</p>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">bot.php</h2><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">&lt;?php</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">require_once \"vendor/autoload.php\";</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"line-diff\"> </span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Telegram\\Bot;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"line-diff\"> </span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">&#36;bot = new Bot(\"YOUR_BOT_TOKEN\");</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">7</span><span class=\"line-diff\"> </span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">8</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">&#36;bot-&gt;sendMessage([</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">9</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">    \"chat_id\" =&gt; YOUR_CHAT_ID,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">10</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">    \"text\" =&gt; \"My First Telegram bot!\"</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">11</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">]);</div></div>`}</code></pre></CodeCopy></div>\n<InfoBox statusType=\"info\" statusName=\"How can I get my CHAT_ID?\"><p>Just send a message to <a href=\"https://t.me/userinfobot\" rel=\"external\" >@userinfobot</a> and replace <code class=\"inline-code-block\">YOUR_CHAT_ID</code> with the id the bot provided.</p>\n</InfoBox>\n<h4 id=\"what-am-i-doing\"><a href=\"#what-am-i-doing\">What Am I Doing?</a></h4>\n<p>If this is your first approach to Telegram or to <a href=\"https://github.com/TelegramSDK/BotAPI\" rel=\"external\" >telegramsdk/botapi</a>, you may wonder:</p>\n<blockquote>\n<p>What am I Doing?</p>\n</blockquote>\n<p>Otherwise you can skip this explanation.</p>\n<p>Let&#39;s have a look a the code you&#39;ve just written:</p>\n<h5 id=\"instancing-a-new-bot\"><a href=\"#instancing-a-new-bot\">Instancing a new Bot</a></h5>\n<p>In this lines we&#39;re importing the library from the <code class=\"inline-code-block\">vendor/</code> directory and instancing a new Bot object.</p>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">bot.php</h2><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;?php</div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">require_once \"vendor/autoload.php\";</div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Telegram\\Bot;</div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;bot = new Bot(\"YOUR_BOT_TOKEN\");</div></div>`}</code></pre></CodeCopy></div>\n<InfoBox statusType=\"info\" statusName=\"Replace the Token!\"><p>Please remember to replace <code class=\"inline-code-block\">YOUR_BOT_TOKEN</code> with the actual bot token that <a href=\"https://t.me/botfather\" rel=\"external\" >@botfather</a> sent you.</p>\n<p>See &quot;<a href=\"#setup-your-bot-on-telegram\"  >Setup your Bot on Telegram</a>&quot; if you don&#39;t know how to do it.</p>\n</InfoBox>\n<h5 id=\"sending-a-message\"><a href=\"#sending-a-message\">Sending a Message</a></h5>\n<p>The lines are an API call to the Telegram <code class=\"inline-code-block\">sendMessage</code> method.</p>\n<p>This call will send a message to the specified user saying &quot;My First Telegram bot!&quot;</p>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">bot.php</h2><CodeCopy><pre><code class=\"language-php\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;?php</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">require_once \"vendor/autoload.php\";</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">use TelegramSDK\\BotAPI\\Telegram\\Bot;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;bot = new Bot(\"YOUR_BOT_TOKEN\");</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">7</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">8</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#36;bot-&gt;sendMessage([</div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">9</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">   \"chat_id\" =&gt; YOUR_CHAT_ID,</div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">10</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">   \"text\" =&gt; \"My First Telegram bot!\"</div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">11</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">]);</div></div>`}</code></pre></CodeCopy></div>\n<p>Please remember to replace <code class=\"inline-code-block\">YOUR_CHAT_ID</code> with your actual id.</p>\n<p>If you don&#39;t know how to get your char id start, <a href=\"https://t.me/userinfobot\" rel=\"external\" >@userinfobot</a> and get your id.</p>\n<h3 id=\"test-the-bot\"><a href=\"#test-the-bot\">Test the bot</a></h3>\n<p>Testing the bot is super easy, you just need to start the file!</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">php bot.php</div></div>`}</code></pre></CodeCopy></div>\n<InfoBox statusType=\"info\" statusName=\"Start the Bot\"><p>If you don&#39;t <strong>start the bot you created</strong>, the program won&#39;t be able to send you the message.</p>\n</InfoBox>\n<h3 id=\"enjoy\"><a href=\"#enjoy\">Enjoy</a></h3>\n<p>That&#39;s it! You now have a fully working telegram bot.\n<a href=\"/create-an-echo-bot\"  >Or do you?</a></p>\n<p>Make sure to check out the <a href=\"/create-an-echo-bot\"  >next post</a> of the series.</p>\n<p>If you have any question please leave a comment below and I&#39;ll be happy to reply.</p>\n",
      "tags": [
        "Telegram",
        "Bot",
        "Automation",
        "TelegramSDK",
        "Series-FirstBot",
        "Year-2023",
        "Language-English"
      ]
    }
  ]
}