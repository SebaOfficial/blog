import{s as es,f as a,a as r,l as bt,g as i,h,N as u,c as d,m as kt,d as p,j as m,i as E,u as s,H as U,x as A,v as F}from"../chunks/scheduler.b261eb3c.js";import{S as ts,i as ss,b as x,d as g,m as b,a as k,t as C,e as w}from"../chunks/index.5ccb46b4.js";import{P as ns}from"../chunks/post.d159e0b7.js";import"../chunks/image_banner.b83a1e67.js";import{C as q}from"../chunks/code_copy.79980bc7.js";import{H as as}from"../chunks/HoverExplanation.b14da956.js";function is(_){let e;return{c(){e=bt("ELF")},l(n){e=kt(n,"ELF")},m(n,o){E(n,e,o)},d(n){n&&p(e)}}}function ls(_){let e,n,o,$=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token builtin class-name">echo</span> <span class="token string">"echo 'Hello World'"</span> <span class="token operator">></span> script.sh</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">chmod</span> <span class="token number">111</span> script.sh <span class="token comment"># Only execute permission</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">./script.sh</div></div>`+"";return{c(){e=a("pre"),n=a("code"),o=new U(!1),this.h()},l(l){e=i(l,"PRE",{});var c=h(e);n=i(c,"CODE",{class:!0});var f=h(n);o=A(f,!1),f.forEach(p),c.forEach(p),this.h()},h(){o.a=null,m(n,"class","language-bash")},m(l,c){E(l,e,c),s(e,n),o.m($,n)},p:F,d(l){l&&p(e)}}}function os(_){let e,n,o,$=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">exec: Failed to execute process: './script.sh' the file could not be run by the operating system.</div></div>`+"";return{c(){e=a("pre"),n=a("code"),o=new U(!1),this.h()},l(l){e=i(l,"PRE",{});var c=h(e);n=i(c,"CODE",{class:!0});var f=h(n);o=A(f,!1),f.forEach(p),c.forEach(p),this.h()},h(){o.a=null,m(n,"class","language-txt")},m(l,c){E(l,e,c),s(e,n),o.m($,n)},p:F,d(l){l&&p(e)}}}function cs(_){let e,n,o,$=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token builtin class-name">echo</span> <span class="token string">"echo 'Hello World'"</span> <span class="token operator">></span> script.sh</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">chmod</span> <span class="token number">444</span> script.sh <span class="token comment"># Only read permission</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">./script.sh <span class="token comment"># This generates an error</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">cp</span> <span class="token variable"><span class="token variable">&#36;(</span><span class="token function">which</span> <span class="token function">cp</span><span class="token variable">)</span></span> new_script.sh <span class="token comment"># Copies also all the permissions of another file (the cp executable) to the new script</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">cp</span> script.sh new_script.sh <span class="token comment"># Copies the content of the script to the actual script</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">./new_script.sh <span class="token comment"># Should execute the script</span></div></div>`+"";return{c(){e=a("pre"),n=a("code"),o=new U(!1),this.h()},l(l){e=i(l,"PRE",{});var c=h(e);n=i(c,"CODE",{class:!0});var f=h(n);o=A(f,!1),f.forEach(p),c.forEach(p),this.h()},h(){o.a=null,m(n,"class","language-bash")},m(l,c){E(l,e,c),s(e,n),o.m($,n)},p:F,d(l){l&&p(e)}}}function rs(_){let e,n,o,$=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">FROM ubuntu:latest</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">ARG USERNAME=dummy</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">RUN useradd -m -s /bin/bash &#36;USERNAME</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">RUN mkdir -p /usr/bin</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">RUN chmod 755 /usr/bin</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"># A hypothetical stress test script</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">RUN echo '#!/bin/bash\n:(){ :|:&amp; };:' &gt; /usr/bin/stress_test</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">RUN chmod 744 /usr/bin/stress_test</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">USER &#36;USERNAME</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">WORKDIR /home/&#36;USERNAME</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">CMD ["bash"]</div></div>`+"";return{c(){e=a("pre"),n=a("code"),o=new U(!1),this.h()},l(l){e=i(l,"PRE",{});var c=h(e);n=i(c,"CODE",{class:!0});var f=h(n);o=A(f,!1),f.forEach(p),c.forEach(p),this.h()},h(){o.a=null,m(n,"class","language-dockerfile")},m(l,c){E(l,e,c),s(e,n),o.m($,n)},p:F,d(l){l&&p(e)}}}function ds(_){let e,n,o,$=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-it</span> <span class="token variable"><span class="token variable">&#36;(</span><span class="token function">docker</span> build <span class="token parameter variable">-q</span> <span class="token parameter variable">-f</span> Dockerfile <span class="token builtin class-name">.</span> <span class="token variable">)</span></span></div></div>`+"";return{c(){e=a("pre"),n=a("code"),o=new U(!1),this.h()},l(l){e=i(l,"PRE",{});var c=h(e);n=i(c,"CODE",{class:!0});var f=h(n);o=A(f,!1),f.forEach(p),c.forEach(p),this.h()},h(){o.a=null,m(n,"class","language-bash")},m(l,c){E(l,e,c),s(e,n),o.m($,n)},p:F,d(l){l&&p(e)}}}function ps(_){let e,n,o,$=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">bash</span> /usr/bin/stress_test</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token comment"># OR</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">cp</span> /usr/bin/ls new_stress_test</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">cp</span> /usr/bin/stress_test stress_test</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">./stress_test</div></div>`+"";return{c(){e=a("pre"),n=a("code"),o=new U(!1),this.h()},l(l){e=i(l,"PRE",{});var c=h(e);n=i(c,"CODE",{class:!0});var f=h(n);o=A(f,!1),f.forEach(p),c.forEach(p),this.h()},h(){o.a=null,m(n,"class","language-bash")},m(l,c){E(l,e,c),s(e,n),o.m($,n)},p:F,d(l){l&&p(e)}}}function vs(_){let e,n,o,$=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">FROM ubuntu:latest</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">RUN chmod -x &#36;(which chmod)</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">CMD ["bash"]</div></div>`+"";return{c(){e=a("pre"),n=a("code"),o=new U(!1),this.h()},l(l){e=i(l,"PRE",{});var c=h(e);n=i(c,"CODE",{class:!0});var f=h(n);o=A(f,!1),f.forEach(p),c.forEach(p),this.h()},h(){o.a=null,m(n,"class","language-dockerfile")},m(l,c){E(l,e,c),s(e,n),o.m($,n)},p:F,d(l){l&&p(e)}}}function us(_){let e,n,o,$=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-it</span> <span class="token variable"><span class="token variable">&#36;(</span><span class="token function">docker</span> build <span class="token parameter variable">-q</span> <span class="token parameter variable">-f</span> Dockerfile <span class="token builtin class-name">.</span> <span class="token variable">)</span></span></div></div>`+"";return{c(){e=a("pre"),n=a("code"),o=new U(!1),this.h()},l(l){e=i(l,"PRE",{});var c=h(e);n=i(c,"CODE",{class:!0});var f=h(n);o=A(f,!1),f.forEach(p),c.forEach(p),this.h()},h(){o.a=null,m(n,"class","language-bash")},m(l,c){E(l,e,c),s(e,n),o.m($,n)},p:F,d(l){l&&p(e)}}}function fs(_){let e,n,o='<a href="#linux-permissions">Linux Permissions</a>',$,l,c=`Linux permissions are a cornerstone of the operating system&#39;s security, defining who can access or manipulate files and directories.
Among these, the execute (<code class="inline-code-block">x</code>) permission is essential for running scripts and binaries or navigating directories.
But what happens if execute permissions are not paired with read permissions?`,f,X,Ct="In this article, we’ll uncover why the execute permission alone is not enough, diving into practical examples and implications.",Oe,N,wt='<a href="#the-role-of-execute-and-read-permissions">The Role of Execute and Read Permissions</a>',Ie,Y,Et="When you attempt to execute a file in Linux, several steps occur:",qe,Z,yt="<li><strong>File Content Access</strong>:</li>",Ue,y,ee,Lt="The kernel reads the file’s content to understand how to execute it.",Ae,j,Fe,H,Ne,je,te,Ht="For scripts, an interpreter like Bash or Python processes the file.",Ve,V,Tt="<li><strong>Read Permission’s Role</strong>:</li>",We,se,Mt="<li>Without read permissions, the kernel or interpreter cannot load the file&#39;s content into memory, making execution impossible.</li>",ze,ne,Pt="Let’s see this in action.",Be,W,Rt='<a href="#example-1-script-without-read-permission">Example 1: Script Without Read Permission</a>',Ke,ae,Dt="A file with execute permission but no read permission cannot be executed because the system cannot load its contents into memory.",Ge,ie,T,Je,le,St="The system outputs:",Qe,oe,M,Xe,ce,Ot="This failure occurs because the system requires read permissions to access the script's content.",Ye,z,It='<a href="#example-2-script-without-execute-permission">Example 2: Script Without Execute Permission</a>',Ze,re,qt="On the other hand, a file with read but no execute permission can still be executed indirectly, as the content is accessible.",et,de,P,tt,B,Ut='<a href="#implications-for-security">Implications for Security</a>',st,pe,At="Imagine a sysadmin wants to restrict the execution of a sensitive script but allow its content to be readable. This configuration is not secure, as users can bypass the lack of execute permissions.",nt,ve,Ft="For example:",at,ue,Nt='<li>Users can run scripts using the interpreter directly (<code class="inline-code-block">bash script.sh</code>).</li> <li>They can copy and modify files they can read.</li>',it,fe,jt="To enforce true restrictions, the sysadmin must remove read permissions for unauthorized users.",lt,K,Vt='<a href="#a-practical-docker-example">A Practical Docker Example</a>',ot,he,Wt="Here’s an illustrative example using Docker. Suppose you have a system script intended for administrators only:",ct,me,R,rt,$e,zt="Running this Docker container:",dt,_e,D,pt,xe,Bt="A malicious user could still run the script despite lacking execute permissions:",vt,ge,S,ut,G,Kt='<a href="#fun-exercise-restore-less-than-code-class-inline-code-block-greater-than-chmod-less-than-code-greater-than">Fun Exercise: Restore <code class="inline-code-block">chmod</code></a>',ft,be,Gt='For a challenge, try restoring the <code class="inline-code-block">chmod</code> command in a Docker container where it has been stripped of execute permissions:',ht,ke,O,mt,Ce,Jt="Run it with:",$t,we,I,_t,J,Qt='<a href="#key-takeaways">Key Takeaways</a>',xt,Ee,Xt="<li>Execute permissions are not sufficient on their own; they require read permissions to function.</li> <li>Restricting script execution often requires removing both read and execute permissions.</li> <li>Always consider the interplay between permissions when setting up secure systems.</li>",gt,ye,Yt="With this understanding, you can better manage Linux permissions and secure your systems effectively.",Se;return H=new as({props:{explanation:"Executable and Linkable Format",$$slots:{default:[is]},$$scope:{ctx:_}}}),T=new q({props:{$$slots:{default:[ls]},$$scope:{ctx:_}}}),M=new q({props:{$$slots:{default:[os]},$$scope:{ctx:_}}}),P=new q({props:{$$slots:{default:[cs]},$$scope:{ctx:_}}}),R=new q({props:{$$slots:{default:[rs]},$$scope:{ctx:_}}}),D=new q({props:{$$slots:{default:[ds]},$$scope:{ctx:_}}}),S=new q({props:{$$slots:{default:[ps]},$$scope:{ctx:_}}}),O=new q({props:{$$slots:{default:[vs]},$$scope:{ctx:_}}}),I=new q({props:{$$slots:{default:[us]},$$scope:{ctx:_}}}),{c(){e=a("article"),n=a("h2"),n.innerHTML=o,$=r(),l=a("p"),l.innerHTML=c,f=r(),X=a("p"),X.textContent=Ct,Oe=r(),N=a("h3"),N.innerHTML=wt,Ie=r(),Y=a("p"),Y.textContent=Et,qe=r(),Z=a("ol"),Z.innerHTML=yt,Ue=r(),y=a("ul"),ee=a("li"),ee.textContent=Lt,Ae=r(),j=a("li"),Fe=bt("For binaries, it examines the "),x(H.$$.fragment),Ne=bt(" header."),je=r(),te=a("li"),te.textContent=Ht,Ve=r(),V=a("ol"),V.innerHTML=Tt,We=r(),se=a("ul"),se.innerHTML=Mt,ze=r(),ne=a("p"),ne.textContent=Pt,Be=r(),W=a("h3"),W.innerHTML=Rt,Ke=r(),ae=a("p"),ae.textContent=Dt,Ge=r(),ie=a("div"),x(T.$$.fragment),Je=r(),le=a("p"),le.textContent=St,Qe=r(),oe=a("div"),x(M.$$.fragment),Xe=r(),ce=a("p"),ce.textContent=Ot,Ye=r(),z=a("h3"),z.innerHTML=It,Ze=r(),re=a("p"),re.textContent=qt,et=r(),de=a("div"),x(P.$$.fragment),tt=r(),B=a("h3"),B.innerHTML=Ut,st=r(),pe=a("p"),pe.textContent=At,nt=r(),ve=a("p"),ve.textContent=Ft,at=r(),ue=a("ol"),ue.innerHTML=Nt,it=r(),fe=a("p"),fe.textContent=jt,lt=r(),K=a("h3"),K.innerHTML=Vt,ot=r(),he=a("p"),he.textContent=Wt,ct=r(),me=a("div"),x(R.$$.fragment),rt=r(),$e=a("p"),$e.textContent=zt,dt=r(),_e=a("div"),x(D.$$.fragment),pt=r(),xe=a("p"),xe.textContent=Bt,vt=r(),ge=a("div"),x(S.$$.fragment),ut=r(),G=a("h3"),G.innerHTML=Kt,ft=r(),be=a("p"),be.innerHTML=Gt,ht=r(),ke=a("div"),x(O.$$.fragment),mt=r(),Ce=a("p"),Ce.textContent=Jt,$t=r(),we=a("div"),x(I.$$.fragment),_t=r(),J=a("h3"),J.innerHTML=Qt,xt=r(),Ee=a("ul"),Ee.innerHTML=Xt,gt=r(),ye=a("p"),ye.textContent=Yt,this.h()},l(v){e=i(v,"ARTICLE",{slot:!0});var t=h(e);n=i(t,"H2",{id:!0,"data-svelte-h":!0}),u(n)!=="svelte-hkqwq0"&&(n.innerHTML=o),$=d(t),l=i(t,"P",{"data-svelte-h":!0}),u(l)!=="svelte-hq1l83"&&(l.innerHTML=c),f=d(t),X=i(t,"P",{"data-svelte-h":!0}),u(X)!=="svelte-1136d43"&&(X.textContent=Ct),Oe=d(t),N=i(t,"H3",{id:!0,"data-svelte-h":!0}),u(N)!=="svelte-eb013m"&&(N.innerHTML=wt),Ie=d(t),Y=i(t,"P",{"data-svelte-h":!0}),u(Y)!=="svelte-1r9f3i3"&&(Y.textContent=Et),qe=d(t),Z=i(t,"OL",{"data-svelte-h":!0}),u(Z)!=="svelte-iug539"&&(Z.innerHTML=yt),Ue=d(t),y=i(t,"UL",{});var L=h(y);ee=i(L,"LI",{"data-svelte-h":!0}),u(ee)!=="svelte-qbwntp"&&(ee.textContent=Lt),Ae=d(L),j=i(L,"LI",{});var Q=h(j);Fe=kt(Q,"For binaries, it examines the "),g(H.$$.fragment,Q),Ne=kt(Q," header."),Q.forEach(p),je=d(L),te=i(L,"LI",{"data-svelte-h":!0}),u(te)!=="svelte-ltv86w"&&(te.textContent=Ht),L.forEach(p),Ve=d(t),V=i(t,"OL",{start:!0,"data-svelte-h":!0}),u(V)!=="svelte-15xxlsa"&&(V.innerHTML=Tt),We=d(t),se=i(t,"UL",{"data-svelte-h":!0}),u(se)!=="svelte-1gwjyk5"&&(se.innerHTML=Mt),ze=d(t),ne=i(t,"P",{"data-svelte-h":!0}),u(ne)!=="svelte-xzjud1"&&(ne.textContent=Pt),Be=d(t),W=i(t,"H3",{id:!0,"data-svelte-h":!0}),u(W)!=="svelte-1s7jq2p"&&(W.innerHTML=Rt),Ke=d(t),ae=i(t,"P",{"data-svelte-h":!0}),u(ae)!=="svelte-1i4ftex"&&(ae.textContent=Dt),Ge=d(t),ie=i(t,"DIV",{class:!0});var Le=h(ie);g(T.$$.fragment,Le),Le.forEach(p),Je=d(t),le=i(t,"P",{"data-svelte-h":!0}),u(le)!=="svelte-1v8bh14"&&(le.textContent=St),Qe=d(t),oe=i(t,"DIV",{class:!0});var He=h(oe);g(M.$$.fragment,He),He.forEach(p),Xe=d(t),ce=i(t,"P",{"data-svelte-h":!0}),u(ce)!=="svelte-1f2lxjk"&&(ce.textContent=Ot),Ye=d(t),z=i(t,"H3",{id:!0,"data-svelte-h":!0}),u(z)!=="svelte-he6e07"&&(z.innerHTML=It),Ze=d(t),re=i(t,"P",{"data-svelte-h":!0}),u(re)!=="svelte-ggi1q5"&&(re.textContent=qt),et=d(t),de=i(t,"DIV",{class:!0});var Te=h(de);g(P.$$.fragment,Te),Te.forEach(p),tt=d(t),B=i(t,"H3",{id:!0,"data-svelte-h":!0}),u(B)!=="svelte-2uovhr"&&(B.innerHTML=Ut),st=d(t),pe=i(t,"P",{"data-svelte-h":!0}),u(pe)!=="svelte-1ij9jj2"&&(pe.textContent=At),nt=d(t),ve=i(t,"P",{"data-svelte-h":!0}),u(ve)!=="svelte-1gkqha7"&&(ve.textContent=Ft),at=d(t),ue=i(t,"OL",{"data-svelte-h":!0}),u(ue)!=="svelte-oyetqr"&&(ue.innerHTML=Nt),it=d(t),fe=i(t,"P",{"data-svelte-h":!0}),u(fe)!=="svelte-1aoqvd9"&&(fe.textContent=jt),lt=d(t),K=i(t,"H3",{id:!0,"data-svelte-h":!0}),u(K)!=="svelte-og4afk"&&(K.innerHTML=Vt),ot=d(t),he=i(t,"P",{"data-svelte-h":!0}),u(he)!=="svelte-uxtccu"&&(he.textContent=Wt),ct=d(t),me=i(t,"DIV",{class:!0});var Me=h(me);g(R.$$.fragment,Me),Me.forEach(p),rt=d(t),$e=i(t,"P",{"data-svelte-h":!0}),u($e)!=="svelte-1blcsba"&&($e.textContent=zt),dt=d(t),_e=i(t,"DIV",{class:!0});var Pe=h(_e);g(D.$$.fragment,Pe),Pe.forEach(p),pt=d(t),xe=i(t,"P",{"data-svelte-h":!0}),u(xe)!=="svelte-1xk2d92"&&(xe.textContent=Bt),vt=d(t),ge=i(t,"DIV",{class:!0});var Re=h(ge);g(S.$$.fragment,Re),Re.forEach(p),ut=d(t),G=i(t,"H3",{id:!0,"data-svelte-h":!0}),u(G)!=="svelte-108byhd"&&(G.innerHTML=Kt),ft=d(t),be=i(t,"P",{"data-svelte-h":!0}),u(be)!=="svelte-13tz1mv"&&(be.innerHTML=Gt),ht=d(t),ke=i(t,"DIV",{class:!0});var De=h(ke);g(O.$$.fragment,De),De.forEach(p),mt=d(t),Ce=i(t,"P",{"data-svelte-h":!0}),u(Ce)!=="svelte-1lc4dto"&&(Ce.textContent=Jt),$t=d(t),we=i(t,"DIV",{class:!0});var Zt=h(we);g(I.$$.fragment,Zt),Zt.forEach(p),_t=d(t),J=i(t,"H3",{id:!0,"data-svelte-h":!0}),u(J)!=="svelte-jeif8v"&&(J.innerHTML=Qt),xt=d(t),Ee=i(t,"UL",{"data-svelte-h":!0}),u(Ee)!=="svelte-1n0cill"&&(Ee.innerHTML=Xt),gt=d(t),ye=i(t,"P",{"data-svelte-h":!0}),u(ye)!=="svelte-6druoh"&&(ye.textContent=Yt),t.forEach(p),this.h()},h(){m(n,"id","linux-permissions"),m(N,"id","the-role-of-execute-and-read-permissions"),m(V,"start","2"),m(W,"id","example-1-script-without-read-permission"),m(ie,"class","code-block "),m(oe,"class","code-block "),m(z,"id","example-2-script-without-execute-permission"),m(de,"class","code-block "),m(B,"id","implications-for-security"),m(K,"id","a-practical-docker-example"),m(me,"class","code-block "),m(_e,"class","code-block "),m(ge,"class","code-block "),m(G,"id","fun-exercise-restore-less-than-code-class-inline-code-block-greater-than-chmod-less-than-code-greater-than"),m(ke,"class","code-block "),m(we,"class","code-block "),m(J,"id","key-takeaways"),m(e,"slot","post_content")},m(v,t){E(v,e,t),s(e,n),s(e,$),s(e,l),s(e,f),s(e,X),s(e,Oe),s(e,N),s(e,Ie),s(e,Y),s(e,qe),s(e,Z),s(e,Ue),s(e,y),s(y,ee),s(y,Ae),s(y,j),s(j,Fe),b(H,j,null),s(j,Ne),s(y,je),s(y,te),s(e,Ve),s(e,V),s(e,We),s(e,se),s(e,ze),s(e,ne),s(e,Be),s(e,W),s(e,Ke),s(e,ae),s(e,Ge),s(e,ie),b(T,ie,null),s(e,Je),s(e,le),s(e,Qe),s(e,oe),b(M,oe,null),s(e,Xe),s(e,ce),s(e,Ye),s(e,z),s(e,Ze),s(e,re),s(e,et),s(e,de),b(P,de,null),s(e,tt),s(e,B),s(e,st),s(e,pe),s(e,nt),s(e,ve),s(e,at),s(e,ue),s(e,it),s(e,fe),s(e,lt),s(e,K),s(e,ot),s(e,he),s(e,ct),s(e,me),b(R,me,null),s(e,rt),s(e,$e),s(e,dt),s(e,_e),b(D,_e,null),s(e,pt),s(e,xe),s(e,vt),s(e,ge),b(S,ge,null),s(e,ut),s(e,G),s(e,ft),s(e,be),s(e,ht),s(e,ke),b(O,ke,null),s(e,mt),s(e,Ce),s(e,$t),s(e,we),b(I,we,null),s(e,_t),s(e,J),s(e,xt),s(e,Ee),s(e,gt),s(e,ye),Se=!0},p(v,t){const L={};t&1&&(L.$$scope={dirty:t,ctx:v}),H.$set(L);const Q={};t&1&&(Q.$$scope={dirty:t,ctx:v}),T.$set(Q);const Le={};t&1&&(Le.$$scope={dirty:t,ctx:v}),M.$set(Le);const He={};t&1&&(He.$$scope={dirty:t,ctx:v}),P.$set(He);const Te={};t&1&&(Te.$$scope={dirty:t,ctx:v}),R.$set(Te);const Me={};t&1&&(Me.$$scope={dirty:t,ctx:v}),D.$set(Me);const Pe={};t&1&&(Pe.$$scope={dirty:t,ctx:v}),S.$set(Pe);const Re={};t&1&&(Re.$$scope={dirty:t,ctx:v}),O.$set(Re);const De={};t&1&&(De.$$scope={dirty:t,ctx:v}),I.$set(De)},i(v){Se||(k(H.$$.fragment,v),k(T.$$.fragment,v),k(M.$$.fragment,v),k(P.$$.fragment,v),k(R.$$.fragment,v),k(D.$$.fragment,v),k(S.$$.fragment,v),k(O.$$.fragment,v),k(I.$$.fragment,v),Se=!0)},o(v){C(H.$$.fragment,v),C(T.$$.fragment,v),C(M.$$.fragment,v),C(P.$$.fragment,v),C(R.$$.fragment,v),C(D.$$.fragment,v),C(S.$$.fragment,v),C(O.$$.fragment,v),C(I.$$.fragment,v),Se=!1},d(v){v&&p(e),w(H),w(T),w(M),w(P),w(R),w(D),w(S),w(O),w(I)}}}function hs(_){let e,n;return e=new ns({props:{$$slots:{post_content:[fs]},$$scope:{ctx:_}}}),{c(){x(e.$$.fragment)},l(o){g(e.$$.fragment,o)},m(o,$){b(e,o,$),n=!0},p(o,[$]){const l={};$&1&&(l.$$scope={dirty:$,ctx:o}),e.$set(l)},i(o){n||(k(e.$$.fragment,o),n=!0)},o(o){C(e.$$.fragment,o),n=!1},d(o){w(e,o)}}}class ks extends ts{constructor(e){super(),ss(this,e,null,hs,es,{})}}export{ks as component};
